Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> translation_unit
Rule 1     translation_unit -> external_declaration
Rule 2     translation_unit -> translation_unit external_declaration
Rule 3     external_declaration -> function_definition
Rule 4     external_declaration -> declaration
Rule 5     function_definition -> declaration_specifiers declarator declaration_list compound_statement
Rule 6     function_definition -> declarator declaration_list compound_statement
Rule 7     function_definition -> declarator compound_statement
Rule 8     function_definition -> declaration_specifiers declarator compound_statement
Rule 9     declaration -> declaration_specifiers init_declarator_list SEMI
Rule 10    declaration -> declaration_specifiers SEMI
Rule 11    declaration_list -> declaration
Rule 12    declaration_list -> declaration_list declaration
Rule 13    declaration_specifiers -> storage_class_specifier declaration_specifiers
Rule 14    declaration_specifiers -> type_specifier declaration_specifiers
Rule 15    declaration_specifiers -> type_qualifier declaration_specifiers
Rule 16    declaration_specifiers -> storage_class_specifier
Rule 17    declaration_specifiers -> type_specifier
Rule 18    declaration_specifiers -> type_qualifier
Rule 19    storage_class_specifier -> AUTO
Rule 20    storage_class_specifier -> REGISTER
Rule 21    storage_class_specifier -> STATIC
Rule 22    storage_class_specifier -> EXTERN
Rule 23    storage_class_specifier -> TYPEDEF
Rule 24    type_specifier -> VOID
Rule 25    type_specifier -> BOOL
Rule 26    type_specifier -> CHAR
Rule 27    type_specifier -> SHORT
Rule 28    type_specifier -> INT
Rule 29    type_specifier -> LONG
Rule 30    type_specifier -> FLOAT
Rule 31    type_specifier -> DOUBLE
Rule 32    type_specifier -> SIGNED
Rule 33    type_specifier -> UNSIGNED
Rule 34    type_specifier -> struct_or_union_specifier
Rule 35    type_specifier -> enum_specifier
Rule 36    type_specifier -> TYPEID
Rule 37    type_qualifier -> CONST
Rule 38    type_qualifier -> VOLATILE
Rule 39    struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE
Rule 40    struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
Rule 41    struct_or_union_specifier -> struct_or_union ID
Rule 42    struct_or_union -> STRUCT
Rule 43    struct_or_union -> UNION
Rule 44    struct_declaration_list -> struct_declaration
Rule 45    struct_declaration_list -> struct_declaration_list struct_declaration
Rule 46    init_declarator_list -> init_declarator
Rule 47    init_declarator_list -> init_declarator_list COMMA init_declarator
Rule 48    init_declarator -> declarator
Rule 49    init_declarator -> declarator EQUALS initializer
Rule 50    struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI
Rule 51    specifier_qualifier_list -> type_specifier specifier_qualifier_list
Rule 52    specifier_qualifier_list -> type_specifier
Rule 53    specifier_qualifier_list -> type_qualifier specifier_qualifier_list
Rule 54    specifier_qualifier_list -> type_qualifier
Rule 55    struct_declarator_list -> struct_declarator
Rule 56    struct_declarator_list -> struct_declarator_list COMMA struct_declarator
Rule 57    struct_declarator -> declarator
Rule 58    struct_declarator -> declarator COLON constant_expression
Rule 59    struct_declarator -> COLON constant_expression
Rule 60    enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE
Rule 61    enum_specifier -> ENUM LBRACE enumerator_list RBRACE
Rule 62    enum_specifier -> ENUM ID
Rule 63    enumerator_list -> enumerator
Rule 64    enumerator_list -> enumerator_list COMMA enumerator
Rule 65    enumerator -> ID
Rule 66    enumerator -> ID EQUALS constant_expression
Rule 67    declarator -> pointer direct_declarator
Rule 68    declarator -> direct_declarator
Rule 69    direct_declarator -> ID
Rule 70    direct_declarator -> LPAREN declarator RPAREN
Rule 71    direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET
Rule 72    direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
Rule 73    direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
Rule 74    direct_declarator -> direct_declarator LPAREN RPAREN
Rule 75    pointer -> TIMES type_qualifier_list
Rule 76    pointer -> TIMES
Rule 77    pointer -> TIMES type_qualifier_list pointer
Rule 78    pointer -> TIMES pointer
Rule 79    type_qualifier_list -> type_qualifier
Rule 80    type_qualifier_list -> type_qualifier_list type_qualifier
Rule 81    parameter_type_list -> parameter_list
Rule 82    parameter_type_list -> parameter_list COMMA ELLIPSIS
Rule 83    parameter_list -> parameter_declaration
Rule 84    parameter_list -> parameter_list COMMA parameter_declaration
Rule 85    parameter_declaration -> declaration_specifiers declarator
Rule 86    parameter_declaration -> declaration_specifiers abstract_declarator_opt
Rule 87    identifier_list -> ID
Rule 88    identifier_list -> identifier_list COMMA ID
Rule 89    initializer -> assignment_expression
Rule 90    initializer -> LBRACE initializer_list RBRACE
Rule 91    initializer -> LBRACE initializer_list COMMA RBRACE
Rule 92    initializer_list -> initializer
Rule 93    initializer_list -> initializer_list COMMA initializer
Rule 94    type_name -> specifier_qualifier_list abstract_declarator_opt
Rule 95    abstract_declarator_opt -> empty
Rule 96    abstract_declarator_opt -> abstract_declarator
Rule 97    abstract_declarator -> pointer
Rule 98    abstract_declarator -> pointer direct_abstract_declarator
Rule 99    abstract_declarator -> direct_abstract_declarator
Rule 100   direct_abstract_declarator -> LPAREN abstract_declarator RPAREN
Rule 101   direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET
Rule 102   direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET
Rule 103   direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
Rule 104   direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN
Rule 105   constant_expression_opt -> empty
Rule 106   constant_expression_opt -> constant_expression
Rule 107   parameter_type_list_opt -> empty
Rule 108   parameter_type_list_opt -> parameter_type_list
Rule 109   statement -> labeled_statement
Rule 110   statement -> expression_statement
Rule 111   statement -> compound_statement
Rule 112   statement -> selection_statement
Rule 113   statement -> iteration_statement
Rule 114   statement -> jump_statement
Rule 115   labeled_statement -> ID COLON statement
Rule 116   labeled_statement -> CASE constant_expression COLON statement
Rule 117   labeled_statement -> DEFAULT COLON statement
Rule 118   expression_statement -> expression_opt SEMI
Rule 119   compound_statement -> LBRACE declaration_list statement_list RBRACE
Rule 120   compound_statement -> LBRACE statement_list RBRACE
Rule 121   compound_statement -> LBRACE declaration_list RBRACE
Rule 122   compound_statement -> LBRACE RBRACE
Rule 123   statement_list -> statement
Rule 124   statement_list -> statement_list statement
Rule 125   selection_statement -> IF LPAREN expression RPAREN statement
Rule 126   selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 127   selection_statement -> SWITCH LPAREN expression RPAREN statement
Rule 128   iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 129   iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
Rule 130   iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI
Rule 131   jump_statement -> GOTO ID SEMI
Rule 132   jump_statement -> CONTINUE SEMI
Rule 133   jump_statement -> BREAK SEMI
Rule 134   jump_statement -> RETURN expression_opt SEMI
Rule 135   expression_opt -> empty
Rule 136   expression_opt -> expression
Rule 137   expression -> assignment_expression
Rule 138   expression -> expression COMMA assignment_expression
Rule 139   assignment_expression -> conditional_expression
Rule 140   assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 141   assignment_operator -> EQUALS
Rule 142   assignment_operator -> TIMESEQUAL
Rule 143   assignment_operator -> DIVEQUAL
Rule 144   assignment_operator -> MODEQUAL
Rule 145   assignment_operator -> PLUSEQUAL
Rule 146   assignment_operator -> MINUSEQUAL
Rule 147   assignment_operator -> LSHIFTEQUAL
Rule 148   assignment_operator -> RSHIFTEQUAL
Rule 149   assignment_operator -> ANDEQUAL
Rule 150   assignment_operator -> OREQUAL
Rule 151   assignment_operator -> XOREQUAL
Rule 152   conditional_expression -> logical_or_expression
Rule 153   conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression
Rule 154   constant_expression -> conditional_expression
Rule 155   logical_or_expression -> logical_and_expression
Rule 156   logical_or_expression -> logical_or_expression LOR logical_and_expression
Rule 157   logical_and_expression -> inclusive_or_expression
Rule 158   logical_and_expression -> logical_and_expression LAND inclusive_or_expression
Rule 159   inclusive_or_expression -> exclusive_or_expression
Rule 160   inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression
Rule 161   exclusive_or_expression -> and_expression
Rule 162   exclusive_or_expression -> exclusive_or_expression XOR and_expression
Rule 163   and_expression -> equality_expression
Rule 164   and_expression -> and_expression AND equality_expression
Rule 165   equality_expression -> relational_expression
Rule 166   equality_expression -> equality_expression EQ relational_expression
Rule 167   equality_expression -> equality_expression NE relational_expression
Rule 168   relational_expression -> shift_expression
Rule 169   relational_expression -> relational_expression LT shift_expression
Rule 170   relational_expression -> relational_expression GT shift_expression
Rule 171   relational_expression -> relational_expression LE shift_expression
Rule 172   relational_expression -> relational_expression GE shift_expression
Rule 173   shift_expression -> additive_expression
Rule 174   shift_expression -> shift_expression LSHIFT additive_expression
Rule 175   shift_expression -> shift_expression RSHIFT additive_expression
Rule 176   additive_expression -> multiplicative_expression
Rule 177   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 178   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 179   multiplicative_expression -> cast_expression
Rule 180   multiplicative_expression -> multiplicative_expression TIMES cast_expression
Rule 181   multiplicative_expression -> multiplicative_expression DIVIDE cast_expression
Rule 182   multiplicative_expression -> multiplicative_expression MOD cast_expression
Rule 183   cast_expression -> unary_expression
Rule 184   cast_expression -> LPAREN type_name RPAREN cast_expression
Rule 185   unary_expression -> postfix_expression
Rule 186   unary_expression -> PLUSPLUS unary_expression
Rule 187   unary_expression -> MINUSMINUS unary_expression
Rule 188   unary_expression -> unary_operator cast_expression
Rule 189   unary_expression -> SIZEOF unary_expression
Rule 190   unary_expression -> SIZEOF LPAREN type_name RPAREN
Rule 191   unary_operator -> AND
Rule 192   unary_operator -> TIMES
Rule 193   unary_operator -> PLUS
Rule 194   unary_operator -> MINUS
Rule 195   unary_operator -> NOT
Rule 196   unary_operator -> LNOT
Rule 197   postfix_expression -> primary_expression
Rule 198   postfix_expression -> postfix_expression LBRACKET expression RBRACKET
Rule 199   postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
Rule 200   postfix_expression -> postfix_expression LPAREN RPAREN
Rule 201   postfix_expression -> postfix_expression PERIOD ID
Rule 202   postfix_expression -> postfix_expression ARROW ID
Rule 203   postfix_expression -> postfix_expression PLUSPLUS
Rule 204   postfix_expression -> postfix_expression MINUSMINUS
Rule 205   primary_expression -> ID
Rule 206   primary_expression -> constant
Rule 207   primary_expression -> SCONST
Rule 208   primary_expression -> LPAREN expression RPAREN
Rule 209   argument_expression_list -> assignment_expression
Rule 210   argument_expression_list -> argument_expression_list COMMA assignment_expression
Rule 211   constant -> ICONST
Rule 212   constant -> FCONST
Rule 213   constant -> CCONST
Rule 214   empty -> <empty>

Terminals, with rules where they appear

AND                  : 164 191
ANDEQUAL             : 149
ARROW                : 202
AUTO                 : 19
BOOL                 : 25
BREAK                : 133
CASE                 : 116
CCONST               : 213
CHAR                 : 26
COLON                : 58 59 115 116 117 153
COMMA                : 47 56 64 82 84 88 91 93 138 210
CONDOP               : 153
CONST                : 37
CONTINUE             : 132
DEFAULT              : 117
DIVEQUAL             : 143
DIVIDE               : 181
DO                   : 130
DOUBLE               : 31
ELLIPSIS             : 82
ELSE                 : 126
ENUM                 : 60 61 62
EQ                   : 166
EQUALS               : 49 66 141
EXTERN               : 22
FCONST               : 212
FLOAT                : 30
FOR                  : 129
GE                   : 172
GOTO                 : 131
GT                   : 170
ICONST               : 211
ID                   : 39 41 60 62 65 66 69 87 88 115 131 201 202 205
IF                   : 125 126
INT                  : 28
LAND                 : 158
LBRACE               : 39 40 60 61 90 91 119 120 121 122
LBRACKET             : 71 101 102 198
LE                   : 171
LNOT                 : 196
LONG                 : 29
LOR                  : 156
LPAREN               : 70 72 73 74 100 103 104 125 126 127 128 129 130 184 190 199 200 208
LSHIFT               : 174
LSHIFTEQUAL          : 147
LT                   : 169
MINUS                : 178 194
MINUSEQUAL           : 146
MINUSMINUS           : 187 204
MOD                  : 182
MODEQUAL             : 144
NE                   : 167
NOT                  : 195
OR                   : 160
OREQUAL              : 150
PERIOD               : 201
PLUS                 : 177 193
PLUSEQUAL            : 145
PLUSPLUS             : 186 203
RBRACE               : 39 40 60 61 90 91 119 120 121 122
RBRACKET             : 71 101 102 198
REGISTER             : 20
RETURN               : 134
RPAREN               : 70 72 73 74 100 103 104 125 126 127 128 129 130 184 190 199 200 208
RSHIFT               : 175
RSHIFTEQUAL          : 148
SCONST               : 207
SEMI                 : 9 10 50 118 129 129 130 131 132 133 134
SHORT                : 27
SIGNED               : 32
SIZEOF               : 189 190
STATIC               : 21
STRUCT               : 42
SWITCH               : 127
TIMES                : 75 76 77 78 180 192
TIMESEQUAL           : 142
TYPEDEF              : 23
TYPEID               : 36
UNION                : 43
UNSIGNED             : 33
VOID                 : 24
VOLATILE             : 38
WHILE                : 128 130
XOR                  : 162
XOREQUAL             : 151
error                : 

Nonterminals, with rules where they appear

abstract_declarator  : 96 100
abstract_declarator_opt : 86 94
additive_expression  : 173 174 175 177 178
and_expression       : 161 162 164
argument_expression_list : 199 210
assignment_expression : 89 137 138 140 209 210
assignment_operator  : 140
cast_expression      : 179 180 181 182 184 188
compound_statement   : 5 6 7 8 111
conditional_expression : 139 153 154
constant             : 206
constant_expression  : 58 59 66 106 116
constant_expression_opt : 71 101 102
declaration          : 4 11 12
declaration_list     : 5 6 12 119 121
declaration_specifiers : 5 8 9 10 13 14 15 85 86
declarator           : 5 6 7 8 48 49 57 58 70 85
direct_abstract_declarator : 98 99 101 103
direct_declarator    : 67 68 71 72 73 74
empty                : 95 105 107 135
enum_specifier       : 35
enumerator           : 63 64
enumerator_list      : 60 61 64
equality_expression  : 163 164 166 167
exclusive_or_expression : 159 160 162
expression           : 125 126 127 128 130 136 138 153 198 208
expression_opt       : 118 129 129 129 134
expression_statement : 110
external_declaration : 1 2
function_definition  : 3
identifier_list      : 73 88
inclusive_or_expression : 157 158 160
init_declarator      : 46 47
init_declarator_list : 9 47
initializer          : 49 92 93
initializer_list     : 90 91 93
iteration_statement  : 113
jump_statement       : 114
labeled_statement    : 109
logical_and_expression : 155 156 158
logical_or_expression : 152 153 156
multiplicative_expression : 176 177 178 180 181 182
parameter_declaration : 83 84
parameter_list       : 81 82 84
parameter_type_list  : 72 108
parameter_type_list_opt : 103 104
pointer              : 67 77 78 97 98
postfix_expression   : 185 198 199 200 201 202 203 204
primary_expression   : 197
relational_expression : 165 166 167 169 170 171 172
selection_statement  : 112
shift_expression     : 168 169 170 171 172 174 175
specifier_qualifier_list : 50 51 53 94
statement            : 115 116 117 123 124 125 126 126 127 128 129 130
statement_list       : 119 120 124
storage_class_specifier : 13 16
struct_declaration   : 44 45
struct_declaration_list : 39 40 45
struct_declarator    : 55 56
struct_declarator_list : 50 56
struct_or_union      : 39 40 41
struct_or_union_specifier : 34
translation_unit     : 2 0
type_name            : 184 190
type_qualifier       : 15 18 53 54 79 80
type_qualifier_list  : 75 77 80
type_specifier       : 14 17 51 52
unary_expression     : 140 183 186 187 189
unary_operator       : 188

Parsing method: LALR

state 0

    (0) S' -> . translation_unit
    (1) translation_unit -> . external_declaration
    (2) translation_unit -> . translation_unit external_declaration
    (3) external_declaration -> . function_definition
    (4) external_declaration -> . declaration
    (5) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (6) function_definition -> . declarator declaration_list compound_statement
    (7) function_definition -> . declarator compound_statement
    (8) function_definition -> . declaration_specifiers declarator compound_statement
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    translation_unit               shift and go to state 1
    external_declaration           shift and go to state 2
    function_definition            shift and go to state 3
    declaration                    shift and go to state 4
    declaration_specifiers         shift and go to state 5
    declarator                     shift and go to state 6
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 1

    (0) S' -> translation_unit .
    (2) translation_unit -> translation_unit . external_declaration
    (3) external_declaration -> . function_definition
    (4) external_declaration -> . declaration
    (5) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (6) function_definition -> . declarator declaration_list compound_statement
    (7) function_definition -> . declarator compound_statement
    (8) function_definition -> . declaration_specifiers declarator compound_statement
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    external_declaration           shift and go to state 39
    function_definition            shift and go to state 3
    declaration                    shift and go to state 4
    declaration_specifiers         shift and go to state 5
    declarator                     shift and go to state 6
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 2

    (1) translation_unit -> external_declaration .

    AUTO            reduce using rule 1 (translation_unit -> external_declaration .)
    REGISTER        reduce using rule 1 (translation_unit -> external_declaration .)
    STATIC          reduce using rule 1 (translation_unit -> external_declaration .)
    EXTERN          reduce using rule 1 (translation_unit -> external_declaration .)
    TYPEDEF         reduce using rule 1 (translation_unit -> external_declaration .)
    VOID            reduce using rule 1 (translation_unit -> external_declaration .)
    BOOL            reduce using rule 1 (translation_unit -> external_declaration .)
    CHAR            reduce using rule 1 (translation_unit -> external_declaration .)
    SHORT           reduce using rule 1 (translation_unit -> external_declaration .)
    INT             reduce using rule 1 (translation_unit -> external_declaration .)
    LONG            reduce using rule 1 (translation_unit -> external_declaration .)
    FLOAT           reduce using rule 1 (translation_unit -> external_declaration .)
    DOUBLE          reduce using rule 1 (translation_unit -> external_declaration .)
    SIGNED          reduce using rule 1 (translation_unit -> external_declaration .)
    UNSIGNED        reduce using rule 1 (translation_unit -> external_declaration .)
    TYPEID          reduce using rule 1 (translation_unit -> external_declaration .)
    CONST           reduce using rule 1 (translation_unit -> external_declaration .)
    VOLATILE        reduce using rule 1 (translation_unit -> external_declaration .)
    TIMES           reduce using rule 1 (translation_unit -> external_declaration .)
    ID              reduce using rule 1 (translation_unit -> external_declaration .)
    LPAREN          reduce using rule 1 (translation_unit -> external_declaration .)
    ENUM            reduce using rule 1 (translation_unit -> external_declaration .)
    STRUCT          reduce using rule 1 (translation_unit -> external_declaration .)
    UNION           reduce using rule 1 (translation_unit -> external_declaration .)
    $end            reduce using rule 1 (translation_unit -> external_declaration .)


state 3

    (3) external_declaration -> function_definition .

    AUTO            reduce using rule 3 (external_declaration -> function_definition .)
    REGISTER        reduce using rule 3 (external_declaration -> function_definition .)
    STATIC          reduce using rule 3 (external_declaration -> function_definition .)
    EXTERN          reduce using rule 3 (external_declaration -> function_definition .)
    TYPEDEF         reduce using rule 3 (external_declaration -> function_definition .)
    VOID            reduce using rule 3 (external_declaration -> function_definition .)
    BOOL            reduce using rule 3 (external_declaration -> function_definition .)
    CHAR            reduce using rule 3 (external_declaration -> function_definition .)
    SHORT           reduce using rule 3 (external_declaration -> function_definition .)
    INT             reduce using rule 3 (external_declaration -> function_definition .)
    LONG            reduce using rule 3 (external_declaration -> function_definition .)
    FLOAT           reduce using rule 3 (external_declaration -> function_definition .)
    DOUBLE          reduce using rule 3 (external_declaration -> function_definition .)
    SIGNED          reduce using rule 3 (external_declaration -> function_definition .)
    UNSIGNED        reduce using rule 3 (external_declaration -> function_definition .)
    TYPEID          reduce using rule 3 (external_declaration -> function_definition .)
    CONST           reduce using rule 3 (external_declaration -> function_definition .)
    VOLATILE        reduce using rule 3 (external_declaration -> function_definition .)
    TIMES           reduce using rule 3 (external_declaration -> function_definition .)
    ID              reduce using rule 3 (external_declaration -> function_definition .)
    LPAREN          reduce using rule 3 (external_declaration -> function_definition .)
    ENUM            reduce using rule 3 (external_declaration -> function_definition .)
    STRUCT          reduce using rule 3 (external_declaration -> function_definition .)
    UNION           reduce using rule 3 (external_declaration -> function_definition .)
    $end            reduce using rule 3 (external_declaration -> function_definition .)


state 4

    (4) external_declaration -> declaration .

    AUTO            reduce using rule 4 (external_declaration -> declaration .)
    REGISTER        reduce using rule 4 (external_declaration -> declaration .)
    STATIC          reduce using rule 4 (external_declaration -> declaration .)
    EXTERN          reduce using rule 4 (external_declaration -> declaration .)
    TYPEDEF         reduce using rule 4 (external_declaration -> declaration .)
    VOID            reduce using rule 4 (external_declaration -> declaration .)
    BOOL            reduce using rule 4 (external_declaration -> declaration .)
    CHAR            reduce using rule 4 (external_declaration -> declaration .)
    SHORT           reduce using rule 4 (external_declaration -> declaration .)
    INT             reduce using rule 4 (external_declaration -> declaration .)
    LONG            reduce using rule 4 (external_declaration -> declaration .)
    FLOAT           reduce using rule 4 (external_declaration -> declaration .)
    DOUBLE          reduce using rule 4 (external_declaration -> declaration .)
    SIGNED          reduce using rule 4 (external_declaration -> declaration .)
    UNSIGNED        reduce using rule 4 (external_declaration -> declaration .)
    TYPEID          reduce using rule 4 (external_declaration -> declaration .)
    CONST           reduce using rule 4 (external_declaration -> declaration .)
    VOLATILE        reduce using rule 4 (external_declaration -> declaration .)
    TIMES           reduce using rule 4 (external_declaration -> declaration .)
    ID              reduce using rule 4 (external_declaration -> declaration .)
    LPAREN          reduce using rule 4 (external_declaration -> declaration .)
    ENUM            reduce using rule 4 (external_declaration -> declaration .)
    STRUCT          reduce using rule 4 (external_declaration -> declaration .)
    UNION           reduce using rule 4 (external_declaration -> declaration .)
    $end            reduce using rule 4 (external_declaration -> declaration .)


state 5

    (5) function_definition -> declaration_specifiers . declarator declaration_list compound_statement
    (8) function_definition -> declaration_specifiers . declarator compound_statement
    (9) declaration -> declaration_specifiers . init_declarator_list SEMI
    (10) declaration -> declaration_specifiers . SEMI
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (46) init_declarator_list -> . init_declarator
    (47) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN
    (48) init_declarator -> . declarator
    (49) init_declarator -> . declarator EQUALS initializer

    SEMI            shift and go to state 42
    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34

    declarator                     shift and go to state 40
    init_declarator_list           shift and go to state 41
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11
    init_declarator                shift and go to state 43

state 6

    (6) function_definition -> declarator . declaration_list compound_statement
    (7) function_definition -> declarator . compound_statement
    (11) declaration_list -> . declaration
    (12) declaration_list -> . declaration_list declaration
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    LBRACE          shift and go to state 47
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    declaration_list               shift and go to state 44
    compound_statement             shift and go to state 45
    declaration                    shift and go to state 46
    declaration_specifiers         shift and go to state 48
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 7

    (13) declaration_specifiers -> storage_class_specifier . declaration_specifiers
    (16) declaration_specifiers -> storage_class_specifier .
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    SEMI            reduce using rule 16 (declaration_specifiers -> storage_class_specifier .)
    TIMES           reduce using rule 16 (declaration_specifiers -> storage_class_specifier .)
    ID              reduce using rule 16 (declaration_specifiers -> storage_class_specifier .)
    LPAREN          reduce using rule 16 (declaration_specifiers -> storage_class_specifier .)
    LBRACKET        reduce using rule 16 (declaration_specifiers -> storage_class_specifier .)
    COMMA           reduce using rule 16 (declaration_specifiers -> storage_class_specifier .)
    RPAREN          reduce using rule 16 (declaration_specifiers -> storage_class_specifier .)
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    storage_class_specifier        shift and go to state 7
    declaration_specifiers         shift and go to state 49
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 8

    (14) declaration_specifiers -> type_specifier . declaration_specifiers
    (17) declaration_specifiers -> type_specifier .
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    SEMI            reduce using rule 17 (declaration_specifiers -> type_specifier .)
    TIMES           reduce using rule 17 (declaration_specifiers -> type_specifier .)
    ID              reduce using rule 17 (declaration_specifiers -> type_specifier .)
    LPAREN          reduce using rule 17 (declaration_specifiers -> type_specifier .)
    LBRACKET        reduce using rule 17 (declaration_specifiers -> type_specifier .)
    COMMA           reduce using rule 17 (declaration_specifiers -> type_specifier .)
    RPAREN          reduce using rule 17 (declaration_specifiers -> type_specifier .)
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    type_specifier                 shift and go to state 8
    declaration_specifiers         shift and go to state 50
    storage_class_specifier        shift and go to state 7
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 9

    (15) declaration_specifiers -> type_qualifier . declaration_specifiers
    (18) declaration_specifiers -> type_qualifier .
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    SEMI            reduce using rule 18 (declaration_specifiers -> type_qualifier .)
    TIMES           reduce using rule 18 (declaration_specifiers -> type_qualifier .)
    ID              reduce using rule 18 (declaration_specifiers -> type_qualifier .)
    LPAREN          reduce using rule 18 (declaration_specifiers -> type_qualifier .)
    LBRACKET        reduce using rule 18 (declaration_specifiers -> type_qualifier .)
    COMMA           reduce using rule 18 (declaration_specifiers -> type_qualifier .)
    RPAREN          reduce using rule 18 (declaration_specifiers -> type_qualifier .)
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    type_qualifier                 shift and go to state 9
    declaration_specifiers         shift and go to state 51
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 10

    (67) declarator -> pointer . direct_declarator
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 34

    direct_declarator              shift and go to state 52

state 11

    (68) declarator -> direct_declarator .
    (71) direct_declarator -> direct_declarator . LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> direct_declarator . LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> direct_declarator . LPAREN identifier_list RPAREN
    (74) direct_declarator -> direct_declarator . LPAREN RPAREN

    LBRACE          reduce using rule 68 (declarator -> direct_declarator .)
    AUTO            reduce using rule 68 (declarator -> direct_declarator .)
    REGISTER        reduce using rule 68 (declarator -> direct_declarator .)
    STATIC          reduce using rule 68 (declarator -> direct_declarator .)
    EXTERN          reduce using rule 68 (declarator -> direct_declarator .)
    TYPEDEF         reduce using rule 68 (declarator -> direct_declarator .)
    VOID            reduce using rule 68 (declarator -> direct_declarator .)
    BOOL            reduce using rule 68 (declarator -> direct_declarator .)
    CHAR            reduce using rule 68 (declarator -> direct_declarator .)
    SHORT           reduce using rule 68 (declarator -> direct_declarator .)
    INT             reduce using rule 68 (declarator -> direct_declarator .)
    LONG            reduce using rule 68 (declarator -> direct_declarator .)
    FLOAT           reduce using rule 68 (declarator -> direct_declarator .)
    DOUBLE          reduce using rule 68 (declarator -> direct_declarator .)
    SIGNED          reduce using rule 68 (declarator -> direct_declarator .)
    UNSIGNED        reduce using rule 68 (declarator -> direct_declarator .)
    TYPEID          reduce using rule 68 (declarator -> direct_declarator .)
    CONST           reduce using rule 68 (declarator -> direct_declarator .)
    VOLATILE        reduce using rule 68 (declarator -> direct_declarator .)
    ENUM            reduce using rule 68 (declarator -> direct_declarator .)
    STRUCT          reduce using rule 68 (declarator -> direct_declarator .)
    UNION           reduce using rule 68 (declarator -> direct_declarator .)
    EQUALS          reduce using rule 68 (declarator -> direct_declarator .)
    SEMI            reduce using rule 68 (declarator -> direct_declarator .)
    COMMA           reduce using rule 68 (declarator -> direct_declarator .)
    RPAREN          reduce using rule 68 (declarator -> direct_declarator .)
    COLON           reduce using rule 68 (declarator -> direct_declarator .)
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 54


state 12

    (19) storage_class_specifier -> AUTO .

    AUTO            reduce using rule 19 (storage_class_specifier -> AUTO .)
    REGISTER        reduce using rule 19 (storage_class_specifier -> AUTO .)
    STATIC          reduce using rule 19 (storage_class_specifier -> AUTO .)
    EXTERN          reduce using rule 19 (storage_class_specifier -> AUTO .)
    TYPEDEF         reduce using rule 19 (storage_class_specifier -> AUTO .)
    VOID            reduce using rule 19 (storage_class_specifier -> AUTO .)
    BOOL            reduce using rule 19 (storage_class_specifier -> AUTO .)
    CHAR            reduce using rule 19 (storage_class_specifier -> AUTO .)
    SHORT           reduce using rule 19 (storage_class_specifier -> AUTO .)
    INT             reduce using rule 19 (storage_class_specifier -> AUTO .)
    LONG            reduce using rule 19 (storage_class_specifier -> AUTO .)
    FLOAT           reduce using rule 19 (storage_class_specifier -> AUTO .)
    DOUBLE          reduce using rule 19 (storage_class_specifier -> AUTO .)
    SIGNED          reduce using rule 19 (storage_class_specifier -> AUTO .)
    UNSIGNED        reduce using rule 19 (storage_class_specifier -> AUTO .)
    TYPEID          reduce using rule 19 (storage_class_specifier -> AUTO .)
    CONST           reduce using rule 19 (storage_class_specifier -> AUTO .)
    VOLATILE        reduce using rule 19 (storage_class_specifier -> AUTO .)
    ENUM            reduce using rule 19 (storage_class_specifier -> AUTO .)
    STRUCT          reduce using rule 19 (storage_class_specifier -> AUTO .)
    UNION           reduce using rule 19 (storage_class_specifier -> AUTO .)
    SEMI            reduce using rule 19 (storage_class_specifier -> AUTO .)
    TIMES           reduce using rule 19 (storage_class_specifier -> AUTO .)
    ID              reduce using rule 19 (storage_class_specifier -> AUTO .)
    LPAREN          reduce using rule 19 (storage_class_specifier -> AUTO .)
    LBRACKET        reduce using rule 19 (storage_class_specifier -> AUTO .)
    COMMA           reduce using rule 19 (storage_class_specifier -> AUTO .)
    RPAREN          reduce using rule 19 (storage_class_specifier -> AUTO .)


state 13

    (20) storage_class_specifier -> REGISTER .

    AUTO            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    REGISTER        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    STATIC          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    EXTERN          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    TYPEDEF         reduce using rule 20 (storage_class_specifier -> REGISTER .)
    VOID            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    BOOL            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    CHAR            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    SHORT           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    INT             reduce using rule 20 (storage_class_specifier -> REGISTER .)
    LONG            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    FLOAT           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    DOUBLE          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    SIGNED          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    UNSIGNED        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    TYPEID          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    CONST           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    VOLATILE        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    ENUM            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    STRUCT          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    UNION           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    SEMI            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    TIMES           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    ID              reduce using rule 20 (storage_class_specifier -> REGISTER .)
    LPAREN          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    LBRACKET        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    COMMA           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    RPAREN          reduce using rule 20 (storage_class_specifier -> REGISTER .)


state 14

    (21) storage_class_specifier -> STATIC .

    AUTO            reduce using rule 21 (storage_class_specifier -> STATIC .)
    REGISTER        reduce using rule 21 (storage_class_specifier -> STATIC .)
    STATIC          reduce using rule 21 (storage_class_specifier -> STATIC .)
    EXTERN          reduce using rule 21 (storage_class_specifier -> STATIC .)
    TYPEDEF         reduce using rule 21 (storage_class_specifier -> STATIC .)
    VOID            reduce using rule 21 (storage_class_specifier -> STATIC .)
    BOOL            reduce using rule 21 (storage_class_specifier -> STATIC .)
    CHAR            reduce using rule 21 (storage_class_specifier -> STATIC .)
    SHORT           reduce using rule 21 (storage_class_specifier -> STATIC .)
    INT             reduce using rule 21 (storage_class_specifier -> STATIC .)
    LONG            reduce using rule 21 (storage_class_specifier -> STATIC .)
    FLOAT           reduce using rule 21 (storage_class_specifier -> STATIC .)
    DOUBLE          reduce using rule 21 (storage_class_specifier -> STATIC .)
    SIGNED          reduce using rule 21 (storage_class_specifier -> STATIC .)
    UNSIGNED        reduce using rule 21 (storage_class_specifier -> STATIC .)
    TYPEID          reduce using rule 21 (storage_class_specifier -> STATIC .)
    CONST           reduce using rule 21 (storage_class_specifier -> STATIC .)
    VOLATILE        reduce using rule 21 (storage_class_specifier -> STATIC .)
    ENUM            reduce using rule 21 (storage_class_specifier -> STATIC .)
    STRUCT          reduce using rule 21 (storage_class_specifier -> STATIC .)
    UNION           reduce using rule 21 (storage_class_specifier -> STATIC .)
    SEMI            reduce using rule 21 (storage_class_specifier -> STATIC .)
    TIMES           reduce using rule 21 (storage_class_specifier -> STATIC .)
    ID              reduce using rule 21 (storage_class_specifier -> STATIC .)
    LPAREN          reduce using rule 21 (storage_class_specifier -> STATIC .)
    LBRACKET        reduce using rule 21 (storage_class_specifier -> STATIC .)
    COMMA           reduce using rule 21 (storage_class_specifier -> STATIC .)
    RPAREN          reduce using rule 21 (storage_class_specifier -> STATIC .)


state 15

    (22) storage_class_specifier -> EXTERN .

    AUTO            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    REGISTER        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    STATIC          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    EXTERN          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    TYPEDEF         reduce using rule 22 (storage_class_specifier -> EXTERN .)
    VOID            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    BOOL            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    CHAR            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    SHORT           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    INT             reduce using rule 22 (storage_class_specifier -> EXTERN .)
    LONG            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    FLOAT           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    DOUBLE          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    SIGNED          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    UNSIGNED        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    TYPEID          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    CONST           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    VOLATILE        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    ENUM            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    STRUCT          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    UNION           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    SEMI            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    TIMES           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    ID              reduce using rule 22 (storage_class_specifier -> EXTERN .)
    LPAREN          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    LBRACKET        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    COMMA           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    RPAREN          reduce using rule 22 (storage_class_specifier -> EXTERN .)


state 16

    (23) storage_class_specifier -> TYPEDEF .

    AUTO            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    REGISTER        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    STATIC          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    EXTERN          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    TYPEDEF         reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    VOID            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    BOOL            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    CHAR            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    SHORT           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    INT             reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    LONG            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    FLOAT           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    DOUBLE          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    SIGNED          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    UNSIGNED        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    TYPEID          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    CONST           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    VOLATILE        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    ENUM            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    STRUCT          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    UNION           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    SEMI            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    TIMES           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    ID              reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    LPAREN          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    LBRACKET        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    COMMA           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    RPAREN          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)


state 17

    (24) type_specifier -> VOID .

    AUTO            reduce using rule 24 (type_specifier -> VOID .)
    REGISTER        reduce using rule 24 (type_specifier -> VOID .)
    STATIC          reduce using rule 24 (type_specifier -> VOID .)
    EXTERN          reduce using rule 24 (type_specifier -> VOID .)
    TYPEDEF         reduce using rule 24 (type_specifier -> VOID .)
    VOID            reduce using rule 24 (type_specifier -> VOID .)
    BOOL            reduce using rule 24 (type_specifier -> VOID .)
    CHAR            reduce using rule 24 (type_specifier -> VOID .)
    SHORT           reduce using rule 24 (type_specifier -> VOID .)
    INT             reduce using rule 24 (type_specifier -> VOID .)
    LONG            reduce using rule 24 (type_specifier -> VOID .)
    FLOAT           reduce using rule 24 (type_specifier -> VOID .)
    DOUBLE          reduce using rule 24 (type_specifier -> VOID .)
    SIGNED          reduce using rule 24 (type_specifier -> VOID .)
    UNSIGNED        reduce using rule 24 (type_specifier -> VOID .)
    TYPEID          reduce using rule 24 (type_specifier -> VOID .)
    CONST           reduce using rule 24 (type_specifier -> VOID .)
    VOLATILE        reduce using rule 24 (type_specifier -> VOID .)
    ENUM            reduce using rule 24 (type_specifier -> VOID .)
    STRUCT          reduce using rule 24 (type_specifier -> VOID .)
    UNION           reduce using rule 24 (type_specifier -> VOID .)
    SEMI            reduce using rule 24 (type_specifier -> VOID .)
    TIMES           reduce using rule 24 (type_specifier -> VOID .)
    ID              reduce using rule 24 (type_specifier -> VOID .)
    LPAREN          reduce using rule 24 (type_specifier -> VOID .)
    LBRACKET        reduce using rule 24 (type_specifier -> VOID .)
    COMMA           reduce using rule 24 (type_specifier -> VOID .)
    RPAREN          reduce using rule 24 (type_specifier -> VOID .)
    COLON           reduce using rule 24 (type_specifier -> VOID .)


state 18

    (25) type_specifier -> BOOL .

    AUTO            reduce using rule 25 (type_specifier -> BOOL .)
    REGISTER        reduce using rule 25 (type_specifier -> BOOL .)
    STATIC          reduce using rule 25 (type_specifier -> BOOL .)
    EXTERN          reduce using rule 25 (type_specifier -> BOOL .)
    TYPEDEF         reduce using rule 25 (type_specifier -> BOOL .)
    VOID            reduce using rule 25 (type_specifier -> BOOL .)
    BOOL            reduce using rule 25 (type_specifier -> BOOL .)
    CHAR            reduce using rule 25 (type_specifier -> BOOL .)
    SHORT           reduce using rule 25 (type_specifier -> BOOL .)
    INT             reduce using rule 25 (type_specifier -> BOOL .)
    LONG            reduce using rule 25 (type_specifier -> BOOL .)
    FLOAT           reduce using rule 25 (type_specifier -> BOOL .)
    DOUBLE          reduce using rule 25 (type_specifier -> BOOL .)
    SIGNED          reduce using rule 25 (type_specifier -> BOOL .)
    UNSIGNED        reduce using rule 25 (type_specifier -> BOOL .)
    TYPEID          reduce using rule 25 (type_specifier -> BOOL .)
    CONST           reduce using rule 25 (type_specifier -> BOOL .)
    VOLATILE        reduce using rule 25 (type_specifier -> BOOL .)
    ENUM            reduce using rule 25 (type_specifier -> BOOL .)
    STRUCT          reduce using rule 25 (type_specifier -> BOOL .)
    UNION           reduce using rule 25 (type_specifier -> BOOL .)
    SEMI            reduce using rule 25 (type_specifier -> BOOL .)
    TIMES           reduce using rule 25 (type_specifier -> BOOL .)
    ID              reduce using rule 25 (type_specifier -> BOOL .)
    LPAREN          reduce using rule 25 (type_specifier -> BOOL .)
    LBRACKET        reduce using rule 25 (type_specifier -> BOOL .)
    COMMA           reduce using rule 25 (type_specifier -> BOOL .)
    RPAREN          reduce using rule 25 (type_specifier -> BOOL .)
    COLON           reduce using rule 25 (type_specifier -> BOOL .)


state 19

    (26) type_specifier -> CHAR .

    AUTO            reduce using rule 26 (type_specifier -> CHAR .)
    REGISTER        reduce using rule 26 (type_specifier -> CHAR .)
    STATIC          reduce using rule 26 (type_specifier -> CHAR .)
    EXTERN          reduce using rule 26 (type_specifier -> CHAR .)
    TYPEDEF         reduce using rule 26 (type_specifier -> CHAR .)
    VOID            reduce using rule 26 (type_specifier -> CHAR .)
    BOOL            reduce using rule 26 (type_specifier -> CHAR .)
    CHAR            reduce using rule 26 (type_specifier -> CHAR .)
    SHORT           reduce using rule 26 (type_specifier -> CHAR .)
    INT             reduce using rule 26 (type_specifier -> CHAR .)
    LONG            reduce using rule 26 (type_specifier -> CHAR .)
    FLOAT           reduce using rule 26 (type_specifier -> CHAR .)
    DOUBLE          reduce using rule 26 (type_specifier -> CHAR .)
    SIGNED          reduce using rule 26 (type_specifier -> CHAR .)
    UNSIGNED        reduce using rule 26 (type_specifier -> CHAR .)
    TYPEID          reduce using rule 26 (type_specifier -> CHAR .)
    CONST           reduce using rule 26 (type_specifier -> CHAR .)
    VOLATILE        reduce using rule 26 (type_specifier -> CHAR .)
    ENUM            reduce using rule 26 (type_specifier -> CHAR .)
    STRUCT          reduce using rule 26 (type_specifier -> CHAR .)
    UNION           reduce using rule 26 (type_specifier -> CHAR .)
    SEMI            reduce using rule 26 (type_specifier -> CHAR .)
    TIMES           reduce using rule 26 (type_specifier -> CHAR .)
    ID              reduce using rule 26 (type_specifier -> CHAR .)
    LPAREN          reduce using rule 26 (type_specifier -> CHAR .)
    LBRACKET        reduce using rule 26 (type_specifier -> CHAR .)
    COMMA           reduce using rule 26 (type_specifier -> CHAR .)
    RPAREN          reduce using rule 26 (type_specifier -> CHAR .)
    COLON           reduce using rule 26 (type_specifier -> CHAR .)


state 20

    (27) type_specifier -> SHORT .

    AUTO            reduce using rule 27 (type_specifier -> SHORT .)
    REGISTER        reduce using rule 27 (type_specifier -> SHORT .)
    STATIC          reduce using rule 27 (type_specifier -> SHORT .)
    EXTERN          reduce using rule 27 (type_specifier -> SHORT .)
    TYPEDEF         reduce using rule 27 (type_specifier -> SHORT .)
    VOID            reduce using rule 27 (type_specifier -> SHORT .)
    BOOL            reduce using rule 27 (type_specifier -> SHORT .)
    CHAR            reduce using rule 27 (type_specifier -> SHORT .)
    SHORT           reduce using rule 27 (type_specifier -> SHORT .)
    INT             reduce using rule 27 (type_specifier -> SHORT .)
    LONG            reduce using rule 27 (type_specifier -> SHORT .)
    FLOAT           reduce using rule 27 (type_specifier -> SHORT .)
    DOUBLE          reduce using rule 27 (type_specifier -> SHORT .)
    SIGNED          reduce using rule 27 (type_specifier -> SHORT .)
    UNSIGNED        reduce using rule 27 (type_specifier -> SHORT .)
    TYPEID          reduce using rule 27 (type_specifier -> SHORT .)
    CONST           reduce using rule 27 (type_specifier -> SHORT .)
    VOLATILE        reduce using rule 27 (type_specifier -> SHORT .)
    ENUM            reduce using rule 27 (type_specifier -> SHORT .)
    STRUCT          reduce using rule 27 (type_specifier -> SHORT .)
    UNION           reduce using rule 27 (type_specifier -> SHORT .)
    SEMI            reduce using rule 27 (type_specifier -> SHORT .)
    TIMES           reduce using rule 27 (type_specifier -> SHORT .)
    ID              reduce using rule 27 (type_specifier -> SHORT .)
    LPAREN          reduce using rule 27 (type_specifier -> SHORT .)
    LBRACKET        reduce using rule 27 (type_specifier -> SHORT .)
    COMMA           reduce using rule 27 (type_specifier -> SHORT .)
    RPAREN          reduce using rule 27 (type_specifier -> SHORT .)
    COLON           reduce using rule 27 (type_specifier -> SHORT .)


state 21

    (28) type_specifier -> INT .

    AUTO            reduce using rule 28 (type_specifier -> INT .)
    REGISTER        reduce using rule 28 (type_specifier -> INT .)
    STATIC          reduce using rule 28 (type_specifier -> INT .)
    EXTERN          reduce using rule 28 (type_specifier -> INT .)
    TYPEDEF         reduce using rule 28 (type_specifier -> INT .)
    VOID            reduce using rule 28 (type_specifier -> INT .)
    BOOL            reduce using rule 28 (type_specifier -> INT .)
    CHAR            reduce using rule 28 (type_specifier -> INT .)
    SHORT           reduce using rule 28 (type_specifier -> INT .)
    INT             reduce using rule 28 (type_specifier -> INT .)
    LONG            reduce using rule 28 (type_specifier -> INT .)
    FLOAT           reduce using rule 28 (type_specifier -> INT .)
    DOUBLE          reduce using rule 28 (type_specifier -> INT .)
    SIGNED          reduce using rule 28 (type_specifier -> INT .)
    UNSIGNED        reduce using rule 28 (type_specifier -> INT .)
    TYPEID          reduce using rule 28 (type_specifier -> INT .)
    CONST           reduce using rule 28 (type_specifier -> INT .)
    VOLATILE        reduce using rule 28 (type_specifier -> INT .)
    ENUM            reduce using rule 28 (type_specifier -> INT .)
    STRUCT          reduce using rule 28 (type_specifier -> INT .)
    UNION           reduce using rule 28 (type_specifier -> INT .)
    SEMI            reduce using rule 28 (type_specifier -> INT .)
    TIMES           reduce using rule 28 (type_specifier -> INT .)
    ID              reduce using rule 28 (type_specifier -> INT .)
    LPAREN          reduce using rule 28 (type_specifier -> INT .)
    LBRACKET        reduce using rule 28 (type_specifier -> INT .)
    COMMA           reduce using rule 28 (type_specifier -> INT .)
    RPAREN          reduce using rule 28 (type_specifier -> INT .)
    COLON           reduce using rule 28 (type_specifier -> INT .)


state 22

    (29) type_specifier -> LONG .

    AUTO            reduce using rule 29 (type_specifier -> LONG .)
    REGISTER        reduce using rule 29 (type_specifier -> LONG .)
    STATIC          reduce using rule 29 (type_specifier -> LONG .)
    EXTERN          reduce using rule 29 (type_specifier -> LONG .)
    TYPEDEF         reduce using rule 29 (type_specifier -> LONG .)
    VOID            reduce using rule 29 (type_specifier -> LONG .)
    BOOL            reduce using rule 29 (type_specifier -> LONG .)
    CHAR            reduce using rule 29 (type_specifier -> LONG .)
    SHORT           reduce using rule 29 (type_specifier -> LONG .)
    INT             reduce using rule 29 (type_specifier -> LONG .)
    LONG            reduce using rule 29 (type_specifier -> LONG .)
    FLOAT           reduce using rule 29 (type_specifier -> LONG .)
    DOUBLE          reduce using rule 29 (type_specifier -> LONG .)
    SIGNED          reduce using rule 29 (type_specifier -> LONG .)
    UNSIGNED        reduce using rule 29 (type_specifier -> LONG .)
    TYPEID          reduce using rule 29 (type_specifier -> LONG .)
    CONST           reduce using rule 29 (type_specifier -> LONG .)
    VOLATILE        reduce using rule 29 (type_specifier -> LONG .)
    ENUM            reduce using rule 29 (type_specifier -> LONG .)
    STRUCT          reduce using rule 29 (type_specifier -> LONG .)
    UNION           reduce using rule 29 (type_specifier -> LONG .)
    SEMI            reduce using rule 29 (type_specifier -> LONG .)
    TIMES           reduce using rule 29 (type_specifier -> LONG .)
    ID              reduce using rule 29 (type_specifier -> LONG .)
    LPAREN          reduce using rule 29 (type_specifier -> LONG .)
    LBRACKET        reduce using rule 29 (type_specifier -> LONG .)
    COMMA           reduce using rule 29 (type_specifier -> LONG .)
    RPAREN          reduce using rule 29 (type_specifier -> LONG .)
    COLON           reduce using rule 29 (type_specifier -> LONG .)


state 23

    (30) type_specifier -> FLOAT .

    AUTO            reduce using rule 30 (type_specifier -> FLOAT .)
    REGISTER        reduce using rule 30 (type_specifier -> FLOAT .)
    STATIC          reduce using rule 30 (type_specifier -> FLOAT .)
    EXTERN          reduce using rule 30 (type_specifier -> FLOAT .)
    TYPEDEF         reduce using rule 30 (type_specifier -> FLOAT .)
    VOID            reduce using rule 30 (type_specifier -> FLOAT .)
    BOOL            reduce using rule 30 (type_specifier -> FLOAT .)
    CHAR            reduce using rule 30 (type_specifier -> FLOAT .)
    SHORT           reduce using rule 30 (type_specifier -> FLOAT .)
    INT             reduce using rule 30 (type_specifier -> FLOAT .)
    LONG            reduce using rule 30 (type_specifier -> FLOAT .)
    FLOAT           reduce using rule 30 (type_specifier -> FLOAT .)
    DOUBLE          reduce using rule 30 (type_specifier -> FLOAT .)
    SIGNED          reduce using rule 30 (type_specifier -> FLOAT .)
    UNSIGNED        reduce using rule 30 (type_specifier -> FLOAT .)
    TYPEID          reduce using rule 30 (type_specifier -> FLOAT .)
    CONST           reduce using rule 30 (type_specifier -> FLOAT .)
    VOLATILE        reduce using rule 30 (type_specifier -> FLOAT .)
    ENUM            reduce using rule 30 (type_specifier -> FLOAT .)
    STRUCT          reduce using rule 30 (type_specifier -> FLOAT .)
    UNION           reduce using rule 30 (type_specifier -> FLOAT .)
    SEMI            reduce using rule 30 (type_specifier -> FLOAT .)
    TIMES           reduce using rule 30 (type_specifier -> FLOAT .)
    ID              reduce using rule 30 (type_specifier -> FLOAT .)
    LPAREN          reduce using rule 30 (type_specifier -> FLOAT .)
    LBRACKET        reduce using rule 30 (type_specifier -> FLOAT .)
    COMMA           reduce using rule 30 (type_specifier -> FLOAT .)
    RPAREN          reduce using rule 30 (type_specifier -> FLOAT .)
    COLON           reduce using rule 30 (type_specifier -> FLOAT .)


state 24

    (31) type_specifier -> DOUBLE .

    AUTO            reduce using rule 31 (type_specifier -> DOUBLE .)
    REGISTER        reduce using rule 31 (type_specifier -> DOUBLE .)
    STATIC          reduce using rule 31 (type_specifier -> DOUBLE .)
    EXTERN          reduce using rule 31 (type_specifier -> DOUBLE .)
    TYPEDEF         reduce using rule 31 (type_specifier -> DOUBLE .)
    VOID            reduce using rule 31 (type_specifier -> DOUBLE .)
    BOOL            reduce using rule 31 (type_specifier -> DOUBLE .)
    CHAR            reduce using rule 31 (type_specifier -> DOUBLE .)
    SHORT           reduce using rule 31 (type_specifier -> DOUBLE .)
    INT             reduce using rule 31 (type_specifier -> DOUBLE .)
    LONG            reduce using rule 31 (type_specifier -> DOUBLE .)
    FLOAT           reduce using rule 31 (type_specifier -> DOUBLE .)
    DOUBLE          reduce using rule 31 (type_specifier -> DOUBLE .)
    SIGNED          reduce using rule 31 (type_specifier -> DOUBLE .)
    UNSIGNED        reduce using rule 31 (type_specifier -> DOUBLE .)
    TYPEID          reduce using rule 31 (type_specifier -> DOUBLE .)
    CONST           reduce using rule 31 (type_specifier -> DOUBLE .)
    VOLATILE        reduce using rule 31 (type_specifier -> DOUBLE .)
    ENUM            reduce using rule 31 (type_specifier -> DOUBLE .)
    STRUCT          reduce using rule 31 (type_specifier -> DOUBLE .)
    UNION           reduce using rule 31 (type_specifier -> DOUBLE .)
    SEMI            reduce using rule 31 (type_specifier -> DOUBLE .)
    TIMES           reduce using rule 31 (type_specifier -> DOUBLE .)
    ID              reduce using rule 31 (type_specifier -> DOUBLE .)
    LPAREN          reduce using rule 31 (type_specifier -> DOUBLE .)
    LBRACKET        reduce using rule 31 (type_specifier -> DOUBLE .)
    COMMA           reduce using rule 31 (type_specifier -> DOUBLE .)
    RPAREN          reduce using rule 31 (type_specifier -> DOUBLE .)
    COLON           reduce using rule 31 (type_specifier -> DOUBLE .)


state 25

    (32) type_specifier -> SIGNED .

    AUTO            reduce using rule 32 (type_specifier -> SIGNED .)
    REGISTER        reduce using rule 32 (type_specifier -> SIGNED .)
    STATIC          reduce using rule 32 (type_specifier -> SIGNED .)
    EXTERN          reduce using rule 32 (type_specifier -> SIGNED .)
    TYPEDEF         reduce using rule 32 (type_specifier -> SIGNED .)
    VOID            reduce using rule 32 (type_specifier -> SIGNED .)
    BOOL            reduce using rule 32 (type_specifier -> SIGNED .)
    CHAR            reduce using rule 32 (type_specifier -> SIGNED .)
    SHORT           reduce using rule 32 (type_specifier -> SIGNED .)
    INT             reduce using rule 32 (type_specifier -> SIGNED .)
    LONG            reduce using rule 32 (type_specifier -> SIGNED .)
    FLOAT           reduce using rule 32 (type_specifier -> SIGNED .)
    DOUBLE          reduce using rule 32 (type_specifier -> SIGNED .)
    SIGNED          reduce using rule 32 (type_specifier -> SIGNED .)
    UNSIGNED        reduce using rule 32 (type_specifier -> SIGNED .)
    TYPEID          reduce using rule 32 (type_specifier -> SIGNED .)
    CONST           reduce using rule 32 (type_specifier -> SIGNED .)
    VOLATILE        reduce using rule 32 (type_specifier -> SIGNED .)
    ENUM            reduce using rule 32 (type_specifier -> SIGNED .)
    STRUCT          reduce using rule 32 (type_specifier -> SIGNED .)
    UNION           reduce using rule 32 (type_specifier -> SIGNED .)
    SEMI            reduce using rule 32 (type_specifier -> SIGNED .)
    TIMES           reduce using rule 32 (type_specifier -> SIGNED .)
    ID              reduce using rule 32 (type_specifier -> SIGNED .)
    LPAREN          reduce using rule 32 (type_specifier -> SIGNED .)
    LBRACKET        reduce using rule 32 (type_specifier -> SIGNED .)
    COMMA           reduce using rule 32 (type_specifier -> SIGNED .)
    RPAREN          reduce using rule 32 (type_specifier -> SIGNED .)
    COLON           reduce using rule 32 (type_specifier -> SIGNED .)


state 26

    (33) type_specifier -> UNSIGNED .

    AUTO            reduce using rule 33 (type_specifier -> UNSIGNED .)
    REGISTER        reduce using rule 33 (type_specifier -> UNSIGNED .)
    STATIC          reduce using rule 33 (type_specifier -> UNSIGNED .)
    EXTERN          reduce using rule 33 (type_specifier -> UNSIGNED .)
    TYPEDEF         reduce using rule 33 (type_specifier -> UNSIGNED .)
    VOID            reduce using rule 33 (type_specifier -> UNSIGNED .)
    BOOL            reduce using rule 33 (type_specifier -> UNSIGNED .)
    CHAR            reduce using rule 33 (type_specifier -> UNSIGNED .)
    SHORT           reduce using rule 33 (type_specifier -> UNSIGNED .)
    INT             reduce using rule 33 (type_specifier -> UNSIGNED .)
    LONG            reduce using rule 33 (type_specifier -> UNSIGNED .)
    FLOAT           reduce using rule 33 (type_specifier -> UNSIGNED .)
    DOUBLE          reduce using rule 33 (type_specifier -> UNSIGNED .)
    SIGNED          reduce using rule 33 (type_specifier -> UNSIGNED .)
    UNSIGNED        reduce using rule 33 (type_specifier -> UNSIGNED .)
    TYPEID          reduce using rule 33 (type_specifier -> UNSIGNED .)
    CONST           reduce using rule 33 (type_specifier -> UNSIGNED .)
    VOLATILE        reduce using rule 33 (type_specifier -> UNSIGNED .)
    ENUM            reduce using rule 33 (type_specifier -> UNSIGNED .)
    STRUCT          reduce using rule 33 (type_specifier -> UNSIGNED .)
    UNION           reduce using rule 33 (type_specifier -> UNSIGNED .)
    SEMI            reduce using rule 33 (type_specifier -> UNSIGNED .)
    TIMES           reduce using rule 33 (type_specifier -> UNSIGNED .)
    ID              reduce using rule 33 (type_specifier -> UNSIGNED .)
    LPAREN          reduce using rule 33 (type_specifier -> UNSIGNED .)
    LBRACKET        reduce using rule 33 (type_specifier -> UNSIGNED .)
    COMMA           reduce using rule 33 (type_specifier -> UNSIGNED .)
    RPAREN          reduce using rule 33 (type_specifier -> UNSIGNED .)
    COLON           reduce using rule 33 (type_specifier -> UNSIGNED .)


state 27

    (34) type_specifier -> struct_or_union_specifier .

    AUTO            reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    REGISTER        reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    STATIC          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    EXTERN          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    TYPEDEF         reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    VOID            reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    BOOL            reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    CHAR            reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    SHORT           reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    INT             reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    LONG            reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    FLOAT           reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    DOUBLE          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    SIGNED          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    UNSIGNED        reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    TYPEID          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    CONST           reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    VOLATILE        reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    ENUM            reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    STRUCT          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    UNION           reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    SEMI            reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    TIMES           reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    ID              reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    LPAREN          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    LBRACKET        reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    COMMA           reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    RPAREN          reduce using rule 34 (type_specifier -> struct_or_union_specifier .)
    COLON           reduce using rule 34 (type_specifier -> struct_or_union_specifier .)


state 28

    (35) type_specifier -> enum_specifier .

    AUTO            reduce using rule 35 (type_specifier -> enum_specifier .)
    REGISTER        reduce using rule 35 (type_specifier -> enum_specifier .)
    STATIC          reduce using rule 35 (type_specifier -> enum_specifier .)
    EXTERN          reduce using rule 35 (type_specifier -> enum_specifier .)
    TYPEDEF         reduce using rule 35 (type_specifier -> enum_specifier .)
    VOID            reduce using rule 35 (type_specifier -> enum_specifier .)
    BOOL            reduce using rule 35 (type_specifier -> enum_specifier .)
    CHAR            reduce using rule 35 (type_specifier -> enum_specifier .)
    SHORT           reduce using rule 35 (type_specifier -> enum_specifier .)
    INT             reduce using rule 35 (type_specifier -> enum_specifier .)
    LONG            reduce using rule 35 (type_specifier -> enum_specifier .)
    FLOAT           reduce using rule 35 (type_specifier -> enum_specifier .)
    DOUBLE          reduce using rule 35 (type_specifier -> enum_specifier .)
    SIGNED          reduce using rule 35 (type_specifier -> enum_specifier .)
    UNSIGNED        reduce using rule 35 (type_specifier -> enum_specifier .)
    TYPEID          reduce using rule 35 (type_specifier -> enum_specifier .)
    CONST           reduce using rule 35 (type_specifier -> enum_specifier .)
    VOLATILE        reduce using rule 35 (type_specifier -> enum_specifier .)
    ENUM            reduce using rule 35 (type_specifier -> enum_specifier .)
    STRUCT          reduce using rule 35 (type_specifier -> enum_specifier .)
    UNION           reduce using rule 35 (type_specifier -> enum_specifier .)
    SEMI            reduce using rule 35 (type_specifier -> enum_specifier .)
    TIMES           reduce using rule 35 (type_specifier -> enum_specifier .)
    ID              reduce using rule 35 (type_specifier -> enum_specifier .)
    LPAREN          reduce using rule 35 (type_specifier -> enum_specifier .)
    LBRACKET        reduce using rule 35 (type_specifier -> enum_specifier .)
    COMMA           reduce using rule 35 (type_specifier -> enum_specifier .)
    RPAREN          reduce using rule 35 (type_specifier -> enum_specifier .)
    COLON           reduce using rule 35 (type_specifier -> enum_specifier .)


state 29

    (36) type_specifier -> TYPEID .

    AUTO            reduce using rule 36 (type_specifier -> TYPEID .)
    REGISTER        reduce using rule 36 (type_specifier -> TYPEID .)
    STATIC          reduce using rule 36 (type_specifier -> TYPEID .)
    EXTERN          reduce using rule 36 (type_specifier -> TYPEID .)
    TYPEDEF         reduce using rule 36 (type_specifier -> TYPEID .)
    VOID            reduce using rule 36 (type_specifier -> TYPEID .)
    BOOL            reduce using rule 36 (type_specifier -> TYPEID .)
    CHAR            reduce using rule 36 (type_specifier -> TYPEID .)
    SHORT           reduce using rule 36 (type_specifier -> TYPEID .)
    INT             reduce using rule 36 (type_specifier -> TYPEID .)
    LONG            reduce using rule 36 (type_specifier -> TYPEID .)
    FLOAT           reduce using rule 36 (type_specifier -> TYPEID .)
    DOUBLE          reduce using rule 36 (type_specifier -> TYPEID .)
    SIGNED          reduce using rule 36 (type_specifier -> TYPEID .)
    UNSIGNED        reduce using rule 36 (type_specifier -> TYPEID .)
    TYPEID          reduce using rule 36 (type_specifier -> TYPEID .)
    CONST           reduce using rule 36 (type_specifier -> TYPEID .)
    VOLATILE        reduce using rule 36 (type_specifier -> TYPEID .)
    ENUM            reduce using rule 36 (type_specifier -> TYPEID .)
    STRUCT          reduce using rule 36 (type_specifier -> TYPEID .)
    UNION           reduce using rule 36 (type_specifier -> TYPEID .)
    SEMI            reduce using rule 36 (type_specifier -> TYPEID .)
    TIMES           reduce using rule 36 (type_specifier -> TYPEID .)
    ID              reduce using rule 36 (type_specifier -> TYPEID .)
    LPAREN          reduce using rule 36 (type_specifier -> TYPEID .)
    LBRACKET        reduce using rule 36 (type_specifier -> TYPEID .)
    COMMA           reduce using rule 36 (type_specifier -> TYPEID .)
    RPAREN          reduce using rule 36 (type_specifier -> TYPEID .)
    COLON           reduce using rule 36 (type_specifier -> TYPEID .)


state 30

    (37) type_qualifier -> CONST .

    AUTO            reduce using rule 37 (type_qualifier -> CONST .)
    REGISTER        reduce using rule 37 (type_qualifier -> CONST .)
    STATIC          reduce using rule 37 (type_qualifier -> CONST .)
    EXTERN          reduce using rule 37 (type_qualifier -> CONST .)
    TYPEDEF         reduce using rule 37 (type_qualifier -> CONST .)
    VOID            reduce using rule 37 (type_qualifier -> CONST .)
    BOOL            reduce using rule 37 (type_qualifier -> CONST .)
    CHAR            reduce using rule 37 (type_qualifier -> CONST .)
    SHORT           reduce using rule 37 (type_qualifier -> CONST .)
    INT             reduce using rule 37 (type_qualifier -> CONST .)
    LONG            reduce using rule 37 (type_qualifier -> CONST .)
    FLOAT           reduce using rule 37 (type_qualifier -> CONST .)
    DOUBLE          reduce using rule 37 (type_qualifier -> CONST .)
    SIGNED          reduce using rule 37 (type_qualifier -> CONST .)
    UNSIGNED        reduce using rule 37 (type_qualifier -> CONST .)
    TYPEID          reduce using rule 37 (type_qualifier -> CONST .)
    CONST           reduce using rule 37 (type_qualifier -> CONST .)
    VOLATILE        reduce using rule 37 (type_qualifier -> CONST .)
    ENUM            reduce using rule 37 (type_qualifier -> CONST .)
    STRUCT          reduce using rule 37 (type_qualifier -> CONST .)
    UNION           reduce using rule 37 (type_qualifier -> CONST .)
    SEMI            reduce using rule 37 (type_qualifier -> CONST .)
    TIMES           reduce using rule 37 (type_qualifier -> CONST .)
    ID              reduce using rule 37 (type_qualifier -> CONST .)
    LPAREN          reduce using rule 37 (type_qualifier -> CONST .)
    LBRACKET        reduce using rule 37 (type_qualifier -> CONST .)
    COMMA           reduce using rule 37 (type_qualifier -> CONST .)
    RPAREN          reduce using rule 37 (type_qualifier -> CONST .)
    COLON           reduce using rule 37 (type_qualifier -> CONST .)


state 31

    (38) type_qualifier -> VOLATILE .

    AUTO            reduce using rule 38 (type_qualifier -> VOLATILE .)
    REGISTER        reduce using rule 38 (type_qualifier -> VOLATILE .)
    STATIC          reduce using rule 38 (type_qualifier -> VOLATILE .)
    EXTERN          reduce using rule 38 (type_qualifier -> VOLATILE .)
    TYPEDEF         reduce using rule 38 (type_qualifier -> VOLATILE .)
    VOID            reduce using rule 38 (type_qualifier -> VOLATILE .)
    BOOL            reduce using rule 38 (type_qualifier -> VOLATILE .)
    CHAR            reduce using rule 38 (type_qualifier -> VOLATILE .)
    SHORT           reduce using rule 38 (type_qualifier -> VOLATILE .)
    INT             reduce using rule 38 (type_qualifier -> VOLATILE .)
    LONG            reduce using rule 38 (type_qualifier -> VOLATILE .)
    FLOAT           reduce using rule 38 (type_qualifier -> VOLATILE .)
    DOUBLE          reduce using rule 38 (type_qualifier -> VOLATILE .)
    SIGNED          reduce using rule 38 (type_qualifier -> VOLATILE .)
    UNSIGNED        reduce using rule 38 (type_qualifier -> VOLATILE .)
    TYPEID          reduce using rule 38 (type_qualifier -> VOLATILE .)
    CONST           reduce using rule 38 (type_qualifier -> VOLATILE .)
    VOLATILE        reduce using rule 38 (type_qualifier -> VOLATILE .)
    ENUM            reduce using rule 38 (type_qualifier -> VOLATILE .)
    STRUCT          reduce using rule 38 (type_qualifier -> VOLATILE .)
    UNION           reduce using rule 38 (type_qualifier -> VOLATILE .)
    SEMI            reduce using rule 38 (type_qualifier -> VOLATILE .)
    TIMES           reduce using rule 38 (type_qualifier -> VOLATILE .)
    ID              reduce using rule 38 (type_qualifier -> VOLATILE .)
    LPAREN          reduce using rule 38 (type_qualifier -> VOLATILE .)
    LBRACKET        reduce using rule 38 (type_qualifier -> VOLATILE .)
    COMMA           reduce using rule 38 (type_qualifier -> VOLATILE .)
    RPAREN          reduce using rule 38 (type_qualifier -> VOLATILE .)
    COLON           reduce using rule 38 (type_qualifier -> VOLATILE .)


state 32

    (75) pointer -> TIMES . type_qualifier_list
    (76) pointer -> TIMES .
    (77) pointer -> TIMES . type_qualifier_list pointer
    (78) pointer -> TIMES . pointer
    (79) type_qualifier_list -> . type_qualifier
    (80) type_qualifier_list -> . type_qualifier_list type_qualifier
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE

    ID              reduce using rule 76 (pointer -> TIMES .)
    LPAREN          reduce using rule 76 (pointer -> TIMES .)
    LBRACKET        reduce using rule 76 (pointer -> TIMES .)
    COMMA           reduce using rule 76 (pointer -> TIMES .)
    RPAREN          reduce using rule 76 (pointer -> TIMES .)
    TIMES           shift and go to state 32
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31

    type_qualifier_list            shift and go to state 55
    pointer                        shift and go to state 56
    type_qualifier                 shift and go to state 57

state 33

    (69) direct_declarator -> ID .

    LBRACKET        reduce using rule 69 (direct_declarator -> ID .)
    LPAREN          reduce using rule 69 (direct_declarator -> ID .)
    LBRACE          reduce using rule 69 (direct_declarator -> ID .)
    AUTO            reduce using rule 69 (direct_declarator -> ID .)
    REGISTER        reduce using rule 69 (direct_declarator -> ID .)
    STATIC          reduce using rule 69 (direct_declarator -> ID .)
    EXTERN          reduce using rule 69 (direct_declarator -> ID .)
    TYPEDEF         reduce using rule 69 (direct_declarator -> ID .)
    VOID            reduce using rule 69 (direct_declarator -> ID .)
    BOOL            reduce using rule 69 (direct_declarator -> ID .)
    CHAR            reduce using rule 69 (direct_declarator -> ID .)
    SHORT           reduce using rule 69 (direct_declarator -> ID .)
    INT             reduce using rule 69 (direct_declarator -> ID .)
    LONG            reduce using rule 69 (direct_declarator -> ID .)
    FLOAT           reduce using rule 69 (direct_declarator -> ID .)
    DOUBLE          reduce using rule 69 (direct_declarator -> ID .)
    SIGNED          reduce using rule 69 (direct_declarator -> ID .)
    UNSIGNED        reduce using rule 69 (direct_declarator -> ID .)
    TYPEID          reduce using rule 69 (direct_declarator -> ID .)
    CONST           reduce using rule 69 (direct_declarator -> ID .)
    VOLATILE        reduce using rule 69 (direct_declarator -> ID .)
    ENUM            reduce using rule 69 (direct_declarator -> ID .)
    STRUCT          reduce using rule 69 (direct_declarator -> ID .)
    UNION           reduce using rule 69 (direct_declarator -> ID .)
    EQUALS          reduce using rule 69 (direct_declarator -> ID .)
    SEMI            reduce using rule 69 (direct_declarator -> ID .)
    COMMA           reduce using rule 69 (direct_declarator -> ID .)
    RPAREN          reduce using rule 69 (direct_declarator -> ID .)
    COLON           reduce using rule 69 (direct_declarator -> ID .)


state 34

    (70) direct_declarator -> LPAREN . declarator RPAREN
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN

    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34

    declarator                     shift and go to state 58
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11

state 35

    (39) struct_or_union_specifier -> struct_or_union . ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> struct_or_union . LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> struct_or_union . ID

    ID              shift and go to state 59
    LBRACE          shift and go to state 60


state 36

    (60) enum_specifier -> ENUM . ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> ENUM . LBRACE enumerator_list RBRACE
    (62) enum_specifier -> ENUM . ID

    ID              shift and go to state 61
    LBRACE          shift and go to state 62


state 37

    (42) struct_or_union -> STRUCT .

    ID              reduce using rule 42 (struct_or_union -> STRUCT .)
    LBRACE          reduce using rule 42 (struct_or_union -> STRUCT .)


state 38

    (43) struct_or_union -> UNION .

    ID              reduce using rule 43 (struct_or_union -> UNION .)
    LBRACE          reduce using rule 43 (struct_or_union -> UNION .)


state 39

    (2) translation_unit -> translation_unit external_declaration .

    AUTO            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    REGISTER        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    STATIC          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    EXTERN          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    TYPEDEF         reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    VOID            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    BOOL            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    CHAR            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    SHORT           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    INT             reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    LONG            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    FLOAT           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    DOUBLE          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    SIGNED          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    UNSIGNED        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    TYPEID          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    CONST           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    VOLATILE        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    TIMES           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    ID              reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    LPAREN          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    ENUM            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    STRUCT          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    UNION           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    $end            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)


state 40

    (5) function_definition -> declaration_specifiers declarator . declaration_list compound_statement
    (8) function_definition -> declaration_specifiers declarator . compound_statement
    (48) init_declarator -> declarator .
    (49) init_declarator -> declarator . EQUALS initializer
    (11) declaration_list -> . declaration
    (12) declaration_list -> . declaration_list declaration
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    SEMI            reduce using rule 48 (init_declarator -> declarator .)
    COMMA           reduce using rule 48 (init_declarator -> declarator .)
    EQUALS          shift and go to state 65
    LBRACE          shift and go to state 47
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    declaration_specifiers         shift and go to state 48
    declaration_list               shift and go to state 63
    compound_statement             shift and go to state 64
    declaration                    shift and go to state 46
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 41

    (9) declaration -> declaration_specifiers init_declarator_list . SEMI
    (47) init_declarator_list -> init_declarator_list . COMMA init_declarator

    SEMI            shift and go to state 66
    COMMA           shift and go to state 67


state 42

    (10) declaration -> declaration_specifiers SEMI .

    AUTO            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    REGISTER        reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    STATIC          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    EXTERN          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    TYPEDEF         reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    VOID            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    BOOL            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    CHAR            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    SHORT           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    INT             reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    LONG            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    FLOAT           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    DOUBLE          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    SIGNED          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    UNSIGNED        reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    TYPEID          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    CONST           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    VOLATILE        reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    TIMES           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    ID              reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    LPAREN          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    ENUM            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    STRUCT          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    UNION           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    $end            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    LBRACE          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    RBRACE          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    CASE            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    DEFAULT         reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    IF              reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    SWITCH          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    WHILE           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    FOR             reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    DO              reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    GOTO            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    CONTINUE        reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    BREAK           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    RETURN          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    PLUSPLUS        reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    MINUSMINUS      reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    SIZEOF          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    AND             reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    PLUS            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    MINUS           reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    NOT             reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    LNOT            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    SCONST          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    ICONST          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    FCONST          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    CCONST          reduce using rule 10 (declaration -> declaration_specifiers SEMI .)
    SEMI            reduce using rule 10 (declaration -> declaration_specifiers SEMI .)


state 43

    (46) init_declarator_list -> init_declarator .

    SEMI            reduce using rule 46 (init_declarator_list -> init_declarator .)
    COMMA           reduce using rule 46 (init_declarator_list -> init_declarator .)


state 44

    (6) function_definition -> declarator declaration_list . compound_statement
    (12) declaration_list -> declaration_list . declaration
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    LBRACE          shift and go to state 47
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    compound_statement             shift and go to state 68
    declaration                    shift and go to state 69
    declaration_specifiers         shift and go to state 48
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 45

    (7) function_definition -> declarator compound_statement .

    AUTO            reduce using rule 7 (function_definition -> declarator compound_statement .)
    REGISTER        reduce using rule 7 (function_definition -> declarator compound_statement .)
    STATIC          reduce using rule 7 (function_definition -> declarator compound_statement .)
    EXTERN          reduce using rule 7 (function_definition -> declarator compound_statement .)
    TYPEDEF         reduce using rule 7 (function_definition -> declarator compound_statement .)
    VOID            reduce using rule 7 (function_definition -> declarator compound_statement .)
    BOOL            reduce using rule 7 (function_definition -> declarator compound_statement .)
    CHAR            reduce using rule 7 (function_definition -> declarator compound_statement .)
    SHORT           reduce using rule 7 (function_definition -> declarator compound_statement .)
    INT             reduce using rule 7 (function_definition -> declarator compound_statement .)
    LONG            reduce using rule 7 (function_definition -> declarator compound_statement .)
    FLOAT           reduce using rule 7 (function_definition -> declarator compound_statement .)
    DOUBLE          reduce using rule 7 (function_definition -> declarator compound_statement .)
    SIGNED          reduce using rule 7 (function_definition -> declarator compound_statement .)
    UNSIGNED        reduce using rule 7 (function_definition -> declarator compound_statement .)
    TYPEID          reduce using rule 7 (function_definition -> declarator compound_statement .)
    CONST           reduce using rule 7 (function_definition -> declarator compound_statement .)
    VOLATILE        reduce using rule 7 (function_definition -> declarator compound_statement .)
    TIMES           reduce using rule 7 (function_definition -> declarator compound_statement .)
    ID              reduce using rule 7 (function_definition -> declarator compound_statement .)
    LPAREN          reduce using rule 7 (function_definition -> declarator compound_statement .)
    ENUM            reduce using rule 7 (function_definition -> declarator compound_statement .)
    STRUCT          reduce using rule 7 (function_definition -> declarator compound_statement .)
    UNION           reduce using rule 7 (function_definition -> declarator compound_statement .)
    $end            reduce using rule 7 (function_definition -> declarator compound_statement .)


state 46

    (11) declaration_list -> declaration .

    LBRACE          reduce using rule 11 (declaration_list -> declaration .)
    AUTO            reduce using rule 11 (declaration_list -> declaration .)
    REGISTER        reduce using rule 11 (declaration_list -> declaration .)
    STATIC          reduce using rule 11 (declaration_list -> declaration .)
    EXTERN          reduce using rule 11 (declaration_list -> declaration .)
    TYPEDEF         reduce using rule 11 (declaration_list -> declaration .)
    VOID            reduce using rule 11 (declaration_list -> declaration .)
    BOOL            reduce using rule 11 (declaration_list -> declaration .)
    CHAR            reduce using rule 11 (declaration_list -> declaration .)
    SHORT           reduce using rule 11 (declaration_list -> declaration .)
    INT             reduce using rule 11 (declaration_list -> declaration .)
    LONG            reduce using rule 11 (declaration_list -> declaration .)
    FLOAT           reduce using rule 11 (declaration_list -> declaration .)
    DOUBLE          reduce using rule 11 (declaration_list -> declaration .)
    SIGNED          reduce using rule 11 (declaration_list -> declaration .)
    UNSIGNED        reduce using rule 11 (declaration_list -> declaration .)
    TYPEID          reduce using rule 11 (declaration_list -> declaration .)
    CONST           reduce using rule 11 (declaration_list -> declaration .)
    VOLATILE        reduce using rule 11 (declaration_list -> declaration .)
    ENUM            reduce using rule 11 (declaration_list -> declaration .)
    STRUCT          reduce using rule 11 (declaration_list -> declaration .)
    UNION           reduce using rule 11 (declaration_list -> declaration .)
    RBRACE          reduce using rule 11 (declaration_list -> declaration .)
    ID              reduce using rule 11 (declaration_list -> declaration .)
    CASE            reduce using rule 11 (declaration_list -> declaration .)
    DEFAULT         reduce using rule 11 (declaration_list -> declaration .)
    IF              reduce using rule 11 (declaration_list -> declaration .)
    SWITCH          reduce using rule 11 (declaration_list -> declaration .)
    WHILE           reduce using rule 11 (declaration_list -> declaration .)
    FOR             reduce using rule 11 (declaration_list -> declaration .)
    DO              reduce using rule 11 (declaration_list -> declaration .)
    GOTO            reduce using rule 11 (declaration_list -> declaration .)
    CONTINUE        reduce using rule 11 (declaration_list -> declaration .)
    BREAK           reduce using rule 11 (declaration_list -> declaration .)
    RETURN          reduce using rule 11 (declaration_list -> declaration .)
    PLUSPLUS        reduce using rule 11 (declaration_list -> declaration .)
    MINUSMINUS      reduce using rule 11 (declaration_list -> declaration .)
    SIZEOF          reduce using rule 11 (declaration_list -> declaration .)
    AND             reduce using rule 11 (declaration_list -> declaration .)
    TIMES           reduce using rule 11 (declaration_list -> declaration .)
    PLUS            reduce using rule 11 (declaration_list -> declaration .)
    MINUS           reduce using rule 11 (declaration_list -> declaration .)
    NOT             reduce using rule 11 (declaration_list -> declaration .)
    LNOT            reduce using rule 11 (declaration_list -> declaration .)
    SCONST          reduce using rule 11 (declaration_list -> declaration .)
    LPAREN          reduce using rule 11 (declaration_list -> declaration .)
    ICONST          reduce using rule 11 (declaration_list -> declaration .)
    FCONST          reduce using rule 11 (declaration_list -> declaration .)
    CCONST          reduce using rule 11 (declaration_list -> declaration .)
    SEMI            reduce using rule 11 (declaration_list -> declaration .)


state 47

    (119) compound_statement -> LBRACE . declaration_list statement_list RBRACE
    (120) compound_statement -> LBRACE . statement_list RBRACE
    (121) compound_statement -> LBRACE . declaration_list RBRACE
    (122) compound_statement -> LBRACE . RBRACE
    (11) declaration_list -> . declaration
    (12) declaration_list -> . declaration_list declaration
    (123) statement_list -> . statement
    (124) statement_list -> . statement_list statement
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    RBRACE          shift and go to state 72
    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    SEMI            reduce using rule 214 (empty -> .)
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    declaration_list               shift and go to state 70
    statement_list                 shift and go to state 71
    declaration                    shift and go to state 46
    statement                      shift and go to state 73
    declaration_specifiers         shift and go to state 48
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    expression_opt                 shift and go to state 83
    expression                     shift and go to state 86
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    empty                          shift and go to state 95
    struct_or_union                shift and go to state 35
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 48

    (9) declaration -> declaration_specifiers . init_declarator_list SEMI
    (10) declaration -> declaration_specifiers . SEMI
    (46) init_declarator_list -> . init_declarator
    (47) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (48) init_declarator -> . declarator
    (49) init_declarator -> . declarator EQUALS initializer
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN

    SEMI            shift and go to state 42
    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34

    init_declarator_list           shift and go to state 41
    init_declarator                shift and go to state 43
    declarator                     shift and go to state 127
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11

state 49

    (13) declaration_specifiers -> storage_class_specifier declaration_specifiers .

    SEMI            reduce using rule 13 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    TIMES           reduce using rule 13 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    ID              reduce using rule 13 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    LPAREN          reduce using rule 13 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    LBRACKET        reduce using rule 13 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    COMMA           reduce using rule 13 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    RPAREN          reduce using rule 13 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)


state 50

    (14) declaration_specifiers -> type_specifier declaration_specifiers .

    SEMI            reduce using rule 14 (declaration_specifiers -> type_specifier declaration_specifiers .)
    TIMES           reduce using rule 14 (declaration_specifiers -> type_specifier declaration_specifiers .)
    ID              reduce using rule 14 (declaration_specifiers -> type_specifier declaration_specifiers .)
    LPAREN          reduce using rule 14 (declaration_specifiers -> type_specifier declaration_specifiers .)
    LBRACKET        reduce using rule 14 (declaration_specifiers -> type_specifier declaration_specifiers .)
    COMMA           reduce using rule 14 (declaration_specifiers -> type_specifier declaration_specifiers .)
    RPAREN          reduce using rule 14 (declaration_specifiers -> type_specifier declaration_specifiers .)


state 51

    (15) declaration_specifiers -> type_qualifier declaration_specifiers .

    SEMI            reduce using rule 15 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    TIMES           reduce using rule 15 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    ID              reduce using rule 15 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    LPAREN          reduce using rule 15 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    LBRACKET        reduce using rule 15 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    COMMA           reduce using rule 15 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    RPAREN          reduce using rule 15 (declaration_specifiers -> type_qualifier declaration_specifiers .)


state 52

    (67) declarator -> pointer direct_declarator .
    (71) direct_declarator -> direct_declarator . LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> direct_declarator . LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> direct_declarator . LPAREN identifier_list RPAREN
    (74) direct_declarator -> direct_declarator . LPAREN RPAREN

    LBRACE          reduce using rule 67 (declarator -> pointer direct_declarator .)
    AUTO            reduce using rule 67 (declarator -> pointer direct_declarator .)
    REGISTER        reduce using rule 67 (declarator -> pointer direct_declarator .)
    STATIC          reduce using rule 67 (declarator -> pointer direct_declarator .)
    EXTERN          reduce using rule 67 (declarator -> pointer direct_declarator .)
    TYPEDEF         reduce using rule 67 (declarator -> pointer direct_declarator .)
    VOID            reduce using rule 67 (declarator -> pointer direct_declarator .)
    BOOL            reduce using rule 67 (declarator -> pointer direct_declarator .)
    CHAR            reduce using rule 67 (declarator -> pointer direct_declarator .)
    SHORT           reduce using rule 67 (declarator -> pointer direct_declarator .)
    INT             reduce using rule 67 (declarator -> pointer direct_declarator .)
    LONG            reduce using rule 67 (declarator -> pointer direct_declarator .)
    FLOAT           reduce using rule 67 (declarator -> pointer direct_declarator .)
    DOUBLE          reduce using rule 67 (declarator -> pointer direct_declarator .)
    SIGNED          reduce using rule 67 (declarator -> pointer direct_declarator .)
    UNSIGNED        reduce using rule 67 (declarator -> pointer direct_declarator .)
    TYPEID          reduce using rule 67 (declarator -> pointer direct_declarator .)
    CONST           reduce using rule 67 (declarator -> pointer direct_declarator .)
    VOLATILE        reduce using rule 67 (declarator -> pointer direct_declarator .)
    ENUM            reduce using rule 67 (declarator -> pointer direct_declarator .)
    STRUCT          reduce using rule 67 (declarator -> pointer direct_declarator .)
    UNION           reduce using rule 67 (declarator -> pointer direct_declarator .)
    EQUALS          reduce using rule 67 (declarator -> pointer direct_declarator .)
    SEMI            reduce using rule 67 (declarator -> pointer direct_declarator .)
    COMMA           reduce using rule 67 (declarator -> pointer direct_declarator .)
    RPAREN          reduce using rule 67 (declarator -> pointer direct_declarator .)
    COLON           reduce using rule 67 (declarator -> pointer direct_declarator .)
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 54


state 53

    (71) direct_declarator -> direct_declarator LBRACKET . constant_expression_opt RBRACKET
    (105) constant_expression_opt -> . empty
    (106) constant_expression_opt -> . constant_expression
    (214) empty -> .
    (154) constant_expression -> . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    RBRACKET        reduce using rule 214 (empty -> .)
    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    constant_expression_opt        shift and go to state 128
    empty                          shift and go to state 129
    constant_expression            shift and go to state 130
    conditional_expression         shift and go to state 131
    logical_or_expression          shift and go to state 99
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 54

    (72) direct_declarator -> direct_declarator LPAREN . parameter_type_list RPAREN
    (73) direct_declarator -> direct_declarator LPAREN . identifier_list RPAREN
    (74) direct_declarator -> direct_declarator LPAREN . RPAREN
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (87) identifier_list -> . ID
    (88) identifier_list -> . identifier_list COMMA ID
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    RPAREN          shift and go to state 136
    ID              shift and go to state 139
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    parameter_type_list            shift and go to state 135
    identifier_list                shift and go to state 137
    parameter_list                 shift and go to state 138
    parameter_declaration          shift and go to state 140
    declaration_specifiers         shift and go to state 141
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 55

    (75) pointer -> TIMES type_qualifier_list .
    (77) pointer -> TIMES type_qualifier_list . pointer
    (80) type_qualifier_list -> type_qualifier_list . type_qualifier
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE

    ID              reduce using rule 75 (pointer -> TIMES type_qualifier_list .)
    LPAREN          reduce using rule 75 (pointer -> TIMES type_qualifier_list .)
    LBRACKET        reduce using rule 75 (pointer -> TIMES type_qualifier_list .)
    COMMA           reduce using rule 75 (pointer -> TIMES type_qualifier_list .)
    RPAREN          reduce using rule 75 (pointer -> TIMES type_qualifier_list .)
    TIMES           shift and go to state 32
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31

    pointer                        shift and go to state 142
    type_qualifier                 shift and go to state 143

state 56

    (78) pointer -> TIMES pointer .

    ID              reduce using rule 78 (pointer -> TIMES pointer .)
    LPAREN          reduce using rule 78 (pointer -> TIMES pointer .)
    LBRACKET        reduce using rule 78 (pointer -> TIMES pointer .)
    COMMA           reduce using rule 78 (pointer -> TIMES pointer .)
    RPAREN          reduce using rule 78 (pointer -> TIMES pointer .)


state 57

    (79) type_qualifier_list -> type_qualifier .

    TIMES           reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    CONST           reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    VOLATILE        reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    ID              reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    LPAREN          reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    LBRACKET        reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    COMMA           reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    RPAREN          reduce using rule 79 (type_qualifier_list -> type_qualifier .)


state 58

    (70) direct_declarator -> LPAREN declarator . RPAREN

    RPAREN          shift and go to state 144


state 59

    (39) struct_or_union_specifier -> struct_or_union ID . LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> struct_or_union ID .

    LBRACE          shift and go to state 145
    AUTO            reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    REGISTER        reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    STATIC          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    EXTERN          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    TYPEDEF         reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    VOID            reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    BOOL            reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    CHAR            reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    SHORT           reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    INT             reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    LONG            reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    FLOAT           reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    DOUBLE          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    SIGNED          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    UNSIGNED        reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    TYPEID          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    CONST           reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    VOLATILE        reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    ENUM            reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    STRUCT          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    UNION           reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    SEMI            reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    TIMES           reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    ID              reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    LPAREN          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    LBRACKET        reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    COMMA           reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    RPAREN          reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)
    COLON           reduce using rule 41 (struct_or_union_specifier -> struct_or_union ID .)


state 60

    (40) struct_or_union_specifier -> struct_or_union LBRACE . struct_declaration_list RBRACE
    (44) struct_declaration_list -> . struct_declaration
    (45) struct_declaration_list -> . struct_declaration_list struct_declaration
    (50) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    struct_or_union                shift and go to state 35
    struct_declaration_list        shift and go to state 146
    struct_declaration             shift and go to state 147
    specifier_qualifier_list       shift and go to state 148
    type_specifier                 shift and go to state 149
    type_qualifier                 shift and go to state 150
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 61

    (60) enum_specifier -> ENUM ID . LBRACE enumerator_list RBRACE
    (62) enum_specifier -> ENUM ID .

    LBRACE          shift and go to state 151
    AUTO            reduce using rule 62 (enum_specifier -> ENUM ID .)
    REGISTER        reduce using rule 62 (enum_specifier -> ENUM ID .)
    STATIC          reduce using rule 62 (enum_specifier -> ENUM ID .)
    EXTERN          reduce using rule 62 (enum_specifier -> ENUM ID .)
    TYPEDEF         reduce using rule 62 (enum_specifier -> ENUM ID .)
    VOID            reduce using rule 62 (enum_specifier -> ENUM ID .)
    BOOL            reduce using rule 62 (enum_specifier -> ENUM ID .)
    CHAR            reduce using rule 62 (enum_specifier -> ENUM ID .)
    SHORT           reduce using rule 62 (enum_specifier -> ENUM ID .)
    INT             reduce using rule 62 (enum_specifier -> ENUM ID .)
    LONG            reduce using rule 62 (enum_specifier -> ENUM ID .)
    FLOAT           reduce using rule 62 (enum_specifier -> ENUM ID .)
    DOUBLE          reduce using rule 62 (enum_specifier -> ENUM ID .)
    SIGNED          reduce using rule 62 (enum_specifier -> ENUM ID .)
    UNSIGNED        reduce using rule 62 (enum_specifier -> ENUM ID .)
    TYPEID          reduce using rule 62 (enum_specifier -> ENUM ID .)
    CONST           reduce using rule 62 (enum_specifier -> ENUM ID .)
    VOLATILE        reduce using rule 62 (enum_specifier -> ENUM ID .)
    ENUM            reduce using rule 62 (enum_specifier -> ENUM ID .)
    STRUCT          reduce using rule 62 (enum_specifier -> ENUM ID .)
    UNION           reduce using rule 62 (enum_specifier -> ENUM ID .)
    SEMI            reduce using rule 62 (enum_specifier -> ENUM ID .)
    TIMES           reduce using rule 62 (enum_specifier -> ENUM ID .)
    ID              reduce using rule 62 (enum_specifier -> ENUM ID .)
    LPAREN          reduce using rule 62 (enum_specifier -> ENUM ID .)
    LBRACKET        reduce using rule 62 (enum_specifier -> ENUM ID .)
    COMMA           reduce using rule 62 (enum_specifier -> ENUM ID .)
    RPAREN          reduce using rule 62 (enum_specifier -> ENUM ID .)
    COLON           reduce using rule 62 (enum_specifier -> ENUM ID .)


state 62

    (61) enum_specifier -> ENUM LBRACE . enumerator_list RBRACE
    (63) enumerator_list -> . enumerator
    (64) enumerator_list -> . enumerator_list COMMA enumerator
    (65) enumerator -> . ID
    (66) enumerator -> . ID EQUALS constant_expression

    ID              shift and go to state 154

    enumerator_list                shift and go to state 152
    enumerator                     shift and go to state 153

state 63

    (5) function_definition -> declaration_specifiers declarator declaration_list . compound_statement
    (12) declaration_list -> declaration_list . declaration
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    LBRACE          shift and go to state 47
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    declaration_specifiers         shift and go to state 48
    compound_statement             shift and go to state 155
    declaration                    shift and go to state 69
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 64

    (8) function_definition -> declaration_specifiers declarator compound_statement .

    AUTO            reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    REGISTER        reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    STATIC          reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    EXTERN          reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    TYPEDEF         reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOID            reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    BOOL            reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    CHAR            reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    SHORT           reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    INT             reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    LONG            reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    FLOAT           reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    DOUBLE          reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    SIGNED          reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNSIGNED        reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    TYPEID          reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    CONST           reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOLATILE        reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    TIMES           reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    ID              reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    LPAREN          reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    ENUM            reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    STRUCT          reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNION           reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)
    $end            reduce using rule 8 (function_definition -> declaration_specifiers declarator compound_statement .)


state 65

    (49) init_declarator -> declarator EQUALS . initializer
    (89) initializer -> . assignment_expression
    (90) initializer -> . LBRACE initializer_list RBRACE
    (91) initializer -> . LBRACE initializer_list COMMA RBRACE
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    LBRACE          shift and go to state 158
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    initializer                    shift and go to state 156
    assignment_expression          shift and go to state 157
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 66

    (9) declaration -> declaration_specifiers init_declarator_list SEMI .

    AUTO            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    REGISTER        reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STATIC          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    EXTERN          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TYPEDEF         reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    VOID            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    BOOL            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CHAR            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SHORT           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    INT             reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    LONG            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FLOAT           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DOUBLE          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SIGNED          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    UNSIGNED        reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TYPEID          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CONST           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    VOLATILE        reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TIMES           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ID              reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    LPAREN          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ENUM            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STRUCT          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    UNION           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    $end            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    LBRACE          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    RBRACE          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CASE            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DEFAULT         reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    IF              reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SWITCH          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    WHILE           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FOR             reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DO              reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    GOTO            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CONTINUE        reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    BREAK           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    RETURN          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    PLUSPLUS        reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    MINUSMINUS      reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SIZEOF          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    AND             reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    PLUS            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    MINUS           reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    NOT             reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    LNOT            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SCONST          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ICONST          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FCONST          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CCONST          reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SEMI            reduce using rule 9 (declaration -> declaration_specifiers init_declarator_list SEMI .)


state 67

    (47) init_declarator_list -> init_declarator_list COMMA . init_declarator
    (48) init_declarator -> . declarator
    (49) init_declarator -> . declarator EQUALS initializer
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN

    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34

    init_declarator                shift and go to state 159
    declarator                     shift and go to state 127
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11

state 68

    (6) function_definition -> declarator declaration_list compound_statement .

    AUTO            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    STATIC          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    TYPEDEF         reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    VOID            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    BOOL            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    CHAR            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    SHORT           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    INT             reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    LONG            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    TYPEID          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    CONST           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    TIMES           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    ID              reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    LPAREN          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    ENUM            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    UNION           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    $end            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)


state 69

    (12) declaration_list -> declaration_list declaration .

    LBRACE          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    AUTO            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    REGISTER        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    STATIC          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    EXTERN          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    TYPEDEF         reduce using rule 12 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    BOOL            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    CHAR            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SHORT           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 12 (declaration_list -> declaration_list declaration .)
    LONG            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    DOUBLE          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SIGNED          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    UNSIGNED        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    TYPEID          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    CONST           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    VOLATILE        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    ENUM            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    STRUCT          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    UNION           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    RBRACE          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 12 (declaration_list -> declaration_list declaration .)
    CASE            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    DEFAULT         reduce using rule 12 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SWITCH          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 12 (declaration_list -> declaration_list declaration .)
    DO              reduce using rule 12 (declaration_list -> declaration_list declaration .)
    GOTO            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    CONTINUE        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    BREAK           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    PLUSPLUS        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    MINUSMINUS      reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SIZEOF          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    AND             reduce using rule 12 (declaration_list -> declaration_list declaration .)
    TIMES           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    PLUS            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    MINUS           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    NOT             reduce using rule 12 (declaration_list -> declaration_list declaration .)
    LNOT            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SCONST          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    ICONST          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    FCONST          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    CCONST          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SEMI            reduce using rule 12 (declaration_list -> declaration_list declaration .)


state 70

    (119) compound_statement -> LBRACE declaration_list . statement_list RBRACE
    (121) compound_statement -> LBRACE declaration_list . RBRACE
    (12) declaration_list -> declaration_list . declaration
    (123) statement_list -> . statement
    (124) statement_list -> . statement_list statement
    (9) declaration -> . declaration_specifiers init_declarator_list SEMI
    (10) declaration -> . declaration_specifiers SEMI
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    RBRACE          shift and go to state 161
    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    SEMI            reduce using rule 214 (empty -> .)
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    statement_list                 shift and go to state 160
    declaration                    shift and go to state 69
    statement                      shift and go to state 73
    declaration_specifiers         shift and go to state 48
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    expression_opt                 shift and go to state 83
    expression                     shift and go to state 86
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    empty                          shift and go to state 95
    struct_or_union                shift and go to state 35
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 71

    (120) compound_statement -> LBRACE statement_list . RBRACE
    (124) statement_list -> statement_list . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    RBRACE          shift and go to state 162
    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    statement                      shift and go to state 163
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    expression                     shift and go to state 86
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 72

    (122) compound_statement -> LBRACE RBRACE .

    AUTO            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    REGISTER        reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    STATIC          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    EXTERN          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    TYPEDEF         reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    VOID            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    BOOL            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    CHAR            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    SHORT           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    INT             reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    LONG            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    FLOAT           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    SIGNED          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    UNSIGNED        reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    TYPEID          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    CONST           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    VOLATILE        reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    TIMES           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    ID              reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    LPAREN          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    ENUM            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    STRUCT          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    UNION           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    $end            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    CASE            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    LBRACE          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    IF              reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    SWITCH          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    WHILE           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    FOR             reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    DO              reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    GOTO            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    BREAK           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    RETURN          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    PLUSPLUS        reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    MINUSMINUS      reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    SIZEOF          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    AND             reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    PLUS            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    MINUS           reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    NOT             reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    LNOT            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    SCONST          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    ICONST          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    FCONST          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    CCONST          reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    SEMI            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)
    ELSE            reduce using rule 122 (compound_statement -> LBRACE RBRACE .)


state 73

    (123) statement_list -> statement .

    RBRACE          reduce using rule 123 (statement_list -> statement .)
    ID              reduce using rule 123 (statement_list -> statement .)
    CASE            reduce using rule 123 (statement_list -> statement .)
    DEFAULT         reduce using rule 123 (statement_list -> statement .)
    LBRACE          reduce using rule 123 (statement_list -> statement .)
    IF              reduce using rule 123 (statement_list -> statement .)
    SWITCH          reduce using rule 123 (statement_list -> statement .)
    WHILE           reduce using rule 123 (statement_list -> statement .)
    FOR             reduce using rule 123 (statement_list -> statement .)
    DO              reduce using rule 123 (statement_list -> statement .)
    GOTO            reduce using rule 123 (statement_list -> statement .)
    CONTINUE        reduce using rule 123 (statement_list -> statement .)
    BREAK           reduce using rule 123 (statement_list -> statement .)
    RETURN          reduce using rule 123 (statement_list -> statement .)
    PLUSPLUS        reduce using rule 123 (statement_list -> statement .)
    MINUSMINUS      reduce using rule 123 (statement_list -> statement .)
    SIZEOF          reduce using rule 123 (statement_list -> statement .)
    AND             reduce using rule 123 (statement_list -> statement .)
    TIMES           reduce using rule 123 (statement_list -> statement .)
    PLUS            reduce using rule 123 (statement_list -> statement .)
    MINUS           reduce using rule 123 (statement_list -> statement .)
    NOT             reduce using rule 123 (statement_list -> statement .)
    LNOT            reduce using rule 123 (statement_list -> statement .)
    SCONST          reduce using rule 123 (statement_list -> statement .)
    LPAREN          reduce using rule 123 (statement_list -> statement .)
    ICONST          reduce using rule 123 (statement_list -> statement .)
    FCONST          reduce using rule 123 (statement_list -> statement .)
    CCONST          reduce using rule 123 (statement_list -> statement .)
    SEMI            reduce using rule 123 (statement_list -> statement .)


state 74

    (109) statement -> labeled_statement .

    RBRACE          reduce using rule 109 (statement -> labeled_statement .)
    ID              reduce using rule 109 (statement -> labeled_statement .)
    CASE            reduce using rule 109 (statement -> labeled_statement .)
    DEFAULT         reduce using rule 109 (statement -> labeled_statement .)
    LBRACE          reduce using rule 109 (statement -> labeled_statement .)
    IF              reduce using rule 109 (statement -> labeled_statement .)
    SWITCH          reduce using rule 109 (statement -> labeled_statement .)
    WHILE           reduce using rule 109 (statement -> labeled_statement .)
    FOR             reduce using rule 109 (statement -> labeled_statement .)
    DO              reduce using rule 109 (statement -> labeled_statement .)
    GOTO            reduce using rule 109 (statement -> labeled_statement .)
    CONTINUE        reduce using rule 109 (statement -> labeled_statement .)
    BREAK           reduce using rule 109 (statement -> labeled_statement .)
    RETURN          reduce using rule 109 (statement -> labeled_statement .)
    PLUSPLUS        reduce using rule 109 (statement -> labeled_statement .)
    MINUSMINUS      reduce using rule 109 (statement -> labeled_statement .)
    SIZEOF          reduce using rule 109 (statement -> labeled_statement .)
    AND             reduce using rule 109 (statement -> labeled_statement .)
    TIMES           reduce using rule 109 (statement -> labeled_statement .)
    PLUS            reduce using rule 109 (statement -> labeled_statement .)
    MINUS           reduce using rule 109 (statement -> labeled_statement .)
    NOT             reduce using rule 109 (statement -> labeled_statement .)
    LNOT            reduce using rule 109 (statement -> labeled_statement .)
    SCONST          reduce using rule 109 (statement -> labeled_statement .)
    LPAREN          reduce using rule 109 (statement -> labeled_statement .)
    ICONST          reduce using rule 109 (statement -> labeled_statement .)
    FCONST          reduce using rule 109 (statement -> labeled_statement .)
    CCONST          reduce using rule 109 (statement -> labeled_statement .)
    SEMI            reduce using rule 109 (statement -> labeled_statement .)
    ELSE            reduce using rule 109 (statement -> labeled_statement .)


state 75

    (110) statement -> expression_statement .

    RBRACE          reduce using rule 110 (statement -> expression_statement .)
    ID              reduce using rule 110 (statement -> expression_statement .)
    CASE            reduce using rule 110 (statement -> expression_statement .)
    DEFAULT         reduce using rule 110 (statement -> expression_statement .)
    LBRACE          reduce using rule 110 (statement -> expression_statement .)
    IF              reduce using rule 110 (statement -> expression_statement .)
    SWITCH          reduce using rule 110 (statement -> expression_statement .)
    WHILE           reduce using rule 110 (statement -> expression_statement .)
    FOR             reduce using rule 110 (statement -> expression_statement .)
    DO              reduce using rule 110 (statement -> expression_statement .)
    GOTO            reduce using rule 110 (statement -> expression_statement .)
    CONTINUE        reduce using rule 110 (statement -> expression_statement .)
    BREAK           reduce using rule 110 (statement -> expression_statement .)
    RETURN          reduce using rule 110 (statement -> expression_statement .)
    PLUSPLUS        reduce using rule 110 (statement -> expression_statement .)
    MINUSMINUS      reduce using rule 110 (statement -> expression_statement .)
    SIZEOF          reduce using rule 110 (statement -> expression_statement .)
    AND             reduce using rule 110 (statement -> expression_statement .)
    TIMES           reduce using rule 110 (statement -> expression_statement .)
    PLUS            reduce using rule 110 (statement -> expression_statement .)
    MINUS           reduce using rule 110 (statement -> expression_statement .)
    NOT             reduce using rule 110 (statement -> expression_statement .)
    LNOT            reduce using rule 110 (statement -> expression_statement .)
    SCONST          reduce using rule 110 (statement -> expression_statement .)
    LPAREN          reduce using rule 110 (statement -> expression_statement .)
    ICONST          reduce using rule 110 (statement -> expression_statement .)
    FCONST          reduce using rule 110 (statement -> expression_statement .)
    CCONST          reduce using rule 110 (statement -> expression_statement .)
    SEMI            reduce using rule 110 (statement -> expression_statement .)
    ELSE            reduce using rule 110 (statement -> expression_statement .)


state 76

    (111) statement -> compound_statement .

    RBRACE          reduce using rule 111 (statement -> compound_statement .)
    ID              reduce using rule 111 (statement -> compound_statement .)
    CASE            reduce using rule 111 (statement -> compound_statement .)
    DEFAULT         reduce using rule 111 (statement -> compound_statement .)
    LBRACE          reduce using rule 111 (statement -> compound_statement .)
    IF              reduce using rule 111 (statement -> compound_statement .)
    SWITCH          reduce using rule 111 (statement -> compound_statement .)
    WHILE           reduce using rule 111 (statement -> compound_statement .)
    FOR             reduce using rule 111 (statement -> compound_statement .)
    DO              reduce using rule 111 (statement -> compound_statement .)
    GOTO            reduce using rule 111 (statement -> compound_statement .)
    CONTINUE        reduce using rule 111 (statement -> compound_statement .)
    BREAK           reduce using rule 111 (statement -> compound_statement .)
    RETURN          reduce using rule 111 (statement -> compound_statement .)
    PLUSPLUS        reduce using rule 111 (statement -> compound_statement .)
    MINUSMINUS      reduce using rule 111 (statement -> compound_statement .)
    SIZEOF          reduce using rule 111 (statement -> compound_statement .)
    AND             reduce using rule 111 (statement -> compound_statement .)
    TIMES           reduce using rule 111 (statement -> compound_statement .)
    PLUS            reduce using rule 111 (statement -> compound_statement .)
    MINUS           reduce using rule 111 (statement -> compound_statement .)
    NOT             reduce using rule 111 (statement -> compound_statement .)
    LNOT            reduce using rule 111 (statement -> compound_statement .)
    SCONST          reduce using rule 111 (statement -> compound_statement .)
    LPAREN          reduce using rule 111 (statement -> compound_statement .)
    ICONST          reduce using rule 111 (statement -> compound_statement .)
    FCONST          reduce using rule 111 (statement -> compound_statement .)
    CCONST          reduce using rule 111 (statement -> compound_statement .)
    SEMI            reduce using rule 111 (statement -> compound_statement .)
    ELSE            reduce using rule 111 (statement -> compound_statement .)


state 77

    (112) statement -> selection_statement .

    RBRACE          reduce using rule 112 (statement -> selection_statement .)
    ID              reduce using rule 112 (statement -> selection_statement .)
    CASE            reduce using rule 112 (statement -> selection_statement .)
    DEFAULT         reduce using rule 112 (statement -> selection_statement .)
    LBRACE          reduce using rule 112 (statement -> selection_statement .)
    IF              reduce using rule 112 (statement -> selection_statement .)
    SWITCH          reduce using rule 112 (statement -> selection_statement .)
    WHILE           reduce using rule 112 (statement -> selection_statement .)
    FOR             reduce using rule 112 (statement -> selection_statement .)
    DO              reduce using rule 112 (statement -> selection_statement .)
    GOTO            reduce using rule 112 (statement -> selection_statement .)
    CONTINUE        reduce using rule 112 (statement -> selection_statement .)
    BREAK           reduce using rule 112 (statement -> selection_statement .)
    RETURN          reduce using rule 112 (statement -> selection_statement .)
    PLUSPLUS        reduce using rule 112 (statement -> selection_statement .)
    MINUSMINUS      reduce using rule 112 (statement -> selection_statement .)
    SIZEOF          reduce using rule 112 (statement -> selection_statement .)
    AND             reduce using rule 112 (statement -> selection_statement .)
    TIMES           reduce using rule 112 (statement -> selection_statement .)
    PLUS            reduce using rule 112 (statement -> selection_statement .)
    MINUS           reduce using rule 112 (statement -> selection_statement .)
    NOT             reduce using rule 112 (statement -> selection_statement .)
    LNOT            reduce using rule 112 (statement -> selection_statement .)
    SCONST          reduce using rule 112 (statement -> selection_statement .)
    LPAREN          reduce using rule 112 (statement -> selection_statement .)
    ICONST          reduce using rule 112 (statement -> selection_statement .)
    FCONST          reduce using rule 112 (statement -> selection_statement .)
    CCONST          reduce using rule 112 (statement -> selection_statement .)
    SEMI            reduce using rule 112 (statement -> selection_statement .)
    ELSE            reduce using rule 112 (statement -> selection_statement .)


state 78

    (113) statement -> iteration_statement .

    RBRACE          reduce using rule 113 (statement -> iteration_statement .)
    ID              reduce using rule 113 (statement -> iteration_statement .)
    CASE            reduce using rule 113 (statement -> iteration_statement .)
    DEFAULT         reduce using rule 113 (statement -> iteration_statement .)
    LBRACE          reduce using rule 113 (statement -> iteration_statement .)
    IF              reduce using rule 113 (statement -> iteration_statement .)
    SWITCH          reduce using rule 113 (statement -> iteration_statement .)
    WHILE           reduce using rule 113 (statement -> iteration_statement .)
    FOR             reduce using rule 113 (statement -> iteration_statement .)
    DO              reduce using rule 113 (statement -> iteration_statement .)
    GOTO            reduce using rule 113 (statement -> iteration_statement .)
    CONTINUE        reduce using rule 113 (statement -> iteration_statement .)
    BREAK           reduce using rule 113 (statement -> iteration_statement .)
    RETURN          reduce using rule 113 (statement -> iteration_statement .)
    PLUSPLUS        reduce using rule 113 (statement -> iteration_statement .)
    MINUSMINUS      reduce using rule 113 (statement -> iteration_statement .)
    SIZEOF          reduce using rule 113 (statement -> iteration_statement .)
    AND             reduce using rule 113 (statement -> iteration_statement .)
    TIMES           reduce using rule 113 (statement -> iteration_statement .)
    PLUS            reduce using rule 113 (statement -> iteration_statement .)
    MINUS           reduce using rule 113 (statement -> iteration_statement .)
    NOT             reduce using rule 113 (statement -> iteration_statement .)
    LNOT            reduce using rule 113 (statement -> iteration_statement .)
    SCONST          reduce using rule 113 (statement -> iteration_statement .)
    LPAREN          reduce using rule 113 (statement -> iteration_statement .)
    ICONST          reduce using rule 113 (statement -> iteration_statement .)
    FCONST          reduce using rule 113 (statement -> iteration_statement .)
    CCONST          reduce using rule 113 (statement -> iteration_statement .)
    SEMI            reduce using rule 113 (statement -> iteration_statement .)
    ELSE            reduce using rule 113 (statement -> iteration_statement .)


state 79

    (114) statement -> jump_statement .

    RBRACE          reduce using rule 114 (statement -> jump_statement .)
    ID              reduce using rule 114 (statement -> jump_statement .)
    CASE            reduce using rule 114 (statement -> jump_statement .)
    DEFAULT         reduce using rule 114 (statement -> jump_statement .)
    LBRACE          reduce using rule 114 (statement -> jump_statement .)
    IF              reduce using rule 114 (statement -> jump_statement .)
    SWITCH          reduce using rule 114 (statement -> jump_statement .)
    WHILE           reduce using rule 114 (statement -> jump_statement .)
    FOR             reduce using rule 114 (statement -> jump_statement .)
    DO              reduce using rule 114 (statement -> jump_statement .)
    GOTO            reduce using rule 114 (statement -> jump_statement .)
    CONTINUE        reduce using rule 114 (statement -> jump_statement .)
    BREAK           reduce using rule 114 (statement -> jump_statement .)
    RETURN          reduce using rule 114 (statement -> jump_statement .)
    PLUSPLUS        reduce using rule 114 (statement -> jump_statement .)
    MINUSMINUS      reduce using rule 114 (statement -> jump_statement .)
    SIZEOF          reduce using rule 114 (statement -> jump_statement .)
    AND             reduce using rule 114 (statement -> jump_statement .)
    TIMES           reduce using rule 114 (statement -> jump_statement .)
    PLUS            reduce using rule 114 (statement -> jump_statement .)
    MINUS           reduce using rule 114 (statement -> jump_statement .)
    NOT             reduce using rule 114 (statement -> jump_statement .)
    LNOT            reduce using rule 114 (statement -> jump_statement .)
    SCONST          reduce using rule 114 (statement -> jump_statement .)
    LPAREN          reduce using rule 114 (statement -> jump_statement .)
    ICONST          reduce using rule 114 (statement -> jump_statement .)
    FCONST          reduce using rule 114 (statement -> jump_statement .)
    CCONST          reduce using rule 114 (statement -> jump_statement .)
    SEMI            reduce using rule 114 (statement -> jump_statement .)
    ELSE            reduce using rule 114 (statement -> jump_statement .)


state 80

    (115) labeled_statement -> ID . COLON statement
    (205) primary_expression -> ID .

    COLON           shift and go to state 164
    LBRACKET        reduce using rule 205 (primary_expression -> ID .)
    LPAREN          reduce using rule 205 (primary_expression -> ID .)
    PERIOD          reduce using rule 205 (primary_expression -> ID .)
    ARROW           reduce using rule 205 (primary_expression -> ID .)
    PLUSPLUS        reduce using rule 205 (primary_expression -> ID .)
    MINUSMINUS      reduce using rule 205 (primary_expression -> ID .)
    EQUALS          reduce using rule 205 (primary_expression -> ID .)
    TIMESEQUAL      reduce using rule 205 (primary_expression -> ID .)
    DIVEQUAL        reduce using rule 205 (primary_expression -> ID .)
    MODEQUAL        reduce using rule 205 (primary_expression -> ID .)
    PLUSEQUAL       reduce using rule 205 (primary_expression -> ID .)
    MINUSEQUAL      reduce using rule 205 (primary_expression -> ID .)
    LSHIFTEQUAL     reduce using rule 205 (primary_expression -> ID .)
    RSHIFTEQUAL     reduce using rule 205 (primary_expression -> ID .)
    ANDEQUAL        reduce using rule 205 (primary_expression -> ID .)
    OREQUAL         reduce using rule 205 (primary_expression -> ID .)
    XOREQUAL        reduce using rule 205 (primary_expression -> ID .)
    TIMES           reduce using rule 205 (primary_expression -> ID .)
    DIVIDE          reduce using rule 205 (primary_expression -> ID .)
    MOD             reduce using rule 205 (primary_expression -> ID .)
    PLUS            reduce using rule 205 (primary_expression -> ID .)
    MINUS           reduce using rule 205 (primary_expression -> ID .)
    LSHIFT          reduce using rule 205 (primary_expression -> ID .)
    RSHIFT          reduce using rule 205 (primary_expression -> ID .)
    LT              reduce using rule 205 (primary_expression -> ID .)
    GT              reduce using rule 205 (primary_expression -> ID .)
    LE              reduce using rule 205 (primary_expression -> ID .)
    GE              reduce using rule 205 (primary_expression -> ID .)
    EQ              reduce using rule 205 (primary_expression -> ID .)
    NE              reduce using rule 205 (primary_expression -> ID .)
    AND             reduce using rule 205 (primary_expression -> ID .)
    XOR             reduce using rule 205 (primary_expression -> ID .)
    OR              reduce using rule 205 (primary_expression -> ID .)
    LAND            reduce using rule 205 (primary_expression -> ID .)
    CONDOP          reduce using rule 205 (primary_expression -> ID .)
    LOR             reduce using rule 205 (primary_expression -> ID .)
    COMMA           reduce using rule 205 (primary_expression -> ID .)
    SEMI            reduce using rule 205 (primary_expression -> ID .)


state 81

    (116) labeled_statement -> CASE . constant_expression COLON statement
    (154) constant_expression -> . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    constant_expression            shift and go to state 165
    conditional_expression         shift and go to state 131
    logical_or_expression          shift and go to state 99
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 82

    (117) labeled_statement -> DEFAULT . COLON statement

    COLON           shift and go to state 166


state 83

    (118) expression_statement -> expression_opt . SEMI

    SEMI            shift and go to state 167


state 84

    (125) selection_statement -> IF . LPAREN expression RPAREN statement
    (126) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 168


state 85

    (208) primary_expression -> LPAREN . expression RPAREN
    (184) cast_expression -> LPAREN . type_name RPAREN cast_expression
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (94) type_name -> . specifier_qualifier_list abstract_declarator_opt
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ENUM            shift and go to state 36
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 169
    type_name                      shift and go to state 170
    cast_expression                shift and go to state 104
    assignment_expression          shift and go to state 96
    specifier_qualifier_list       shift and go to state 171
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    type_specifier                 shift and go to state 149
    type_qualifier                 shift and go to state 150
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    struct_or_union                shift and go to state 35
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 86

    (136) expression_opt -> expression .
    (138) expression -> expression . COMMA assignment_expression

    SEMI            reduce using rule 136 (expression_opt -> expression .)
    RPAREN          reduce using rule 136 (expression_opt -> expression .)
    COMMA           shift and go to state 172


state 87

    (127) selection_statement -> SWITCH . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 173


state 88

    (128) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 174


state 89

    (129) iteration_statement -> FOR . LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement

    LPAREN          shift and go to state 175


state 90

    (130) iteration_statement -> DO . statement WHILE LPAREN expression RPAREN SEMI
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    statement                      shift and go to state 176
    expression                     shift and go to state 86
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 91

    (131) jump_statement -> GOTO . ID SEMI

    ID              shift and go to state 177


state 92

    (132) jump_statement -> CONTINUE . SEMI

    SEMI            shift and go to state 178


state 93

    (133) jump_statement -> BREAK . SEMI

    SEMI            shift and go to state 179


state 94

    (134) jump_statement -> RETURN . expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression_opt                 shift and go to state 180
    empty                          shift and go to state 95
    expression                     shift and go to state 86
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 95

    (135) expression_opt -> empty .

    SEMI            reduce using rule 135 (expression_opt -> empty .)
    RPAREN          reduce using rule 135 (expression_opt -> empty .)


state 96

    (137) expression -> assignment_expression .

    COMMA           reduce using rule 137 (expression -> assignment_expression .)
    SEMI            reduce using rule 137 (expression -> assignment_expression .)
    RPAREN          reduce using rule 137 (expression -> assignment_expression .)
    COLON           reduce using rule 137 (expression -> assignment_expression .)
    RBRACKET        reduce using rule 137 (expression -> assignment_expression .)


state 97

    (139) assignment_expression -> conditional_expression .

    COMMA           reduce using rule 139 (assignment_expression -> conditional_expression .)
    SEMI            reduce using rule 139 (assignment_expression -> conditional_expression .)
    RPAREN          reduce using rule 139 (assignment_expression -> conditional_expression .)
    RBRACE          reduce using rule 139 (assignment_expression -> conditional_expression .)
    COLON           reduce using rule 139 (assignment_expression -> conditional_expression .)
    RBRACKET        reduce using rule 139 (assignment_expression -> conditional_expression .)


state 98

    (140) assignment_expression -> unary_expression . assignment_operator assignment_expression
    (183) cast_expression -> unary_expression .
    (141) assignment_operator -> . EQUALS
    (142) assignment_operator -> . TIMESEQUAL
    (143) assignment_operator -> . DIVEQUAL
    (144) assignment_operator -> . MODEQUAL
    (145) assignment_operator -> . PLUSEQUAL
    (146) assignment_operator -> . MINUSEQUAL
    (147) assignment_operator -> . LSHIFTEQUAL
    (148) assignment_operator -> . RSHIFTEQUAL
    (149) assignment_operator -> . ANDEQUAL
    (150) assignment_operator -> . OREQUAL
    (151) assignment_operator -> . XOREQUAL

    TIMES           reduce using rule 183 (cast_expression -> unary_expression .)
    DIVIDE          reduce using rule 183 (cast_expression -> unary_expression .)
    MOD             reduce using rule 183 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 183 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 183 (cast_expression -> unary_expression .)
    LSHIFT          reduce using rule 183 (cast_expression -> unary_expression .)
    RSHIFT          reduce using rule 183 (cast_expression -> unary_expression .)
    LT              reduce using rule 183 (cast_expression -> unary_expression .)
    GT              reduce using rule 183 (cast_expression -> unary_expression .)
    LE              reduce using rule 183 (cast_expression -> unary_expression .)
    GE              reduce using rule 183 (cast_expression -> unary_expression .)
    EQ              reduce using rule 183 (cast_expression -> unary_expression .)
    NE              reduce using rule 183 (cast_expression -> unary_expression .)
    AND             reduce using rule 183 (cast_expression -> unary_expression .)
    XOR             reduce using rule 183 (cast_expression -> unary_expression .)
    OR              reduce using rule 183 (cast_expression -> unary_expression .)
    LAND            reduce using rule 183 (cast_expression -> unary_expression .)
    CONDOP          reduce using rule 183 (cast_expression -> unary_expression .)
    LOR             reduce using rule 183 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 183 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 183 (cast_expression -> unary_expression .)
    RPAREN          reduce using rule 183 (cast_expression -> unary_expression .)
    RBRACE          reduce using rule 183 (cast_expression -> unary_expression .)
    COLON           reduce using rule 183 (cast_expression -> unary_expression .)
    RBRACKET        reduce using rule 183 (cast_expression -> unary_expression .)
    EQUALS          shift and go to state 182
    TIMESEQUAL      shift and go to state 183
    DIVEQUAL        shift and go to state 184
    MODEQUAL        shift and go to state 185
    PLUSEQUAL       shift and go to state 186
    MINUSEQUAL      shift and go to state 187
    LSHIFTEQUAL     shift and go to state 188
    RSHIFTEQUAL     shift and go to state 189
    ANDEQUAL        shift and go to state 190
    OREQUAL         shift and go to state 191
    XOREQUAL        shift and go to state 192

    assignment_operator            shift and go to state 181

state 99

    (152) conditional_expression -> logical_or_expression .
    (153) conditional_expression -> logical_or_expression . CONDOP expression COLON conditional_expression
    (156) logical_or_expression -> logical_or_expression . LOR logical_and_expression

    COMMA           reduce using rule 152 (conditional_expression -> logical_or_expression .)
    SEMI            reduce using rule 152 (conditional_expression -> logical_or_expression .)
    RBRACKET        reduce using rule 152 (conditional_expression -> logical_or_expression .)
    COLON           reduce using rule 152 (conditional_expression -> logical_or_expression .)
    RPAREN          reduce using rule 152 (conditional_expression -> logical_or_expression .)
    RBRACE          reduce using rule 152 (conditional_expression -> logical_or_expression .)
    CONDOP          shift and go to state 193
    LOR             shift and go to state 194


state 100

    (185) unary_expression -> postfix_expression .
    (198) postfix_expression -> postfix_expression . LBRACKET expression RBRACKET
    (199) postfix_expression -> postfix_expression . LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> postfix_expression . LPAREN RPAREN
    (201) postfix_expression -> postfix_expression . PERIOD ID
    (202) postfix_expression -> postfix_expression . ARROW ID
    (203) postfix_expression -> postfix_expression . PLUSPLUS
    (204) postfix_expression -> postfix_expression . MINUSMINUS

    EQUALS          reduce using rule 185 (unary_expression -> postfix_expression .)
    TIMESEQUAL      reduce using rule 185 (unary_expression -> postfix_expression .)
    DIVEQUAL        reduce using rule 185 (unary_expression -> postfix_expression .)
    MODEQUAL        reduce using rule 185 (unary_expression -> postfix_expression .)
    PLUSEQUAL       reduce using rule 185 (unary_expression -> postfix_expression .)
    MINUSEQUAL      reduce using rule 185 (unary_expression -> postfix_expression .)
    LSHIFTEQUAL     reduce using rule 185 (unary_expression -> postfix_expression .)
    RSHIFTEQUAL     reduce using rule 185 (unary_expression -> postfix_expression .)
    ANDEQUAL        reduce using rule 185 (unary_expression -> postfix_expression .)
    OREQUAL         reduce using rule 185 (unary_expression -> postfix_expression .)
    XOREQUAL        reduce using rule 185 (unary_expression -> postfix_expression .)
    TIMES           reduce using rule 185 (unary_expression -> postfix_expression .)
    DIVIDE          reduce using rule 185 (unary_expression -> postfix_expression .)
    MOD             reduce using rule 185 (unary_expression -> postfix_expression .)
    PLUS            reduce using rule 185 (unary_expression -> postfix_expression .)
    MINUS           reduce using rule 185 (unary_expression -> postfix_expression .)
    LSHIFT          reduce using rule 185 (unary_expression -> postfix_expression .)
    RSHIFT          reduce using rule 185 (unary_expression -> postfix_expression .)
    LT              reduce using rule 185 (unary_expression -> postfix_expression .)
    GT              reduce using rule 185 (unary_expression -> postfix_expression .)
    LE              reduce using rule 185 (unary_expression -> postfix_expression .)
    GE              reduce using rule 185 (unary_expression -> postfix_expression .)
    EQ              reduce using rule 185 (unary_expression -> postfix_expression .)
    NE              reduce using rule 185 (unary_expression -> postfix_expression .)
    AND             reduce using rule 185 (unary_expression -> postfix_expression .)
    XOR             reduce using rule 185 (unary_expression -> postfix_expression .)
    OR              reduce using rule 185 (unary_expression -> postfix_expression .)
    LAND            reduce using rule 185 (unary_expression -> postfix_expression .)
    CONDOP          reduce using rule 185 (unary_expression -> postfix_expression .)
    LOR             reduce using rule 185 (unary_expression -> postfix_expression .)
    COMMA           reduce using rule 185 (unary_expression -> postfix_expression .)
    SEMI            reduce using rule 185 (unary_expression -> postfix_expression .)
    RBRACKET        reduce using rule 185 (unary_expression -> postfix_expression .)
    COLON           reduce using rule 185 (unary_expression -> postfix_expression .)
    RPAREN          reduce using rule 185 (unary_expression -> postfix_expression .)
    RBRACE          reduce using rule 185 (unary_expression -> postfix_expression .)
    LBRACKET        shift and go to state 195
    LPAREN          shift and go to state 196
    PERIOD          shift and go to state 197
    ARROW           shift and go to state 198
    PLUSPLUS        shift and go to state 199
    MINUSMINUS      shift and go to state 200


state 101

    (186) unary_expression -> PLUSPLUS . unary_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 202
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    unary_expression               shift and go to state 201
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 102

    (187) unary_expression -> MINUSMINUS . unary_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 202
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    unary_expression               shift and go to state 203
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 103

    (188) unary_expression -> unary_operator . cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 204
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 104

    (179) multiplicative_expression -> cast_expression .

    TIMES           reduce using rule 179 (multiplicative_expression -> cast_expression .)
    DIVIDE          reduce using rule 179 (multiplicative_expression -> cast_expression .)
    MOD             reduce using rule 179 (multiplicative_expression -> cast_expression .)
    PLUS            reduce using rule 179 (multiplicative_expression -> cast_expression .)
    MINUS           reduce using rule 179 (multiplicative_expression -> cast_expression .)
    LSHIFT          reduce using rule 179 (multiplicative_expression -> cast_expression .)
    RSHIFT          reduce using rule 179 (multiplicative_expression -> cast_expression .)
    LT              reduce using rule 179 (multiplicative_expression -> cast_expression .)
    GT              reduce using rule 179 (multiplicative_expression -> cast_expression .)
    LE              reduce using rule 179 (multiplicative_expression -> cast_expression .)
    GE              reduce using rule 179 (multiplicative_expression -> cast_expression .)
    EQ              reduce using rule 179 (multiplicative_expression -> cast_expression .)
    NE              reduce using rule 179 (multiplicative_expression -> cast_expression .)
    AND             reduce using rule 179 (multiplicative_expression -> cast_expression .)
    XOR             reduce using rule 179 (multiplicative_expression -> cast_expression .)
    OR              reduce using rule 179 (multiplicative_expression -> cast_expression .)
    LAND            reduce using rule 179 (multiplicative_expression -> cast_expression .)
    CONDOP          reduce using rule 179 (multiplicative_expression -> cast_expression .)
    LOR             reduce using rule 179 (multiplicative_expression -> cast_expression .)
    COMMA           reduce using rule 179 (multiplicative_expression -> cast_expression .)
    SEMI            reduce using rule 179 (multiplicative_expression -> cast_expression .)
    RBRACKET        reduce using rule 179 (multiplicative_expression -> cast_expression .)
    COLON           reduce using rule 179 (multiplicative_expression -> cast_expression .)
    RPAREN          reduce using rule 179 (multiplicative_expression -> cast_expression .)
    RBRACE          reduce using rule 179 (multiplicative_expression -> cast_expression .)


state 105

    (189) unary_expression -> SIZEOF . unary_expression
    (190) unary_expression -> SIZEOF . LPAREN type_name RPAREN
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 206
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    unary_expression               shift and go to state 205
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 106

    (155) logical_or_expression -> logical_and_expression .
    (158) logical_and_expression -> logical_and_expression . LAND inclusive_or_expression

    CONDOP          reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    LOR             reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    COMMA           reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    SEMI            reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    RBRACKET        reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    COLON           reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    RPAREN          reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    RBRACE          reduce using rule 155 (logical_or_expression -> logical_and_expression .)
    LAND            shift and go to state 207


state 107

    (197) postfix_expression -> primary_expression .

    LBRACKET        reduce using rule 197 (postfix_expression -> primary_expression .)
    LPAREN          reduce using rule 197 (postfix_expression -> primary_expression .)
    PERIOD          reduce using rule 197 (postfix_expression -> primary_expression .)
    ARROW           reduce using rule 197 (postfix_expression -> primary_expression .)
    PLUSPLUS        reduce using rule 197 (postfix_expression -> primary_expression .)
    MINUSMINUS      reduce using rule 197 (postfix_expression -> primary_expression .)
    EQUALS          reduce using rule 197 (postfix_expression -> primary_expression .)
    TIMESEQUAL      reduce using rule 197 (postfix_expression -> primary_expression .)
    DIVEQUAL        reduce using rule 197 (postfix_expression -> primary_expression .)
    MODEQUAL        reduce using rule 197 (postfix_expression -> primary_expression .)
    PLUSEQUAL       reduce using rule 197 (postfix_expression -> primary_expression .)
    MINUSEQUAL      reduce using rule 197 (postfix_expression -> primary_expression .)
    LSHIFTEQUAL     reduce using rule 197 (postfix_expression -> primary_expression .)
    RSHIFTEQUAL     reduce using rule 197 (postfix_expression -> primary_expression .)
    ANDEQUAL        reduce using rule 197 (postfix_expression -> primary_expression .)
    OREQUAL         reduce using rule 197 (postfix_expression -> primary_expression .)
    XOREQUAL        reduce using rule 197 (postfix_expression -> primary_expression .)
    TIMES           reduce using rule 197 (postfix_expression -> primary_expression .)
    DIVIDE          reduce using rule 197 (postfix_expression -> primary_expression .)
    MOD             reduce using rule 197 (postfix_expression -> primary_expression .)
    PLUS            reduce using rule 197 (postfix_expression -> primary_expression .)
    MINUS           reduce using rule 197 (postfix_expression -> primary_expression .)
    LSHIFT          reduce using rule 197 (postfix_expression -> primary_expression .)
    RSHIFT          reduce using rule 197 (postfix_expression -> primary_expression .)
    LT              reduce using rule 197 (postfix_expression -> primary_expression .)
    GT              reduce using rule 197 (postfix_expression -> primary_expression .)
    LE              reduce using rule 197 (postfix_expression -> primary_expression .)
    GE              reduce using rule 197 (postfix_expression -> primary_expression .)
    EQ              reduce using rule 197 (postfix_expression -> primary_expression .)
    NE              reduce using rule 197 (postfix_expression -> primary_expression .)
    AND             reduce using rule 197 (postfix_expression -> primary_expression .)
    XOR             reduce using rule 197 (postfix_expression -> primary_expression .)
    OR              reduce using rule 197 (postfix_expression -> primary_expression .)
    LAND            reduce using rule 197 (postfix_expression -> primary_expression .)
    CONDOP          reduce using rule 197 (postfix_expression -> primary_expression .)
    LOR             reduce using rule 197 (postfix_expression -> primary_expression .)
    COMMA           reduce using rule 197 (postfix_expression -> primary_expression .)
    SEMI            reduce using rule 197 (postfix_expression -> primary_expression .)
    RBRACKET        reduce using rule 197 (postfix_expression -> primary_expression .)
    COLON           reduce using rule 197 (postfix_expression -> primary_expression .)
    RPAREN          reduce using rule 197 (postfix_expression -> primary_expression .)
    RBRACE          reduce using rule 197 (postfix_expression -> primary_expression .)


state 108

    (191) unary_operator -> AND .

    LPAREN          reduce using rule 191 (unary_operator -> AND .)
    PLUSPLUS        reduce using rule 191 (unary_operator -> AND .)
    MINUSMINUS      reduce using rule 191 (unary_operator -> AND .)
    SIZEOF          reduce using rule 191 (unary_operator -> AND .)
    AND             reduce using rule 191 (unary_operator -> AND .)
    TIMES           reduce using rule 191 (unary_operator -> AND .)
    PLUS            reduce using rule 191 (unary_operator -> AND .)
    MINUS           reduce using rule 191 (unary_operator -> AND .)
    NOT             reduce using rule 191 (unary_operator -> AND .)
    LNOT            reduce using rule 191 (unary_operator -> AND .)
    ID              reduce using rule 191 (unary_operator -> AND .)
    SCONST          reduce using rule 191 (unary_operator -> AND .)
    ICONST          reduce using rule 191 (unary_operator -> AND .)
    FCONST          reduce using rule 191 (unary_operator -> AND .)
    CCONST          reduce using rule 191 (unary_operator -> AND .)


state 109

    (192) unary_operator -> TIMES .

    LPAREN          reduce using rule 192 (unary_operator -> TIMES .)
    PLUSPLUS        reduce using rule 192 (unary_operator -> TIMES .)
    MINUSMINUS      reduce using rule 192 (unary_operator -> TIMES .)
    SIZEOF          reduce using rule 192 (unary_operator -> TIMES .)
    AND             reduce using rule 192 (unary_operator -> TIMES .)
    TIMES           reduce using rule 192 (unary_operator -> TIMES .)
    PLUS            reduce using rule 192 (unary_operator -> TIMES .)
    MINUS           reduce using rule 192 (unary_operator -> TIMES .)
    NOT             reduce using rule 192 (unary_operator -> TIMES .)
    LNOT            reduce using rule 192 (unary_operator -> TIMES .)
    ID              reduce using rule 192 (unary_operator -> TIMES .)
    SCONST          reduce using rule 192 (unary_operator -> TIMES .)
    ICONST          reduce using rule 192 (unary_operator -> TIMES .)
    FCONST          reduce using rule 192 (unary_operator -> TIMES .)
    CCONST          reduce using rule 192 (unary_operator -> TIMES .)


state 110

    (193) unary_operator -> PLUS .

    LPAREN          reduce using rule 193 (unary_operator -> PLUS .)
    PLUSPLUS        reduce using rule 193 (unary_operator -> PLUS .)
    MINUSMINUS      reduce using rule 193 (unary_operator -> PLUS .)
    SIZEOF          reduce using rule 193 (unary_operator -> PLUS .)
    AND             reduce using rule 193 (unary_operator -> PLUS .)
    TIMES           reduce using rule 193 (unary_operator -> PLUS .)
    PLUS            reduce using rule 193 (unary_operator -> PLUS .)
    MINUS           reduce using rule 193 (unary_operator -> PLUS .)
    NOT             reduce using rule 193 (unary_operator -> PLUS .)
    LNOT            reduce using rule 193 (unary_operator -> PLUS .)
    ID              reduce using rule 193 (unary_operator -> PLUS .)
    SCONST          reduce using rule 193 (unary_operator -> PLUS .)
    ICONST          reduce using rule 193 (unary_operator -> PLUS .)
    FCONST          reduce using rule 193 (unary_operator -> PLUS .)
    CCONST          reduce using rule 193 (unary_operator -> PLUS .)


state 111

    (194) unary_operator -> MINUS .

    LPAREN          reduce using rule 194 (unary_operator -> MINUS .)
    PLUSPLUS        reduce using rule 194 (unary_operator -> MINUS .)
    MINUSMINUS      reduce using rule 194 (unary_operator -> MINUS .)
    SIZEOF          reduce using rule 194 (unary_operator -> MINUS .)
    AND             reduce using rule 194 (unary_operator -> MINUS .)
    TIMES           reduce using rule 194 (unary_operator -> MINUS .)
    PLUS            reduce using rule 194 (unary_operator -> MINUS .)
    MINUS           reduce using rule 194 (unary_operator -> MINUS .)
    NOT             reduce using rule 194 (unary_operator -> MINUS .)
    LNOT            reduce using rule 194 (unary_operator -> MINUS .)
    ID              reduce using rule 194 (unary_operator -> MINUS .)
    SCONST          reduce using rule 194 (unary_operator -> MINUS .)
    ICONST          reduce using rule 194 (unary_operator -> MINUS .)
    FCONST          reduce using rule 194 (unary_operator -> MINUS .)
    CCONST          reduce using rule 194 (unary_operator -> MINUS .)


state 112

    (195) unary_operator -> NOT .

    LPAREN          reduce using rule 195 (unary_operator -> NOT .)
    PLUSPLUS        reduce using rule 195 (unary_operator -> NOT .)
    MINUSMINUS      reduce using rule 195 (unary_operator -> NOT .)
    SIZEOF          reduce using rule 195 (unary_operator -> NOT .)
    AND             reduce using rule 195 (unary_operator -> NOT .)
    TIMES           reduce using rule 195 (unary_operator -> NOT .)
    PLUS            reduce using rule 195 (unary_operator -> NOT .)
    MINUS           reduce using rule 195 (unary_operator -> NOT .)
    NOT             reduce using rule 195 (unary_operator -> NOT .)
    LNOT            reduce using rule 195 (unary_operator -> NOT .)
    ID              reduce using rule 195 (unary_operator -> NOT .)
    SCONST          reduce using rule 195 (unary_operator -> NOT .)
    ICONST          reduce using rule 195 (unary_operator -> NOT .)
    FCONST          reduce using rule 195 (unary_operator -> NOT .)
    CCONST          reduce using rule 195 (unary_operator -> NOT .)


state 113

    (196) unary_operator -> LNOT .

    LPAREN          reduce using rule 196 (unary_operator -> LNOT .)
    PLUSPLUS        reduce using rule 196 (unary_operator -> LNOT .)
    MINUSMINUS      reduce using rule 196 (unary_operator -> LNOT .)
    SIZEOF          reduce using rule 196 (unary_operator -> LNOT .)
    AND             reduce using rule 196 (unary_operator -> LNOT .)
    TIMES           reduce using rule 196 (unary_operator -> LNOT .)
    PLUS            reduce using rule 196 (unary_operator -> LNOT .)
    MINUS           reduce using rule 196 (unary_operator -> LNOT .)
    NOT             reduce using rule 196 (unary_operator -> LNOT .)
    LNOT            reduce using rule 196 (unary_operator -> LNOT .)
    ID              reduce using rule 196 (unary_operator -> LNOT .)
    SCONST          reduce using rule 196 (unary_operator -> LNOT .)
    ICONST          reduce using rule 196 (unary_operator -> LNOT .)
    FCONST          reduce using rule 196 (unary_operator -> LNOT .)
    CCONST          reduce using rule 196 (unary_operator -> LNOT .)


state 114

    (157) logical_and_expression -> inclusive_or_expression .
    (160) inclusive_or_expression -> inclusive_or_expression . OR exclusive_or_expression

    LAND            reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    CONDOP          reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    LOR             reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    COMMA           reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    SEMI            reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    RBRACKET        reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    COLON           reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    RPAREN          reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    RBRACE          reduce using rule 157 (logical_and_expression -> inclusive_or_expression .)
    OR              shift and go to state 208


state 115

    (206) primary_expression -> constant .

    LBRACKET        reduce using rule 206 (primary_expression -> constant .)
    LPAREN          reduce using rule 206 (primary_expression -> constant .)
    PERIOD          reduce using rule 206 (primary_expression -> constant .)
    ARROW           reduce using rule 206 (primary_expression -> constant .)
    PLUSPLUS        reduce using rule 206 (primary_expression -> constant .)
    MINUSMINUS      reduce using rule 206 (primary_expression -> constant .)
    EQUALS          reduce using rule 206 (primary_expression -> constant .)
    TIMESEQUAL      reduce using rule 206 (primary_expression -> constant .)
    DIVEQUAL        reduce using rule 206 (primary_expression -> constant .)
    MODEQUAL        reduce using rule 206 (primary_expression -> constant .)
    PLUSEQUAL       reduce using rule 206 (primary_expression -> constant .)
    MINUSEQUAL      reduce using rule 206 (primary_expression -> constant .)
    LSHIFTEQUAL     reduce using rule 206 (primary_expression -> constant .)
    RSHIFTEQUAL     reduce using rule 206 (primary_expression -> constant .)
    ANDEQUAL        reduce using rule 206 (primary_expression -> constant .)
    OREQUAL         reduce using rule 206 (primary_expression -> constant .)
    XOREQUAL        reduce using rule 206 (primary_expression -> constant .)
    TIMES           reduce using rule 206 (primary_expression -> constant .)
    DIVIDE          reduce using rule 206 (primary_expression -> constant .)
    MOD             reduce using rule 206 (primary_expression -> constant .)
    PLUS            reduce using rule 206 (primary_expression -> constant .)
    MINUS           reduce using rule 206 (primary_expression -> constant .)
    LSHIFT          reduce using rule 206 (primary_expression -> constant .)
    RSHIFT          reduce using rule 206 (primary_expression -> constant .)
    LT              reduce using rule 206 (primary_expression -> constant .)
    GT              reduce using rule 206 (primary_expression -> constant .)
    LE              reduce using rule 206 (primary_expression -> constant .)
    GE              reduce using rule 206 (primary_expression -> constant .)
    EQ              reduce using rule 206 (primary_expression -> constant .)
    NE              reduce using rule 206 (primary_expression -> constant .)
    AND             reduce using rule 206 (primary_expression -> constant .)
    XOR             reduce using rule 206 (primary_expression -> constant .)
    OR              reduce using rule 206 (primary_expression -> constant .)
    LAND            reduce using rule 206 (primary_expression -> constant .)
    CONDOP          reduce using rule 206 (primary_expression -> constant .)
    LOR             reduce using rule 206 (primary_expression -> constant .)
    COMMA           reduce using rule 206 (primary_expression -> constant .)
    SEMI            reduce using rule 206 (primary_expression -> constant .)
    RBRACKET        reduce using rule 206 (primary_expression -> constant .)
    COLON           reduce using rule 206 (primary_expression -> constant .)
    RPAREN          reduce using rule 206 (primary_expression -> constant .)
    RBRACE          reduce using rule 206 (primary_expression -> constant .)


state 116

    (207) primary_expression -> SCONST .

    LBRACKET        reduce using rule 207 (primary_expression -> SCONST .)
    LPAREN          reduce using rule 207 (primary_expression -> SCONST .)
    PERIOD          reduce using rule 207 (primary_expression -> SCONST .)
    ARROW           reduce using rule 207 (primary_expression -> SCONST .)
    PLUSPLUS        reduce using rule 207 (primary_expression -> SCONST .)
    MINUSMINUS      reduce using rule 207 (primary_expression -> SCONST .)
    EQUALS          reduce using rule 207 (primary_expression -> SCONST .)
    TIMESEQUAL      reduce using rule 207 (primary_expression -> SCONST .)
    DIVEQUAL        reduce using rule 207 (primary_expression -> SCONST .)
    MODEQUAL        reduce using rule 207 (primary_expression -> SCONST .)
    PLUSEQUAL       reduce using rule 207 (primary_expression -> SCONST .)
    MINUSEQUAL      reduce using rule 207 (primary_expression -> SCONST .)
    LSHIFTEQUAL     reduce using rule 207 (primary_expression -> SCONST .)
    RSHIFTEQUAL     reduce using rule 207 (primary_expression -> SCONST .)
    ANDEQUAL        reduce using rule 207 (primary_expression -> SCONST .)
    OREQUAL         reduce using rule 207 (primary_expression -> SCONST .)
    XOREQUAL        reduce using rule 207 (primary_expression -> SCONST .)
    TIMES           reduce using rule 207 (primary_expression -> SCONST .)
    DIVIDE          reduce using rule 207 (primary_expression -> SCONST .)
    MOD             reduce using rule 207 (primary_expression -> SCONST .)
    PLUS            reduce using rule 207 (primary_expression -> SCONST .)
    MINUS           reduce using rule 207 (primary_expression -> SCONST .)
    LSHIFT          reduce using rule 207 (primary_expression -> SCONST .)
    RSHIFT          reduce using rule 207 (primary_expression -> SCONST .)
    LT              reduce using rule 207 (primary_expression -> SCONST .)
    GT              reduce using rule 207 (primary_expression -> SCONST .)
    LE              reduce using rule 207 (primary_expression -> SCONST .)
    GE              reduce using rule 207 (primary_expression -> SCONST .)
    EQ              reduce using rule 207 (primary_expression -> SCONST .)
    NE              reduce using rule 207 (primary_expression -> SCONST .)
    AND             reduce using rule 207 (primary_expression -> SCONST .)
    XOR             reduce using rule 207 (primary_expression -> SCONST .)
    OR              reduce using rule 207 (primary_expression -> SCONST .)
    LAND            reduce using rule 207 (primary_expression -> SCONST .)
    CONDOP          reduce using rule 207 (primary_expression -> SCONST .)
    LOR             reduce using rule 207 (primary_expression -> SCONST .)
    COMMA           reduce using rule 207 (primary_expression -> SCONST .)
    SEMI            reduce using rule 207 (primary_expression -> SCONST .)
    RBRACKET        reduce using rule 207 (primary_expression -> SCONST .)
    COLON           reduce using rule 207 (primary_expression -> SCONST .)
    RPAREN          reduce using rule 207 (primary_expression -> SCONST .)
    RBRACE          reduce using rule 207 (primary_expression -> SCONST .)


state 117

    (159) inclusive_or_expression -> exclusive_or_expression .
    (162) exclusive_or_expression -> exclusive_or_expression . XOR and_expression

    OR              reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    LAND            reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    CONDOP          reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    LOR             reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    COMMA           reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    SEMI            reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    RBRACKET        reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    COLON           reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    RPAREN          reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    RBRACE          reduce using rule 159 (inclusive_or_expression -> exclusive_or_expression .)
    XOR             shift and go to state 209


state 118

    (211) constant -> ICONST .

    LBRACKET        reduce using rule 211 (constant -> ICONST .)
    LPAREN          reduce using rule 211 (constant -> ICONST .)
    PERIOD          reduce using rule 211 (constant -> ICONST .)
    ARROW           reduce using rule 211 (constant -> ICONST .)
    PLUSPLUS        reduce using rule 211 (constant -> ICONST .)
    MINUSMINUS      reduce using rule 211 (constant -> ICONST .)
    EQUALS          reduce using rule 211 (constant -> ICONST .)
    TIMESEQUAL      reduce using rule 211 (constant -> ICONST .)
    DIVEQUAL        reduce using rule 211 (constant -> ICONST .)
    MODEQUAL        reduce using rule 211 (constant -> ICONST .)
    PLUSEQUAL       reduce using rule 211 (constant -> ICONST .)
    MINUSEQUAL      reduce using rule 211 (constant -> ICONST .)
    LSHIFTEQUAL     reduce using rule 211 (constant -> ICONST .)
    RSHIFTEQUAL     reduce using rule 211 (constant -> ICONST .)
    ANDEQUAL        reduce using rule 211 (constant -> ICONST .)
    OREQUAL         reduce using rule 211 (constant -> ICONST .)
    XOREQUAL        reduce using rule 211 (constant -> ICONST .)
    TIMES           reduce using rule 211 (constant -> ICONST .)
    DIVIDE          reduce using rule 211 (constant -> ICONST .)
    MOD             reduce using rule 211 (constant -> ICONST .)
    PLUS            reduce using rule 211 (constant -> ICONST .)
    MINUS           reduce using rule 211 (constant -> ICONST .)
    LSHIFT          reduce using rule 211 (constant -> ICONST .)
    RSHIFT          reduce using rule 211 (constant -> ICONST .)
    LT              reduce using rule 211 (constant -> ICONST .)
    GT              reduce using rule 211 (constant -> ICONST .)
    LE              reduce using rule 211 (constant -> ICONST .)
    GE              reduce using rule 211 (constant -> ICONST .)
    EQ              reduce using rule 211 (constant -> ICONST .)
    NE              reduce using rule 211 (constant -> ICONST .)
    AND             reduce using rule 211 (constant -> ICONST .)
    XOR             reduce using rule 211 (constant -> ICONST .)
    OR              reduce using rule 211 (constant -> ICONST .)
    LAND            reduce using rule 211 (constant -> ICONST .)
    CONDOP          reduce using rule 211 (constant -> ICONST .)
    LOR             reduce using rule 211 (constant -> ICONST .)
    COMMA           reduce using rule 211 (constant -> ICONST .)
    SEMI            reduce using rule 211 (constant -> ICONST .)
    RBRACKET        reduce using rule 211 (constant -> ICONST .)
    COLON           reduce using rule 211 (constant -> ICONST .)
    RPAREN          reduce using rule 211 (constant -> ICONST .)
    RBRACE          reduce using rule 211 (constant -> ICONST .)


state 119

    (212) constant -> FCONST .

    LBRACKET        reduce using rule 212 (constant -> FCONST .)
    LPAREN          reduce using rule 212 (constant -> FCONST .)
    PERIOD          reduce using rule 212 (constant -> FCONST .)
    ARROW           reduce using rule 212 (constant -> FCONST .)
    PLUSPLUS        reduce using rule 212 (constant -> FCONST .)
    MINUSMINUS      reduce using rule 212 (constant -> FCONST .)
    EQUALS          reduce using rule 212 (constant -> FCONST .)
    TIMESEQUAL      reduce using rule 212 (constant -> FCONST .)
    DIVEQUAL        reduce using rule 212 (constant -> FCONST .)
    MODEQUAL        reduce using rule 212 (constant -> FCONST .)
    PLUSEQUAL       reduce using rule 212 (constant -> FCONST .)
    MINUSEQUAL      reduce using rule 212 (constant -> FCONST .)
    LSHIFTEQUAL     reduce using rule 212 (constant -> FCONST .)
    RSHIFTEQUAL     reduce using rule 212 (constant -> FCONST .)
    ANDEQUAL        reduce using rule 212 (constant -> FCONST .)
    OREQUAL         reduce using rule 212 (constant -> FCONST .)
    XOREQUAL        reduce using rule 212 (constant -> FCONST .)
    TIMES           reduce using rule 212 (constant -> FCONST .)
    DIVIDE          reduce using rule 212 (constant -> FCONST .)
    MOD             reduce using rule 212 (constant -> FCONST .)
    PLUS            reduce using rule 212 (constant -> FCONST .)
    MINUS           reduce using rule 212 (constant -> FCONST .)
    LSHIFT          reduce using rule 212 (constant -> FCONST .)
    RSHIFT          reduce using rule 212 (constant -> FCONST .)
    LT              reduce using rule 212 (constant -> FCONST .)
    GT              reduce using rule 212 (constant -> FCONST .)
    LE              reduce using rule 212 (constant -> FCONST .)
    GE              reduce using rule 212 (constant -> FCONST .)
    EQ              reduce using rule 212 (constant -> FCONST .)
    NE              reduce using rule 212 (constant -> FCONST .)
    AND             reduce using rule 212 (constant -> FCONST .)
    XOR             reduce using rule 212 (constant -> FCONST .)
    OR              reduce using rule 212 (constant -> FCONST .)
    LAND            reduce using rule 212 (constant -> FCONST .)
    CONDOP          reduce using rule 212 (constant -> FCONST .)
    LOR             reduce using rule 212 (constant -> FCONST .)
    COMMA           reduce using rule 212 (constant -> FCONST .)
    SEMI            reduce using rule 212 (constant -> FCONST .)
    RBRACKET        reduce using rule 212 (constant -> FCONST .)
    COLON           reduce using rule 212 (constant -> FCONST .)
    RPAREN          reduce using rule 212 (constant -> FCONST .)
    RBRACE          reduce using rule 212 (constant -> FCONST .)


state 120

    (213) constant -> CCONST .

    LBRACKET        reduce using rule 213 (constant -> CCONST .)
    LPAREN          reduce using rule 213 (constant -> CCONST .)
    PERIOD          reduce using rule 213 (constant -> CCONST .)
    ARROW           reduce using rule 213 (constant -> CCONST .)
    PLUSPLUS        reduce using rule 213 (constant -> CCONST .)
    MINUSMINUS      reduce using rule 213 (constant -> CCONST .)
    EQUALS          reduce using rule 213 (constant -> CCONST .)
    TIMESEQUAL      reduce using rule 213 (constant -> CCONST .)
    DIVEQUAL        reduce using rule 213 (constant -> CCONST .)
    MODEQUAL        reduce using rule 213 (constant -> CCONST .)
    PLUSEQUAL       reduce using rule 213 (constant -> CCONST .)
    MINUSEQUAL      reduce using rule 213 (constant -> CCONST .)
    LSHIFTEQUAL     reduce using rule 213 (constant -> CCONST .)
    RSHIFTEQUAL     reduce using rule 213 (constant -> CCONST .)
    ANDEQUAL        reduce using rule 213 (constant -> CCONST .)
    OREQUAL         reduce using rule 213 (constant -> CCONST .)
    XOREQUAL        reduce using rule 213 (constant -> CCONST .)
    TIMES           reduce using rule 213 (constant -> CCONST .)
    DIVIDE          reduce using rule 213 (constant -> CCONST .)
    MOD             reduce using rule 213 (constant -> CCONST .)
    PLUS            reduce using rule 213 (constant -> CCONST .)
    MINUS           reduce using rule 213 (constant -> CCONST .)
    LSHIFT          reduce using rule 213 (constant -> CCONST .)
    RSHIFT          reduce using rule 213 (constant -> CCONST .)
    LT              reduce using rule 213 (constant -> CCONST .)
    GT              reduce using rule 213 (constant -> CCONST .)
    LE              reduce using rule 213 (constant -> CCONST .)
    GE              reduce using rule 213 (constant -> CCONST .)
    EQ              reduce using rule 213 (constant -> CCONST .)
    NE              reduce using rule 213 (constant -> CCONST .)
    AND             reduce using rule 213 (constant -> CCONST .)
    XOR             reduce using rule 213 (constant -> CCONST .)
    OR              reduce using rule 213 (constant -> CCONST .)
    LAND            reduce using rule 213 (constant -> CCONST .)
    CONDOP          reduce using rule 213 (constant -> CCONST .)
    LOR             reduce using rule 213 (constant -> CCONST .)
    COMMA           reduce using rule 213 (constant -> CCONST .)
    SEMI            reduce using rule 213 (constant -> CCONST .)
    RBRACKET        reduce using rule 213 (constant -> CCONST .)
    COLON           reduce using rule 213 (constant -> CCONST .)
    RPAREN          reduce using rule 213 (constant -> CCONST .)
    RBRACE          reduce using rule 213 (constant -> CCONST .)


state 121

    (161) exclusive_or_expression -> and_expression .
    (164) and_expression -> and_expression . AND equality_expression

    XOR             reduce using rule 161 (exclusive_or_expression -> and_expression .)
    OR              reduce using rule 161 (exclusive_or_expression -> and_expression .)
    LAND            reduce using rule 161 (exclusive_or_expression -> and_expression .)
    CONDOP          reduce using rule 161 (exclusive_or_expression -> and_expression .)
    LOR             reduce using rule 161 (exclusive_or_expression -> and_expression .)
    COMMA           reduce using rule 161 (exclusive_or_expression -> and_expression .)
    SEMI            reduce using rule 161 (exclusive_or_expression -> and_expression .)
    RBRACKET        reduce using rule 161 (exclusive_or_expression -> and_expression .)
    COLON           reduce using rule 161 (exclusive_or_expression -> and_expression .)
    RPAREN          reduce using rule 161 (exclusive_or_expression -> and_expression .)
    RBRACE          reduce using rule 161 (exclusive_or_expression -> and_expression .)
    AND             shift and go to state 210


state 122

    (163) and_expression -> equality_expression .
    (166) equality_expression -> equality_expression . EQ relational_expression
    (167) equality_expression -> equality_expression . NE relational_expression

    AND             reduce using rule 163 (and_expression -> equality_expression .)
    XOR             reduce using rule 163 (and_expression -> equality_expression .)
    OR              reduce using rule 163 (and_expression -> equality_expression .)
    LAND            reduce using rule 163 (and_expression -> equality_expression .)
    CONDOP          reduce using rule 163 (and_expression -> equality_expression .)
    LOR             reduce using rule 163 (and_expression -> equality_expression .)
    COMMA           reduce using rule 163 (and_expression -> equality_expression .)
    SEMI            reduce using rule 163 (and_expression -> equality_expression .)
    RBRACKET        reduce using rule 163 (and_expression -> equality_expression .)
    COLON           reduce using rule 163 (and_expression -> equality_expression .)
    RPAREN          reduce using rule 163 (and_expression -> equality_expression .)
    RBRACE          reduce using rule 163 (and_expression -> equality_expression .)
    EQ              shift and go to state 211
    NE              shift and go to state 212


state 123

    (165) equality_expression -> relational_expression .
    (169) relational_expression -> relational_expression . LT shift_expression
    (170) relational_expression -> relational_expression . GT shift_expression
    (171) relational_expression -> relational_expression . LE shift_expression
    (172) relational_expression -> relational_expression . GE shift_expression

    EQ              reduce using rule 165 (equality_expression -> relational_expression .)
    NE              reduce using rule 165 (equality_expression -> relational_expression .)
    AND             reduce using rule 165 (equality_expression -> relational_expression .)
    XOR             reduce using rule 165 (equality_expression -> relational_expression .)
    OR              reduce using rule 165 (equality_expression -> relational_expression .)
    LAND            reduce using rule 165 (equality_expression -> relational_expression .)
    CONDOP          reduce using rule 165 (equality_expression -> relational_expression .)
    LOR             reduce using rule 165 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 165 (equality_expression -> relational_expression .)
    SEMI            reduce using rule 165 (equality_expression -> relational_expression .)
    RBRACKET        reduce using rule 165 (equality_expression -> relational_expression .)
    COLON           reduce using rule 165 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 165 (equality_expression -> relational_expression .)
    RBRACE          reduce using rule 165 (equality_expression -> relational_expression .)
    LT              shift and go to state 213
    GT              shift and go to state 214
    LE              shift and go to state 215
    GE              shift and go to state 216


state 124

    (168) relational_expression -> shift_expression .
    (174) shift_expression -> shift_expression . LSHIFT additive_expression
    (175) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 168 (relational_expression -> shift_expression .)
    GT              reduce using rule 168 (relational_expression -> shift_expression .)
    LE              reduce using rule 168 (relational_expression -> shift_expression .)
    GE              reduce using rule 168 (relational_expression -> shift_expression .)
    EQ              reduce using rule 168 (relational_expression -> shift_expression .)
    NE              reduce using rule 168 (relational_expression -> shift_expression .)
    AND             reduce using rule 168 (relational_expression -> shift_expression .)
    XOR             reduce using rule 168 (relational_expression -> shift_expression .)
    OR              reduce using rule 168 (relational_expression -> shift_expression .)
    LAND            reduce using rule 168 (relational_expression -> shift_expression .)
    CONDOP          reduce using rule 168 (relational_expression -> shift_expression .)
    LOR             reduce using rule 168 (relational_expression -> shift_expression .)
    COMMA           reduce using rule 168 (relational_expression -> shift_expression .)
    SEMI            reduce using rule 168 (relational_expression -> shift_expression .)
    RBRACKET        reduce using rule 168 (relational_expression -> shift_expression .)
    COLON           reduce using rule 168 (relational_expression -> shift_expression .)
    RPAREN          reduce using rule 168 (relational_expression -> shift_expression .)
    RBRACE          reduce using rule 168 (relational_expression -> shift_expression .)
    LSHIFT          shift and go to state 217
    RSHIFT          shift and go to state 218


state 125

    (173) shift_expression -> additive_expression .
    (177) additive_expression -> additive_expression . PLUS multiplicative_expression
    (178) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 173 (shift_expression -> additive_expression .)
    RSHIFT          reduce using rule 173 (shift_expression -> additive_expression .)
    LT              reduce using rule 173 (shift_expression -> additive_expression .)
    GT              reduce using rule 173 (shift_expression -> additive_expression .)
    LE              reduce using rule 173 (shift_expression -> additive_expression .)
    GE              reduce using rule 173 (shift_expression -> additive_expression .)
    EQ              reduce using rule 173 (shift_expression -> additive_expression .)
    NE              reduce using rule 173 (shift_expression -> additive_expression .)
    AND             reduce using rule 173 (shift_expression -> additive_expression .)
    XOR             reduce using rule 173 (shift_expression -> additive_expression .)
    OR              reduce using rule 173 (shift_expression -> additive_expression .)
    LAND            reduce using rule 173 (shift_expression -> additive_expression .)
    CONDOP          reduce using rule 173 (shift_expression -> additive_expression .)
    LOR             reduce using rule 173 (shift_expression -> additive_expression .)
    COMMA           reduce using rule 173 (shift_expression -> additive_expression .)
    SEMI            reduce using rule 173 (shift_expression -> additive_expression .)
    RBRACKET        reduce using rule 173 (shift_expression -> additive_expression .)
    COLON           reduce using rule 173 (shift_expression -> additive_expression .)
    RPAREN          reduce using rule 173 (shift_expression -> additive_expression .)
    RBRACE          reduce using rule 173 (shift_expression -> additive_expression .)
    PLUS            shift and go to state 219
    MINUS           shift and go to state 220


state 126

    (176) additive_expression -> multiplicative_expression .
    (180) multiplicative_expression -> multiplicative_expression . TIMES cast_expression
    (181) multiplicative_expression -> multiplicative_expression . DIVIDE cast_expression
    (182) multiplicative_expression -> multiplicative_expression . MOD cast_expression

    PLUS            reduce using rule 176 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 176 (additive_expression -> multiplicative_expression .)
    LSHIFT          reduce using rule 176 (additive_expression -> multiplicative_expression .)
    RSHIFT          reduce using rule 176 (additive_expression -> multiplicative_expression .)
    LT              reduce using rule 176 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 176 (additive_expression -> multiplicative_expression .)
    LE              reduce using rule 176 (additive_expression -> multiplicative_expression .)
    GE              reduce using rule 176 (additive_expression -> multiplicative_expression .)
    EQ              reduce using rule 176 (additive_expression -> multiplicative_expression .)
    NE              reduce using rule 176 (additive_expression -> multiplicative_expression .)
    AND             reduce using rule 176 (additive_expression -> multiplicative_expression .)
    XOR             reduce using rule 176 (additive_expression -> multiplicative_expression .)
    OR              reduce using rule 176 (additive_expression -> multiplicative_expression .)
    LAND            reduce using rule 176 (additive_expression -> multiplicative_expression .)
    CONDOP          reduce using rule 176 (additive_expression -> multiplicative_expression .)
    LOR             reduce using rule 176 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 176 (additive_expression -> multiplicative_expression .)
    SEMI            reduce using rule 176 (additive_expression -> multiplicative_expression .)
    RBRACKET        reduce using rule 176 (additive_expression -> multiplicative_expression .)
    COLON           reduce using rule 176 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 176 (additive_expression -> multiplicative_expression .)
    RBRACE          reduce using rule 176 (additive_expression -> multiplicative_expression .)
    TIMES           shift and go to state 221
    DIVIDE          shift and go to state 222
    MOD             shift and go to state 223


state 127

    (48) init_declarator -> declarator .
    (49) init_declarator -> declarator . EQUALS initializer

    SEMI            reduce using rule 48 (init_declarator -> declarator .)
    COMMA           reduce using rule 48 (init_declarator -> declarator .)
    EQUALS          shift and go to state 65


state 128

    (71) direct_declarator -> direct_declarator LBRACKET constant_expression_opt . RBRACKET

    RBRACKET        shift and go to state 224


state 129

    (105) constant_expression_opt -> empty .

    RBRACKET        reduce using rule 105 (constant_expression_opt -> empty .)


state 130

    (106) constant_expression_opt -> constant_expression .

    RBRACKET        reduce using rule 106 (constant_expression_opt -> constant_expression .)


state 131

    (154) constant_expression -> conditional_expression .

    RBRACKET        reduce using rule 154 (constant_expression -> conditional_expression .)
    COLON           reduce using rule 154 (constant_expression -> conditional_expression .)
    SEMI            reduce using rule 154 (constant_expression -> conditional_expression .)
    COMMA           reduce using rule 154 (constant_expression -> conditional_expression .)
    RBRACE          reduce using rule 154 (constant_expression -> conditional_expression .)


state 132

    (183) cast_expression -> unary_expression .

    TIMES           reduce using rule 183 (cast_expression -> unary_expression .)
    DIVIDE          reduce using rule 183 (cast_expression -> unary_expression .)
    MOD             reduce using rule 183 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 183 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 183 (cast_expression -> unary_expression .)
    LSHIFT          reduce using rule 183 (cast_expression -> unary_expression .)
    RSHIFT          reduce using rule 183 (cast_expression -> unary_expression .)
    LT              reduce using rule 183 (cast_expression -> unary_expression .)
    GT              reduce using rule 183 (cast_expression -> unary_expression .)
    LE              reduce using rule 183 (cast_expression -> unary_expression .)
    GE              reduce using rule 183 (cast_expression -> unary_expression .)
    EQ              reduce using rule 183 (cast_expression -> unary_expression .)
    NE              reduce using rule 183 (cast_expression -> unary_expression .)
    AND             reduce using rule 183 (cast_expression -> unary_expression .)
    XOR             reduce using rule 183 (cast_expression -> unary_expression .)
    OR              reduce using rule 183 (cast_expression -> unary_expression .)
    LAND            reduce using rule 183 (cast_expression -> unary_expression .)
    CONDOP          reduce using rule 183 (cast_expression -> unary_expression .)
    LOR             reduce using rule 183 (cast_expression -> unary_expression .)
    RBRACKET        reduce using rule 183 (cast_expression -> unary_expression .)
    COLON           reduce using rule 183 (cast_expression -> unary_expression .)
    EQUALS          reduce using rule 183 (cast_expression -> unary_expression .)
    TIMESEQUAL      reduce using rule 183 (cast_expression -> unary_expression .)
    DIVEQUAL        reduce using rule 183 (cast_expression -> unary_expression .)
    MODEQUAL        reduce using rule 183 (cast_expression -> unary_expression .)
    PLUSEQUAL       reduce using rule 183 (cast_expression -> unary_expression .)
    MINUSEQUAL      reduce using rule 183 (cast_expression -> unary_expression .)
    LSHIFTEQUAL     reduce using rule 183 (cast_expression -> unary_expression .)
    RSHIFTEQUAL     reduce using rule 183 (cast_expression -> unary_expression .)
    ANDEQUAL        reduce using rule 183 (cast_expression -> unary_expression .)
    OREQUAL         reduce using rule 183 (cast_expression -> unary_expression .)
    XOREQUAL        reduce using rule 183 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 183 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 183 (cast_expression -> unary_expression .)
    RPAREN          reduce using rule 183 (cast_expression -> unary_expression .)
    RBRACE          reduce using rule 183 (cast_expression -> unary_expression .)


state 133

    (184) cast_expression -> LPAREN . type_name RPAREN cast_expression
    (208) primary_expression -> LPAREN . expression RPAREN
    (94) type_name -> . specifier_qualifier_list abstract_declarator_opt
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    ENUM            shift and go to state 36
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    type_name                      shift and go to state 170
    cast_expression                shift and go to state 104
    expression                     shift and go to state 169
    specifier_qualifier_list       shift and go to state 171
    assignment_expression          shift and go to state 96
    type_specifier                 shift and go to state 149
    type_qualifier                 shift and go to state 150
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    struct_or_union                shift and go to state 35
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 134

    (205) primary_expression -> ID .

    LBRACKET        reduce using rule 205 (primary_expression -> ID .)
    LPAREN          reduce using rule 205 (primary_expression -> ID .)
    PERIOD          reduce using rule 205 (primary_expression -> ID .)
    ARROW           reduce using rule 205 (primary_expression -> ID .)
    PLUSPLUS        reduce using rule 205 (primary_expression -> ID .)
    MINUSMINUS      reduce using rule 205 (primary_expression -> ID .)
    TIMES           reduce using rule 205 (primary_expression -> ID .)
    DIVIDE          reduce using rule 205 (primary_expression -> ID .)
    MOD             reduce using rule 205 (primary_expression -> ID .)
    PLUS            reduce using rule 205 (primary_expression -> ID .)
    MINUS           reduce using rule 205 (primary_expression -> ID .)
    LSHIFT          reduce using rule 205 (primary_expression -> ID .)
    RSHIFT          reduce using rule 205 (primary_expression -> ID .)
    LT              reduce using rule 205 (primary_expression -> ID .)
    GT              reduce using rule 205 (primary_expression -> ID .)
    LE              reduce using rule 205 (primary_expression -> ID .)
    GE              reduce using rule 205 (primary_expression -> ID .)
    EQ              reduce using rule 205 (primary_expression -> ID .)
    NE              reduce using rule 205 (primary_expression -> ID .)
    AND             reduce using rule 205 (primary_expression -> ID .)
    XOR             reduce using rule 205 (primary_expression -> ID .)
    OR              reduce using rule 205 (primary_expression -> ID .)
    LAND            reduce using rule 205 (primary_expression -> ID .)
    CONDOP          reduce using rule 205 (primary_expression -> ID .)
    LOR             reduce using rule 205 (primary_expression -> ID .)
    RBRACKET        reduce using rule 205 (primary_expression -> ID .)
    EQUALS          reduce using rule 205 (primary_expression -> ID .)
    TIMESEQUAL      reduce using rule 205 (primary_expression -> ID .)
    DIVEQUAL        reduce using rule 205 (primary_expression -> ID .)
    MODEQUAL        reduce using rule 205 (primary_expression -> ID .)
    PLUSEQUAL       reduce using rule 205 (primary_expression -> ID .)
    MINUSEQUAL      reduce using rule 205 (primary_expression -> ID .)
    LSHIFTEQUAL     reduce using rule 205 (primary_expression -> ID .)
    RSHIFTEQUAL     reduce using rule 205 (primary_expression -> ID .)
    ANDEQUAL        reduce using rule 205 (primary_expression -> ID .)
    OREQUAL         reduce using rule 205 (primary_expression -> ID .)
    XOREQUAL        reduce using rule 205 (primary_expression -> ID .)
    SEMI            reduce using rule 205 (primary_expression -> ID .)
    COMMA           reduce using rule 205 (primary_expression -> ID .)
    COLON           reduce using rule 205 (primary_expression -> ID .)
    RPAREN          reduce using rule 205 (primary_expression -> ID .)
    RBRACE          reduce using rule 205 (primary_expression -> ID .)


state 135

    (72) direct_declarator -> direct_declarator LPAREN parameter_type_list . RPAREN

    RPAREN          shift and go to state 225


state 136

    (74) direct_declarator -> direct_declarator LPAREN RPAREN .

    LBRACKET        reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    LPAREN          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    LBRACE          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    AUTO            reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    REGISTER        reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    STATIC          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    EXTERN          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    TYPEDEF         reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    VOID            reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    BOOL            reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    CHAR            reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    SHORT           reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    INT             reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    LONG            reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    FLOAT           reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    DOUBLE          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    SIGNED          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    UNSIGNED        reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    TYPEID          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    CONST           reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    VOLATILE        reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    ENUM            reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    STRUCT          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    UNION           reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    EQUALS          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    SEMI            reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    COMMA           reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    RPAREN          reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)
    COLON           reduce using rule 74 (direct_declarator -> direct_declarator LPAREN RPAREN .)


state 137

    (73) direct_declarator -> direct_declarator LPAREN identifier_list . RPAREN
    (88) identifier_list -> identifier_list . COMMA ID

    RPAREN          shift and go to state 226
    COMMA           shift and go to state 227


state 138

    (81) parameter_type_list -> parameter_list .
    (82) parameter_type_list -> parameter_list . COMMA ELLIPSIS
    (84) parameter_list -> parameter_list . COMMA parameter_declaration

    RPAREN          reduce using rule 81 (parameter_type_list -> parameter_list .)
    COMMA           shift and go to state 228


state 139

    (87) identifier_list -> ID .

    RPAREN          reduce using rule 87 (identifier_list -> ID .)
    COMMA           reduce using rule 87 (identifier_list -> ID .)


state 140

    (83) parameter_list -> parameter_declaration .

    COMMA           reduce using rule 83 (parameter_list -> parameter_declaration .)
    RPAREN          reduce using rule 83 (parameter_list -> parameter_declaration .)


state 141

    (85) parameter_declaration -> declaration_specifiers . declarator
    (86) parameter_declaration -> declaration_specifiers . abstract_declarator_opt
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (95) abstract_declarator_opt -> . empty
    (96) abstract_declarator_opt -> . abstract_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN
    (214) empty -> .
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . pointer direct_abstract_declarator
    (99) abstract_declarator -> . direct_abstract_declarator
    (100) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (101) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET
    (102) direct_abstract_declarator -> . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (104) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 234
    COMMA           reduce using rule 214 (empty -> .)
    RPAREN          reduce using rule 214 (empty -> .)
    LBRACKET        shift and go to state 235

    declarator                     shift and go to state 229
    abstract_declarator_opt        shift and go to state 230
    pointer                        shift and go to state 231
    direct_declarator              shift and go to state 11
    empty                          shift and go to state 232
    abstract_declarator            shift and go to state 233
    direct_abstract_declarator     shift and go to state 236

state 142

    (77) pointer -> TIMES type_qualifier_list pointer .

    ID              reduce using rule 77 (pointer -> TIMES type_qualifier_list pointer .)
    LPAREN          reduce using rule 77 (pointer -> TIMES type_qualifier_list pointer .)
    LBRACKET        reduce using rule 77 (pointer -> TIMES type_qualifier_list pointer .)
    COMMA           reduce using rule 77 (pointer -> TIMES type_qualifier_list pointer .)
    RPAREN          reduce using rule 77 (pointer -> TIMES type_qualifier_list pointer .)


state 143

    (80) type_qualifier_list -> type_qualifier_list type_qualifier .

    TIMES           reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    CONST           reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    VOLATILE        reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    ID              reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    LPAREN          reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    LBRACKET        reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    COMMA           reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    RPAREN          reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)


state 144

    (70) direct_declarator -> LPAREN declarator RPAREN .

    LBRACKET        reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    LPAREN          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    LBRACE          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    AUTO            reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    REGISTER        reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    STATIC          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    EXTERN          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    TYPEDEF         reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    VOID            reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    BOOL            reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    CHAR            reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    SHORT           reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    INT             reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    LONG            reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    FLOAT           reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    DOUBLE          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    SIGNED          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    UNSIGNED        reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    TYPEID          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    CONST           reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    VOLATILE        reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    ENUM            reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    STRUCT          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    UNION           reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    EQUALS          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    SEMI            reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    COMMA           reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    RPAREN          reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)
    COLON           reduce using rule 70 (direct_declarator -> LPAREN declarator RPAREN .)


state 145

    (39) struct_or_union_specifier -> struct_or_union ID LBRACE . struct_declaration_list RBRACE
    (44) struct_declaration_list -> . struct_declaration
    (45) struct_declaration_list -> . struct_declaration_list struct_declaration
    (50) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    struct_or_union                shift and go to state 35
    struct_declaration_list        shift and go to state 237
    struct_declaration             shift and go to state 147
    specifier_qualifier_list       shift and go to state 148
    type_specifier                 shift and go to state 149
    type_qualifier                 shift and go to state 150
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 146

    (40) struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list . RBRACE
    (45) struct_declaration_list -> struct_declaration_list . struct_declaration
    (50) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    RBRACE          shift and go to state 238
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    struct_or_union                shift and go to state 35
    struct_declaration             shift and go to state 239
    specifier_qualifier_list       shift and go to state 148
    type_specifier                 shift and go to state 149
    type_qualifier                 shift and go to state 150
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 147

    (44) struct_declaration_list -> struct_declaration .

    RBRACE          reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    VOID            reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    BOOL            reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    CHAR            reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    SHORT           reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    INT             reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    LONG            reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    FLOAT           reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    DOUBLE          reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    SIGNED          reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    UNSIGNED        reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    TYPEID          reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    CONST           reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    VOLATILE        reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    ENUM            reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    STRUCT          reduce using rule 44 (struct_declaration_list -> struct_declaration .)
    UNION           reduce using rule 44 (struct_declaration_list -> struct_declaration .)


state 148

    (50) struct_declaration -> specifier_qualifier_list . struct_declarator_list SEMI
    (55) struct_declarator_list -> . struct_declarator
    (56) struct_declarator_list -> . struct_declarator_list COMMA struct_declarator
    (57) struct_declarator -> . declarator
    (58) struct_declarator -> . declarator COLON constant_expression
    (59) struct_declarator -> . COLON constant_expression
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN

    COLON           shift and go to state 243
    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34

    struct_declarator_list         shift and go to state 240
    struct_declarator              shift and go to state 241
    declarator                     shift and go to state 242
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11

state 149

    (51) specifier_qualifier_list -> type_specifier . specifier_qualifier_list
    (52) specifier_qualifier_list -> type_specifier .
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    COLON           reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    TIMES           reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    ID              reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    LPAREN          reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    LBRACKET        reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    RPAREN          reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    type_specifier                 shift and go to state 149
    specifier_qualifier_list       shift and go to state 244
    type_qualifier                 shift and go to state 150
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 150

    (53) specifier_qualifier_list -> type_qualifier . specifier_qualifier_list
    (54) specifier_qualifier_list -> type_qualifier .
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    COLON           reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    TIMES           reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    ID              reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    LPAREN          reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    LBRACKET        reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    RPAREN          reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    type_qualifier                 shift and go to state 150
    specifier_qualifier_list       shift and go to state 245
    type_specifier                 shift and go to state 149
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 151

    (60) enum_specifier -> ENUM ID LBRACE . enumerator_list RBRACE
    (63) enumerator_list -> . enumerator
    (64) enumerator_list -> . enumerator_list COMMA enumerator
    (65) enumerator -> . ID
    (66) enumerator -> . ID EQUALS constant_expression

    ID              shift and go to state 154

    enumerator_list                shift and go to state 246
    enumerator                     shift and go to state 153

state 152

    (61) enum_specifier -> ENUM LBRACE enumerator_list . RBRACE
    (64) enumerator_list -> enumerator_list . COMMA enumerator

    RBRACE          shift and go to state 247
    COMMA           shift and go to state 248


state 153

    (63) enumerator_list -> enumerator .

    RBRACE          reduce using rule 63 (enumerator_list -> enumerator .)
    COMMA           reduce using rule 63 (enumerator_list -> enumerator .)


state 154

    (65) enumerator -> ID .
    (66) enumerator -> ID . EQUALS constant_expression

    RBRACE          reduce using rule 65 (enumerator -> ID .)
    COMMA           reduce using rule 65 (enumerator -> ID .)
    EQUALS          shift and go to state 249


state 155

    (5) function_definition -> declaration_specifiers declarator declaration_list compound_statement .

    AUTO            reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STATIC          reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    TYPEDEF         reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOID            reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    BOOL            reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CHAR            reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SHORT           reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    INT             reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    LONG            reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    TYPEID          reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CONST           reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    TIMES           reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    ID              reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    LPAREN          reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    ENUM            reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNION           reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    $end            reduce using rule 5 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)


state 156

    (49) init_declarator -> declarator EQUALS initializer .

    SEMI            reduce using rule 49 (init_declarator -> declarator EQUALS initializer .)
    COMMA           reduce using rule 49 (init_declarator -> declarator EQUALS initializer .)


state 157

    (89) initializer -> assignment_expression .

    SEMI            reduce using rule 89 (initializer -> assignment_expression .)
    COMMA           reduce using rule 89 (initializer -> assignment_expression .)
    RBRACE          reduce using rule 89 (initializer -> assignment_expression .)


state 158

    (90) initializer -> LBRACE . initializer_list RBRACE
    (91) initializer -> LBRACE . initializer_list COMMA RBRACE
    (92) initializer_list -> . initializer
    (93) initializer_list -> . initializer_list COMMA initializer
    (89) initializer -> . assignment_expression
    (90) initializer -> . LBRACE initializer_list RBRACE
    (91) initializer -> . LBRACE initializer_list COMMA RBRACE
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    LBRACE          shift and go to state 158
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    initializer_list               shift and go to state 250
    initializer                    shift and go to state 251
    assignment_expression          shift and go to state 157
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 159

    (47) init_declarator_list -> init_declarator_list COMMA init_declarator .

    SEMI            reduce using rule 47 (init_declarator_list -> init_declarator_list COMMA init_declarator .)
    COMMA           reduce using rule 47 (init_declarator_list -> init_declarator_list COMMA init_declarator .)


state 160

    (119) compound_statement -> LBRACE declaration_list statement_list . RBRACE
    (124) statement_list -> statement_list . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    RBRACE          shift and go to state 252
    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    statement                      shift and go to state 163
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    expression                     shift and go to state 86
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 161

    (121) compound_statement -> LBRACE declaration_list RBRACE .

    AUTO            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    REGISTER        reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    STATIC          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    EXTERN          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    TYPEDEF         reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    CHAR            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    SHORT           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    INT             reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    LONG            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    FLOAT           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    DOUBLE          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    SIGNED          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    UNSIGNED        reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    TYPEID          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    CONST           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    VOLATILE        reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    TIMES           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    ID              reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    ENUM            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    STRUCT          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    UNION           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    $end            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    CASE            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    DEFAULT         reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    LBRACE          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    IF              reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    SWITCH          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    FOR             reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    DO              reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    GOTO            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    CONTINUE        reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    BREAK           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    PLUSPLUS        reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    MINUSMINUS      reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    SIZEOF          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    AND             reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    PLUS            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    LNOT            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    SCONST          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    ICONST          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    FCONST          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    CCONST          reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    SEMI            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)
    ELSE            reduce using rule 121 (compound_statement -> LBRACE declaration_list RBRACE .)


state 162

    (120) compound_statement -> LBRACE statement_list RBRACE .

    AUTO            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    REGISTER        reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    STATIC          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    EXTERN          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    TYPEDEF         reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    SHORT           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    LONG            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    SIGNED          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    UNSIGNED        reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    TYPEID          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    CONST           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    VOLATILE        reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    TIMES           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    ENUM            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    STRUCT          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    UNION           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    CASE            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    DEFAULT         reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    SWITCH          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    GOTO            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    SIZEOF          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    AND             reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    PLUS            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    NOT             reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    LNOT            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    SCONST          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    ICONST          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    FCONST          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    CCONST          reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    SEMI            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 120 (compound_statement -> LBRACE statement_list RBRACE .)


state 163

    (124) statement_list -> statement_list statement .

    RBRACE          reduce using rule 124 (statement_list -> statement_list statement .)
    ID              reduce using rule 124 (statement_list -> statement_list statement .)
    CASE            reduce using rule 124 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 124 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 124 (statement_list -> statement_list statement .)
    IF              reduce using rule 124 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 124 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 124 (statement_list -> statement_list statement .)
    FOR             reduce using rule 124 (statement_list -> statement_list statement .)
    DO              reduce using rule 124 (statement_list -> statement_list statement .)
    GOTO            reduce using rule 124 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 124 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 124 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 124 (statement_list -> statement_list statement .)
    PLUSPLUS        reduce using rule 124 (statement_list -> statement_list statement .)
    MINUSMINUS      reduce using rule 124 (statement_list -> statement_list statement .)
    SIZEOF          reduce using rule 124 (statement_list -> statement_list statement .)
    AND             reduce using rule 124 (statement_list -> statement_list statement .)
    TIMES           reduce using rule 124 (statement_list -> statement_list statement .)
    PLUS            reduce using rule 124 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 124 (statement_list -> statement_list statement .)
    NOT             reduce using rule 124 (statement_list -> statement_list statement .)
    LNOT            reduce using rule 124 (statement_list -> statement_list statement .)
    SCONST          reduce using rule 124 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 124 (statement_list -> statement_list statement .)
    ICONST          reduce using rule 124 (statement_list -> statement_list statement .)
    FCONST          reduce using rule 124 (statement_list -> statement_list statement .)
    CCONST          reduce using rule 124 (statement_list -> statement_list statement .)
    SEMI            reduce using rule 124 (statement_list -> statement_list statement .)


state 164

    (115) labeled_statement -> ID COLON . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    statement                      shift and go to state 253
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    expression                     shift and go to state 86
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 165

    (116) labeled_statement -> CASE constant_expression . COLON statement

    COLON           shift and go to state 254


state 166

    (117) labeled_statement -> DEFAULT COLON . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    statement                      shift and go to state 255
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    expression                     shift and go to state 86
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 167

    (118) expression_statement -> expression_opt SEMI .

    RBRACE          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    ID              reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    CASE            reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    DEFAULT         reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    LBRACE          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    IF              reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    SWITCH          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    WHILE           reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    FOR             reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    DO              reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    GOTO            reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    CONTINUE        reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    BREAK           reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    RETURN          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    PLUSPLUS        reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    MINUSMINUS      reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    SIZEOF          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    AND             reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    TIMES           reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    PLUS            reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    MINUS           reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    NOT             reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    LNOT            reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    SCONST          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    LPAREN          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    ICONST          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    FCONST          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    CCONST          reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    SEMI            reduce using rule 118 (expression_statement -> expression_opt SEMI .)
    ELSE            reduce using rule 118 (expression_statement -> expression_opt SEMI .)


state 168

    (125) selection_statement -> IF LPAREN . expression RPAREN statement
    (126) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 256
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 169

    (208) primary_expression -> LPAREN expression . RPAREN
    (138) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 257
    COMMA           shift and go to state 172


state 170

    (184) cast_expression -> LPAREN type_name . RPAREN cast_expression

    RPAREN          shift and go to state 258


state 171

    (94) type_name -> specifier_qualifier_list . abstract_declarator_opt
    (95) abstract_declarator_opt -> . empty
    (96) abstract_declarator_opt -> . abstract_declarator
    (214) empty -> .
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . pointer direct_abstract_declarator
    (99) abstract_declarator -> . direct_abstract_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (100) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (101) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET
    (102) direct_abstract_declarator -> . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (104) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    RPAREN          reduce using rule 214 (empty -> .)
    TIMES           shift and go to state 32
    LPAREN          shift and go to state 261
    LBRACKET        shift and go to state 235

    abstract_declarator_opt        shift and go to state 259
    empty                          shift and go to state 232
    abstract_declarator            shift and go to state 233
    pointer                        shift and go to state 260
    direct_abstract_declarator     shift and go to state 236

state 172

    (138) expression -> expression COMMA . assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    assignment_expression          shift and go to state 262
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 173

    (127) selection_statement -> SWITCH LPAREN . expression RPAREN statement
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 263
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 174

    (128) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 264
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 175

    (129) iteration_statement -> FOR LPAREN . expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression_opt                 shift and go to state 265
    empty                          shift and go to state 95
    expression                     shift and go to state 86
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 176

    (130) iteration_statement -> DO statement . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 266


state 177

    (131) jump_statement -> GOTO ID . SEMI

    SEMI            shift and go to state 267


state 178

    (132) jump_statement -> CONTINUE SEMI .

    RBRACE          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    ID              reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    CASE            reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    LBRACE          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    IF              reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    FOR             reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    DO              reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    GOTO            reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    PLUSPLUS        reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    MINUSMINUS      reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    SIZEOF          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    AND             reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    TIMES           reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    PLUS            reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    MINUS           reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    NOT             reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    LNOT            reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    SCONST          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    ICONST          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    FCONST          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    CCONST          reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    SEMI            reduce using rule 132 (jump_statement -> CONTINUE SEMI .)
    ELSE            reduce using rule 132 (jump_statement -> CONTINUE SEMI .)


state 179

    (133) jump_statement -> BREAK SEMI .

    RBRACE          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    ID              reduce using rule 133 (jump_statement -> BREAK SEMI .)
    CASE            reduce using rule 133 (jump_statement -> BREAK SEMI .)
    DEFAULT         reduce using rule 133 (jump_statement -> BREAK SEMI .)
    LBRACE          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    IF              reduce using rule 133 (jump_statement -> BREAK SEMI .)
    SWITCH          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    WHILE           reduce using rule 133 (jump_statement -> BREAK SEMI .)
    FOR             reduce using rule 133 (jump_statement -> BREAK SEMI .)
    DO              reduce using rule 133 (jump_statement -> BREAK SEMI .)
    GOTO            reduce using rule 133 (jump_statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 133 (jump_statement -> BREAK SEMI .)
    BREAK           reduce using rule 133 (jump_statement -> BREAK SEMI .)
    RETURN          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    PLUSPLUS        reduce using rule 133 (jump_statement -> BREAK SEMI .)
    MINUSMINUS      reduce using rule 133 (jump_statement -> BREAK SEMI .)
    SIZEOF          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    AND             reduce using rule 133 (jump_statement -> BREAK SEMI .)
    TIMES           reduce using rule 133 (jump_statement -> BREAK SEMI .)
    PLUS            reduce using rule 133 (jump_statement -> BREAK SEMI .)
    MINUS           reduce using rule 133 (jump_statement -> BREAK SEMI .)
    NOT             reduce using rule 133 (jump_statement -> BREAK SEMI .)
    LNOT            reduce using rule 133 (jump_statement -> BREAK SEMI .)
    SCONST          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    LPAREN          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    ICONST          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    FCONST          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    CCONST          reduce using rule 133 (jump_statement -> BREAK SEMI .)
    SEMI            reduce using rule 133 (jump_statement -> BREAK SEMI .)
    ELSE            reduce using rule 133 (jump_statement -> BREAK SEMI .)


state 180

    (134) jump_statement -> RETURN expression_opt . SEMI

    SEMI            shift and go to state 268


state 181

    (140) assignment_expression -> unary_expression assignment_operator . assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    unary_expression               shift and go to state 98
    assignment_expression          shift and go to state 269
    conditional_expression         shift and go to state 97
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 182

    (141) assignment_operator -> EQUALS .

    PLUSPLUS        reduce using rule 141 (assignment_operator -> EQUALS .)
    MINUSMINUS      reduce using rule 141 (assignment_operator -> EQUALS .)
    SIZEOF          reduce using rule 141 (assignment_operator -> EQUALS .)
    AND             reduce using rule 141 (assignment_operator -> EQUALS .)
    TIMES           reduce using rule 141 (assignment_operator -> EQUALS .)
    PLUS            reduce using rule 141 (assignment_operator -> EQUALS .)
    MINUS           reduce using rule 141 (assignment_operator -> EQUALS .)
    NOT             reduce using rule 141 (assignment_operator -> EQUALS .)
    LNOT            reduce using rule 141 (assignment_operator -> EQUALS .)
    ID              reduce using rule 141 (assignment_operator -> EQUALS .)
    SCONST          reduce using rule 141 (assignment_operator -> EQUALS .)
    LPAREN          reduce using rule 141 (assignment_operator -> EQUALS .)
    ICONST          reduce using rule 141 (assignment_operator -> EQUALS .)
    FCONST          reduce using rule 141 (assignment_operator -> EQUALS .)
    CCONST          reduce using rule 141 (assignment_operator -> EQUALS .)


state 183

    (142) assignment_operator -> TIMESEQUAL .

    PLUSPLUS        reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    MINUSMINUS      reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    SIZEOF          reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    AND             reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    TIMES           reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    PLUS            reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    MINUS           reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    NOT             reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    LNOT            reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    ID              reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    SCONST          reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    LPAREN          reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    ICONST          reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    FCONST          reduce using rule 142 (assignment_operator -> TIMESEQUAL .)
    CCONST          reduce using rule 142 (assignment_operator -> TIMESEQUAL .)


state 184

    (143) assignment_operator -> DIVEQUAL .

    PLUSPLUS        reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    MINUSMINUS      reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    SIZEOF          reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    AND             reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    TIMES           reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    PLUS            reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    MINUS           reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    NOT             reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    LNOT            reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    ID              reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    SCONST          reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    LPAREN          reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    ICONST          reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    FCONST          reduce using rule 143 (assignment_operator -> DIVEQUAL .)
    CCONST          reduce using rule 143 (assignment_operator -> DIVEQUAL .)


state 185

    (144) assignment_operator -> MODEQUAL .

    PLUSPLUS        reduce using rule 144 (assignment_operator -> MODEQUAL .)
    MINUSMINUS      reduce using rule 144 (assignment_operator -> MODEQUAL .)
    SIZEOF          reduce using rule 144 (assignment_operator -> MODEQUAL .)
    AND             reduce using rule 144 (assignment_operator -> MODEQUAL .)
    TIMES           reduce using rule 144 (assignment_operator -> MODEQUAL .)
    PLUS            reduce using rule 144 (assignment_operator -> MODEQUAL .)
    MINUS           reduce using rule 144 (assignment_operator -> MODEQUAL .)
    NOT             reduce using rule 144 (assignment_operator -> MODEQUAL .)
    LNOT            reduce using rule 144 (assignment_operator -> MODEQUAL .)
    ID              reduce using rule 144 (assignment_operator -> MODEQUAL .)
    SCONST          reduce using rule 144 (assignment_operator -> MODEQUAL .)
    LPAREN          reduce using rule 144 (assignment_operator -> MODEQUAL .)
    ICONST          reduce using rule 144 (assignment_operator -> MODEQUAL .)
    FCONST          reduce using rule 144 (assignment_operator -> MODEQUAL .)
    CCONST          reduce using rule 144 (assignment_operator -> MODEQUAL .)


state 186

    (145) assignment_operator -> PLUSEQUAL .

    PLUSPLUS        reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    MINUSMINUS      reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    SIZEOF          reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    AND             reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    TIMES           reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    PLUS            reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    MINUS           reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    NOT             reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    LNOT            reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    ID              reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    SCONST          reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    LPAREN          reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    ICONST          reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    FCONST          reduce using rule 145 (assignment_operator -> PLUSEQUAL .)
    CCONST          reduce using rule 145 (assignment_operator -> PLUSEQUAL .)


state 187

    (146) assignment_operator -> MINUSEQUAL .

    PLUSPLUS        reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    MINUSMINUS      reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    SIZEOF          reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    AND             reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    TIMES           reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    PLUS            reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    MINUS           reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    NOT             reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    LNOT            reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    ID              reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    SCONST          reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    LPAREN          reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    ICONST          reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    FCONST          reduce using rule 146 (assignment_operator -> MINUSEQUAL .)
    CCONST          reduce using rule 146 (assignment_operator -> MINUSEQUAL .)


state 188

    (147) assignment_operator -> LSHIFTEQUAL .

    PLUSPLUS        reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    MINUSMINUS      reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    SIZEOF          reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    AND             reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    TIMES           reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    PLUS            reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    MINUS           reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    NOT             reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    LNOT            reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    ID              reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    SCONST          reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    LPAREN          reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    ICONST          reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    FCONST          reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)
    CCONST          reduce using rule 147 (assignment_operator -> LSHIFTEQUAL .)


state 189

    (148) assignment_operator -> RSHIFTEQUAL .

    PLUSPLUS        reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    MINUSMINUS      reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    SIZEOF          reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    AND             reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    TIMES           reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    PLUS            reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    MINUS           reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    NOT             reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    LNOT            reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    ID              reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    SCONST          reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    LPAREN          reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    ICONST          reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    FCONST          reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)
    CCONST          reduce using rule 148 (assignment_operator -> RSHIFTEQUAL .)


state 190

    (149) assignment_operator -> ANDEQUAL .

    PLUSPLUS        reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    MINUSMINUS      reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    SIZEOF          reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    AND             reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    TIMES           reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    PLUS            reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    MINUS           reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    NOT             reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    LNOT            reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    ID              reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    SCONST          reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    LPAREN          reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    ICONST          reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    FCONST          reduce using rule 149 (assignment_operator -> ANDEQUAL .)
    CCONST          reduce using rule 149 (assignment_operator -> ANDEQUAL .)


state 191

    (150) assignment_operator -> OREQUAL .

    PLUSPLUS        reduce using rule 150 (assignment_operator -> OREQUAL .)
    MINUSMINUS      reduce using rule 150 (assignment_operator -> OREQUAL .)
    SIZEOF          reduce using rule 150 (assignment_operator -> OREQUAL .)
    AND             reduce using rule 150 (assignment_operator -> OREQUAL .)
    TIMES           reduce using rule 150 (assignment_operator -> OREQUAL .)
    PLUS            reduce using rule 150 (assignment_operator -> OREQUAL .)
    MINUS           reduce using rule 150 (assignment_operator -> OREQUAL .)
    NOT             reduce using rule 150 (assignment_operator -> OREQUAL .)
    LNOT            reduce using rule 150 (assignment_operator -> OREQUAL .)
    ID              reduce using rule 150 (assignment_operator -> OREQUAL .)
    SCONST          reduce using rule 150 (assignment_operator -> OREQUAL .)
    LPAREN          reduce using rule 150 (assignment_operator -> OREQUAL .)
    ICONST          reduce using rule 150 (assignment_operator -> OREQUAL .)
    FCONST          reduce using rule 150 (assignment_operator -> OREQUAL .)
    CCONST          reduce using rule 150 (assignment_operator -> OREQUAL .)


state 192

    (151) assignment_operator -> XOREQUAL .

    PLUSPLUS        reduce using rule 151 (assignment_operator -> XOREQUAL .)
    MINUSMINUS      reduce using rule 151 (assignment_operator -> XOREQUAL .)
    SIZEOF          reduce using rule 151 (assignment_operator -> XOREQUAL .)
    AND             reduce using rule 151 (assignment_operator -> XOREQUAL .)
    TIMES           reduce using rule 151 (assignment_operator -> XOREQUAL .)
    PLUS            reduce using rule 151 (assignment_operator -> XOREQUAL .)
    MINUS           reduce using rule 151 (assignment_operator -> XOREQUAL .)
    NOT             reduce using rule 151 (assignment_operator -> XOREQUAL .)
    LNOT            reduce using rule 151 (assignment_operator -> XOREQUAL .)
    ID              reduce using rule 151 (assignment_operator -> XOREQUAL .)
    SCONST          reduce using rule 151 (assignment_operator -> XOREQUAL .)
    LPAREN          reduce using rule 151 (assignment_operator -> XOREQUAL .)
    ICONST          reduce using rule 151 (assignment_operator -> XOREQUAL .)
    FCONST          reduce using rule 151 (assignment_operator -> XOREQUAL .)
    CCONST          reduce using rule 151 (assignment_operator -> XOREQUAL .)


state 193

    (153) conditional_expression -> logical_or_expression CONDOP . expression COLON conditional_expression
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    logical_or_expression          shift and go to state 99
    expression                     shift and go to state 270
    conditional_expression         shift and go to state 97
    assignment_expression          shift and go to state 96
    unary_expression               shift and go to state 98
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 194

    (156) logical_or_expression -> logical_or_expression LOR . logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    logical_and_expression         shift and go to state 271
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 195

    (198) postfix_expression -> postfix_expression LBRACKET . expression RBRACKET
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    postfix_expression             shift and go to state 100
    expression                     shift and go to state 272
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 196

    (199) postfix_expression -> postfix_expression LPAREN . argument_expression_list RPAREN
    (200) postfix_expression -> postfix_expression LPAREN . RPAREN
    (209) argument_expression_list -> . assignment_expression
    (210) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    RPAREN          shift and go to state 274
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    postfix_expression             shift and go to state 100
    argument_expression_list       shift and go to state 273
    assignment_expression          shift and go to state 275
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 197

    (201) postfix_expression -> postfix_expression PERIOD . ID

    ID              shift and go to state 276


state 198

    (202) postfix_expression -> postfix_expression ARROW . ID

    ID              shift and go to state 277


state 199

    (203) postfix_expression -> postfix_expression PLUSPLUS .

    LBRACKET        reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    LPAREN          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    PERIOD          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    ARROW           reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    EQUALS          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    TIMESEQUAL      reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    DIVEQUAL        reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    MODEQUAL        reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUSEQUAL       reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUSEQUAL      reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    LSHIFTEQUAL     reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    RSHIFTEQUAL     reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    ANDEQUAL        reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    OREQUAL         reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    XOREQUAL        reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    TIMES           reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    DIVIDE          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    MOD             reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUS            reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUS           reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    LSHIFT          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    RSHIFT          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    LT              reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    GT              reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    LE              reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    GE              reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    EQ              reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    NE              reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    AND             reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    XOR             reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    OR              reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    LAND            reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    CONDOP          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    LOR             reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    COMMA           reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    SEMI            reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    RBRACKET        reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    COLON           reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    RPAREN          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)
    RBRACE          reduce using rule 203 (postfix_expression -> postfix_expression PLUSPLUS .)


state 200

    (204) postfix_expression -> postfix_expression MINUSMINUS .

    LBRACKET        reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    LPAREN          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    PERIOD          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    ARROW           reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    EQUALS          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    TIMESEQUAL      reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    DIVEQUAL        reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    MODEQUAL        reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUSEQUAL       reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUSEQUAL      reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    LSHIFTEQUAL     reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    RSHIFTEQUAL     reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    ANDEQUAL        reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    OREQUAL         reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    XOREQUAL        reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    TIMES           reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    DIVIDE          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    MOD             reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUS            reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUS           reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    LSHIFT          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    RSHIFT          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    LT              reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    GT              reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    LE              reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    GE              reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    EQ              reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    NE              reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    AND             reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    XOR             reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    OR              reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    LAND            reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    CONDOP          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    LOR             reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    COMMA           reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    SEMI            reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    RBRACKET        reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    COLON           reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    RPAREN          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)
    RBRACE          reduce using rule 204 (postfix_expression -> postfix_expression MINUSMINUS .)


state 201

    (186) unary_expression -> PLUSPLUS unary_expression .

    EQUALS          reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    TIMESEQUAL      reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    DIVEQUAL        reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    MODEQUAL        reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    PLUSEQUAL       reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    MINUSEQUAL      reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    LSHIFTEQUAL     reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    RSHIFTEQUAL     reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    ANDEQUAL        reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    OREQUAL         reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    XOREQUAL        reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    TIMES           reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    DIVIDE          reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    MOD             reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    PLUS            reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    MINUS           reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    LSHIFT          reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    RSHIFT          reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    LT              reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    GT              reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    LE              reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    GE              reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    EQ              reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    NE              reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    AND             reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    XOR             reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    OR              reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    LAND            reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    CONDOP          reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    LOR             reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    COMMA           reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    SEMI            reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    RBRACKET        reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    COLON           reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    RPAREN          reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)
    RBRACE          reduce using rule 186 (unary_expression -> PLUSPLUS unary_expression .)


state 202

    (208) primary_expression -> LPAREN . expression RPAREN
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 169
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 203

    (187) unary_expression -> MINUSMINUS unary_expression .

    EQUALS          reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    TIMESEQUAL      reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    DIVEQUAL        reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    MODEQUAL        reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    PLUSEQUAL       reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    MINUSEQUAL      reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    LSHIFTEQUAL     reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    RSHIFTEQUAL     reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    ANDEQUAL        reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    OREQUAL         reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    XOREQUAL        reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    TIMES           reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    DIVIDE          reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    MOD             reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    PLUS            reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    MINUS           reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    LSHIFT          reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    RSHIFT          reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    LT              reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    GT              reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    LE              reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    GE              reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    EQ              reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    NE              reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    AND             reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    XOR             reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    OR              reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    LAND            reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    CONDOP          reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    LOR             reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    COMMA           reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    SEMI            reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    RBRACKET        reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    COLON           reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    RPAREN          reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)
    RBRACE          reduce using rule 187 (unary_expression -> MINUSMINUS unary_expression .)


state 204

    (188) unary_expression -> unary_operator cast_expression .

    EQUALS          reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    TIMESEQUAL      reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    DIVEQUAL        reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    MODEQUAL        reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    PLUSEQUAL       reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    MINUSEQUAL      reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    LSHIFTEQUAL     reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    RSHIFTEQUAL     reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    ANDEQUAL        reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    OREQUAL         reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    XOREQUAL        reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    TIMES           reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    DIVIDE          reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    MOD             reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    PLUS            reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    MINUS           reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    LSHIFT          reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    RSHIFT          reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    LT              reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    GT              reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    LE              reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    GE              reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    EQ              reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    NE              reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    AND             reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    XOR             reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    OR              reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    LAND            reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    CONDOP          reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    LOR             reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    COMMA           reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    SEMI            reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    RBRACKET        reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    COLON           reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    RPAREN          reduce using rule 188 (unary_expression -> unary_operator cast_expression .)
    RBRACE          reduce using rule 188 (unary_expression -> unary_operator cast_expression .)


state 205

    (189) unary_expression -> SIZEOF unary_expression .

    EQUALS          reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    TIMESEQUAL      reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    DIVEQUAL        reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    MODEQUAL        reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    PLUSEQUAL       reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    MINUSEQUAL      reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    LSHIFTEQUAL     reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    RSHIFTEQUAL     reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    ANDEQUAL        reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    OREQUAL         reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    XOREQUAL        reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    TIMES           reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    DIVIDE          reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    MOD             reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    PLUS            reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    MINUS           reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    LSHIFT          reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    RSHIFT          reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    LT              reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    GT              reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    LE              reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    GE              reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    EQ              reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    NE              reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    AND             reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    XOR             reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    OR              reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    LAND            reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    CONDOP          reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    LOR             reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    COMMA           reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    SEMI            reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    RBRACKET        reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    COLON           reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    RPAREN          reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)
    RBRACE          reduce using rule 189 (unary_expression -> SIZEOF unary_expression .)


state 206

    (190) unary_expression -> SIZEOF LPAREN . type_name RPAREN
    (208) primary_expression -> LPAREN . expression RPAREN
    (94) type_name -> . specifier_qualifier_list abstract_declarator_opt
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    ENUM            shift and go to state 36
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    type_name                      shift and go to state 278
    expression                     shift and go to state 169
    specifier_qualifier_list       shift and go to state 171
    assignment_expression          shift and go to state 96
    type_specifier                 shift and go to state 149
    type_qualifier                 shift and go to state 150
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    struct_or_union                shift and go to state 35
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 207

    (158) logical_and_expression -> logical_and_expression LAND . inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    inclusive_or_expression        shift and go to state 279
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 208

    (160) inclusive_or_expression -> inclusive_or_expression OR . exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    exclusive_or_expression        shift and go to state 280
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 209

    (162) exclusive_or_expression -> exclusive_or_expression XOR . and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    and_expression                 shift and go to state 281
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 210

    (164) and_expression -> and_expression AND . equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    equality_expression            shift and go to state 282
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 211

    (166) equality_expression -> equality_expression EQ . relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    relational_expression          shift and go to state 283
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 212

    (167) equality_expression -> equality_expression NE . relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    relational_expression          shift and go to state 284
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 213

    (169) relational_expression -> relational_expression LT . shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    shift_expression               shift and go to state 285
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 214

    (170) relational_expression -> relational_expression GT . shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    shift_expression               shift and go to state 286
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 215

    (171) relational_expression -> relational_expression LE . shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    shift_expression               shift and go to state 287
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 216

    (172) relational_expression -> relational_expression GE . shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    shift_expression               shift and go to state 288
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 217

    (174) shift_expression -> shift_expression LSHIFT . additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    additive_expression            shift and go to state 289
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 218

    (175) shift_expression -> shift_expression RSHIFT . additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    additive_expression            shift and go to state 290
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 219

    (177) additive_expression -> additive_expression PLUS . multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    multiplicative_expression      shift and go to state 291
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 220

    (178) additive_expression -> additive_expression MINUS . multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    multiplicative_expression      shift and go to state 292
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 221

    (180) multiplicative_expression -> multiplicative_expression TIMES . cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    cast_expression                shift and go to state 293
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 222

    (181) multiplicative_expression -> multiplicative_expression DIVIDE . cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    cast_expression                shift and go to state 294
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 223

    (182) multiplicative_expression -> multiplicative_expression MOD . cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    cast_expression                shift and go to state 295
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 224

    (71) direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .

    LBRACKET        reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    LPAREN          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    LBRACE          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    AUTO            reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    REGISTER        reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    STATIC          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    EXTERN          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    TYPEDEF         reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    VOID            reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    BOOL            reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    CHAR            reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    SHORT           reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    INT             reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    LONG            reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    FLOAT           reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    DOUBLE          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    SIGNED          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    UNSIGNED        reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    TYPEID          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    CONST           reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    VOLATILE        reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    ENUM            reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    STRUCT          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    UNION           reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    EQUALS          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    SEMI            reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    COMMA           reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    RPAREN          reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)
    COLON           reduce using rule 71 (direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET .)


state 225

    (72) direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .

    LBRACKET        reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    LPAREN          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    LBRACE          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    AUTO            reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    REGISTER        reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    STATIC          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    EXTERN          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    TYPEDEF         reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    VOID            reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    BOOL            reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    CHAR            reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    SHORT           reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    INT             reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    LONG            reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    FLOAT           reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    DOUBLE          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    SIGNED          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    UNSIGNED        reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    TYPEID          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    CONST           reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    VOLATILE        reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    ENUM            reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    STRUCT          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    UNION           reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    EQUALS          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    SEMI            reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    COMMA           reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    RPAREN          reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    COLON           reduce using rule 72 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)


state 226

    (73) direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .

    LBRACKET        reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    LPAREN          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    LBRACE          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    AUTO            reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    REGISTER        reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    STATIC          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    EXTERN          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    TYPEDEF         reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    VOID            reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    BOOL            reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    CHAR            reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    SHORT           reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    INT             reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    LONG            reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    FLOAT           reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    DOUBLE          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    SIGNED          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    UNSIGNED        reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    TYPEID          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    CONST           reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    VOLATILE        reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    ENUM            reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    STRUCT          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    UNION           reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    EQUALS          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    SEMI            reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    COMMA           reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    RPAREN          reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)
    COLON           reduce using rule 73 (direct_declarator -> direct_declarator LPAREN identifier_list RPAREN .)


state 227

    (88) identifier_list -> identifier_list COMMA . ID

    ID              shift and go to state 296


state 228

    (82) parameter_type_list -> parameter_list COMMA . ELLIPSIS
    (84) parameter_list -> parameter_list COMMA . parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    ELLIPSIS        shift and go to state 297
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    parameter_declaration          shift and go to state 298
    declaration_specifiers         shift and go to state 141
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 229

    (85) parameter_declaration -> declaration_specifiers declarator .

    COMMA           reduce using rule 85 (parameter_declaration -> declaration_specifiers declarator .)
    RPAREN          reduce using rule 85 (parameter_declaration -> declaration_specifiers declarator .)


state 230

    (86) parameter_declaration -> declaration_specifiers abstract_declarator_opt .

    COMMA           reduce using rule 86 (parameter_declaration -> declaration_specifiers abstract_declarator_opt .)
    RPAREN          reduce using rule 86 (parameter_declaration -> declaration_specifiers abstract_declarator_opt .)


state 231

    (67) declarator -> pointer . direct_declarator
    (97) abstract_declarator -> pointer .
    (98) abstract_declarator -> pointer . direct_abstract_declarator
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN
    (100) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (101) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET
    (102) direct_abstract_declarator -> . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (104) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    COMMA           reduce using rule 97 (abstract_declarator -> pointer .)
    RPAREN          reduce using rule 97 (abstract_declarator -> pointer .)
    ID              shift and go to state 33
    LPAREN          shift and go to state 234
    LBRACKET        shift and go to state 235

    direct_declarator              shift and go to state 52
    direct_abstract_declarator     shift and go to state 299

state 232

    (95) abstract_declarator_opt -> empty .

    COMMA           reduce using rule 95 (abstract_declarator_opt -> empty .)
    RPAREN          reduce using rule 95 (abstract_declarator_opt -> empty .)


state 233

    (96) abstract_declarator_opt -> abstract_declarator .

    COMMA           reduce using rule 96 (abstract_declarator_opt -> abstract_declarator .)
    RPAREN          reduce using rule 96 (abstract_declarator_opt -> abstract_declarator .)


state 234

    (70) direct_declarator -> LPAREN . declarator RPAREN
    (100) direct_abstract_declarator -> LPAREN . abstract_declarator RPAREN
    (104) direct_abstract_declarator -> LPAREN . parameter_type_list_opt RPAREN
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . pointer direct_abstract_declarator
    (99) abstract_declarator -> . direct_abstract_declarator
    (107) parameter_type_list_opt -> . empty
    (108) parameter_type_list_opt -> . parameter_type_list
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN
    (100) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (101) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET
    (102) direct_abstract_declarator -> . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (104) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN
    (214) empty -> .
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 234
    LBRACKET        shift and go to state 235
    RPAREN          reduce using rule 214 (empty -> .)
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    declarator                     shift and go to state 58
    abstract_declarator            shift and go to state 300
    parameter_type_list_opt        shift and go to state 301
    pointer                        shift and go to state 231
    direct_declarator              shift and go to state 11
    direct_abstract_declarator     shift and go to state 236
    empty                          shift and go to state 302
    parameter_type_list            shift and go to state 303
    parameter_list                 shift and go to state 138
    parameter_declaration          shift and go to state 140
    declaration_specifiers         shift and go to state 141
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 235

    (102) direct_abstract_declarator -> LBRACKET . constant_expression_opt RBRACKET
    (105) constant_expression_opt -> . empty
    (106) constant_expression_opt -> . constant_expression
    (214) empty -> .
    (154) constant_expression -> . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    RBRACKET        reduce using rule 214 (empty -> .)
    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    constant_expression_opt        shift and go to state 304
    empty                          shift and go to state 129
    constant_expression            shift and go to state 130
    conditional_expression         shift and go to state 131
    logical_or_expression          shift and go to state 99
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 236

    (99) abstract_declarator -> direct_abstract_declarator .
    (101) direct_abstract_declarator -> direct_abstract_declarator . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> direct_abstract_declarator . LPAREN parameter_type_list_opt RPAREN

    COMMA           reduce using rule 99 (abstract_declarator -> direct_abstract_declarator .)
    RPAREN          reduce using rule 99 (abstract_declarator -> direct_abstract_declarator .)
    LBRACKET        shift and go to state 305
    LPAREN          shift and go to state 306


state 237

    (39) struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list . RBRACE
    (45) struct_declaration_list -> struct_declaration_list . struct_declaration
    (50) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    RBRACE          shift and go to state 307
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    struct_or_union                shift and go to state 35
    struct_declaration             shift and go to state 239
    specifier_qualifier_list       shift and go to state 148
    type_specifier                 shift and go to state 149
    type_qualifier                 shift and go to state 150
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 238

    (40) struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .

    AUTO            reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    REGISTER        reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    STATIC          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    EXTERN          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    TYPEDEF         reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    VOID            reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    BOOL            reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    CHAR            reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    SHORT           reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    INT             reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    LONG            reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    FLOAT           reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    DOUBLE          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    SIGNED          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    UNSIGNED        reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    TYPEID          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    CONST           reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    VOLATILE        reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    ENUM            reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    STRUCT          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    UNION           reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    SEMI            reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    TIMES           reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    ID              reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    LPAREN          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    LBRACKET        reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    COMMA           reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    RPAREN          reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)
    COLON           reduce using rule 40 (struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE .)


state 239

    (45) struct_declaration_list -> struct_declaration_list struct_declaration .

    RBRACE          reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOID            reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    BOOL            reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CHAR            reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SHORT           reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    INT             reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    LONG            reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    FLOAT           reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    DOUBLE          reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SIGNED          reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNSIGNED        reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    TYPEID          reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CONST           reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOLATILE        reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    ENUM            reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    STRUCT          reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNION           reduce using rule 45 (struct_declaration_list -> struct_declaration_list struct_declaration .)


state 240

    (50) struct_declaration -> specifier_qualifier_list struct_declarator_list . SEMI
    (56) struct_declarator_list -> struct_declarator_list . COMMA struct_declarator

    SEMI            shift and go to state 308
    COMMA           shift and go to state 309


state 241

    (55) struct_declarator_list -> struct_declarator .

    SEMI            reduce using rule 55 (struct_declarator_list -> struct_declarator .)
    COMMA           reduce using rule 55 (struct_declarator_list -> struct_declarator .)


state 242

    (57) struct_declarator -> declarator .
    (58) struct_declarator -> declarator . COLON constant_expression

    SEMI            reduce using rule 57 (struct_declarator -> declarator .)
    COMMA           reduce using rule 57 (struct_declarator -> declarator .)
    COLON           shift and go to state 310


state 243

    (59) struct_declarator -> COLON . constant_expression
    (154) constant_expression -> . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    constant_expression            shift and go to state 311
    conditional_expression         shift and go to state 131
    logical_or_expression          shift and go to state 99
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 244

    (51) specifier_qualifier_list -> type_specifier specifier_qualifier_list .

    COLON           reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    TIMES           reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    ID              reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    LPAREN          reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    LBRACKET        reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    RPAREN          reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)


state 245

    (53) specifier_qualifier_list -> type_qualifier specifier_qualifier_list .

    COLON           reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    TIMES           reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    ID              reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    LPAREN          reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    LBRACKET        reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    RPAREN          reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)


state 246

    (60) enum_specifier -> ENUM ID LBRACE enumerator_list . RBRACE
    (64) enumerator_list -> enumerator_list . COMMA enumerator

    RBRACE          shift and go to state 312
    COMMA           shift and go to state 248


state 247

    (61) enum_specifier -> ENUM LBRACE enumerator_list RBRACE .

    AUTO            reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    REGISTER        reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    STATIC          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    EXTERN          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    TYPEDEF         reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    VOID            reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    BOOL            reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    CHAR            reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    SHORT           reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    INT             reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    LONG            reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    FLOAT           reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    DOUBLE          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    SIGNED          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    UNSIGNED        reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    TYPEID          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    CONST           reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    VOLATILE        reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    ENUM            reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    STRUCT          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    UNION           reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    SEMI            reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    TIMES           reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    ID              reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    LPAREN          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    LBRACKET        reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    COMMA           reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    RPAREN          reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)
    COLON           reduce using rule 61 (enum_specifier -> ENUM LBRACE enumerator_list RBRACE .)


state 248

    (64) enumerator_list -> enumerator_list COMMA . enumerator
    (65) enumerator -> . ID
    (66) enumerator -> . ID EQUALS constant_expression

    ID              shift and go to state 154

    enumerator                     shift and go to state 313

state 249

    (66) enumerator -> ID EQUALS . constant_expression
    (154) constant_expression -> . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    constant_expression            shift and go to state 314
    conditional_expression         shift and go to state 131
    logical_or_expression          shift and go to state 99
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 250

    (90) initializer -> LBRACE initializer_list . RBRACE
    (91) initializer -> LBRACE initializer_list . COMMA RBRACE
    (93) initializer_list -> initializer_list . COMMA initializer

    RBRACE          shift and go to state 315
    COMMA           shift and go to state 316


state 251

    (92) initializer_list -> initializer .

    RBRACE          reduce using rule 92 (initializer_list -> initializer .)
    COMMA           reduce using rule 92 (initializer_list -> initializer .)


state 252

    (119) compound_statement -> LBRACE declaration_list statement_list RBRACE .

    AUTO            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    REGISTER        reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    STATIC          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    EXTERN          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    TYPEDEF         reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    VOID            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    BOOL            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    CHAR            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    SHORT           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    INT             reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    LONG            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    FLOAT           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    DOUBLE          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    SIGNED          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    UNSIGNED        reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    TYPEID          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    CONST           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    VOLATILE        reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    TIMES           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ID              reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    LPAREN          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ENUM            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    STRUCT          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    UNION           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    $end            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    RBRACE          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    CASE            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    DEFAULT         reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    LBRACE          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    IF              reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    SWITCH          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    WHILE           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    FOR             reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    DO              reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    GOTO            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    CONTINUE        reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    BREAK           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    RETURN          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    PLUSPLUS        reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    MINUSMINUS      reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    SIZEOF          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    AND             reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    PLUS            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    MINUS           reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    NOT             reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    LNOT            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    SCONST          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ICONST          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    FCONST          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    CCONST          reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    SEMI            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ELSE            reduce using rule 119 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)


state 253

    (115) labeled_statement -> ID COLON statement .

    RBRACE          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    ID              reduce using rule 115 (labeled_statement -> ID COLON statement .)
    CASE            reduce using rule 115 (labeled_statement -> ID COLON statement .)
    DEFAULT         reduce using rule 115 (labeled_statement -> ID COLON statement .)
    LBRACE          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    IF              reduce using rule 115 (labeled_statement -> ID COLON statement .)
    SWITCH          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    WHILE           reduce using rule 115 (labeled_statement -> ID COLON statement .)
    FOR             reduce using rule 115 (labeled_statement -> ID COLON statement .)
    DO              reduce using rule 115 (labeled_statement -> ID COLON statement .)
    GOTO            reduce using rule 115 (labeled_statement -> ID COLON statement .)
    CONTINUE        reduce using rule 115 (labeled_statement -> ID COLON statement .)
    BREAK           reduce using rule 115 (labeled_statement -> ID COLON statement .)
    RETURN          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    PLUSPLUS        reduce using rule 115 (labeled_statement -> ID COLON statement .)
    MINUSMINUS      reduce using rule 115 (labeled_statement -> ID COLON statement .)
    SIZEOF          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    AND             reduce using rule 115 (labeled_statement -> ID COLON statement .)
    TIMES           reduce using rule 115 (labeled_statement -> ID COLON statement .)
    PLUS            reduce using rule 115 (labeled_statement -> ID COLON statement .)
    MINUS           reduce using rule 115 (labeled_statement -> ID COLON statement .)
    NOT             reduce using rule 115 (labeled_statement -> ID COLON statement .)
    LNOT            reduce using rule 115 (labeled_statement -> ID COLON statement .)
    SCONST          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    LPAREN          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    ICONST          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    FCONST          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    CCONST          reduce using rule 115 (labeled_statement -> ID COLON statement .)
    SEMI            reduce using rule 115 (labeled_statement -> ID COLON statement .)
    ELSE            reduce using rule 115 (labeled_statement -> ID COLON statement .)


state 254

    (116) labeled_statement -> CASE constant_expression COLON . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    statement                      shift and go to state 317
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    expression                     shift and go to state 86
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 255

    (117) labeled_statement -> DEFAULT COLON statement .

    RBRACE          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    ID              reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    CASE            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    DEFAULT         reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    LBRACE          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    IF              reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    SWITCH          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    WHILE           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    FOR             reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    DO              reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    GOTO            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    CONTINUE        reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    BREAK           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    RETURN          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    PLUSPLUS        reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    MINUSMINUS      reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    SIZEOF          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    AND             reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    TIMES           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    PLUS            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    MINUS           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    NOT             reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    LNOT            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    SCONST          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    LPAREN          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    ICONST          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    FCONST          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    CCONST          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    SEMI            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    ELSE            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)


state 256

    (125) selection_statement -> IF LPAREN expression . RPAREN statement
    (126) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (138) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 318
    COMMA           shift and go to state 172


state 257

    (208) primary_expression -> LPAREN expression RPAREN .

    LBRACKET        reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    ARROW           reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    TIMESEQUAL      reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    DIVEQUAL        reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    MODEQUAL        reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    PLUSEQUAL       reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    MINUSEQUAL      reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    LSHIFTEQUAL     reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    RSHIFTEQUAL     reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    ANDEQUAL        reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    OREQUAL         reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    XOREQUAL        reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    CONDOP          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 208 (primary_expression -> LPAREN expression RPAREN .)


state 258

    (184) cast_expression -> LPAREN type_name RPAREN . cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    cast_expression                shift and go to state 319
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 259

    (94) type_name -> specifier_qualifier_list abstract_declarator_opt .

    RPAREN          reduce using rule 94 (type_name -> specifier_qualifier_list abstract_declarator_opt .)


state 260

    (97) abstract_declarator -> pointer .
    (98) abstract_declarator -> pointer . direct_abstract_declarator
    (100) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (101) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET
    (102) direct_abstract_declarator -> . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (104) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    RPAREN          reduce using rule 97 (abstract_declarator -> pointer .)
    LPAREN          shift and go to state 261
    LBRACKET        shift and go to state 235

    direct_abstract_declarator     shift and go to state 299

state 261

    (100) direct_abstract_declarator -> LPAREN . abstract_declarator RPAREN
    (104) direct_abstract_declarator -> LPAREN . parameter_type_list_opt RPAREN
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . pointer direct_abstract_declarator
    (99) abstract_declarator -> . direct_abstract_declarator
    (107) parameter_type_list_opt -> . empty
    (108) parameter_type_list_opt -> . parameter_type_list
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (100) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (101) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET
    (102) direct_abstract_declarator -> . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (104) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN
    (214) empty -> .
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    TIMES           shift and go to state 32
    LPAREN          shift and go to state 261
    LBRACKET        shift and go to state 235
    RPAREN          reduce using rule 214 (empty -> .)
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    abstract_declarator            shift and go to state 300
    parameter_type_list_opt        shift and go to state 301
    pointer                        shift and go to state 260
    direct_abstract_declarator     shift and go to state 236
    empty                          shift and go to state 302
    parameter_type_list            shift and go to state 303
    parameter_list                 shift and go to state 138
    parameter_declaration          shift and go to state 140
    declaration_specifiers         shift and go to state 141
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 262

    (138) expression -> expression COMMA assignment_expression .

    COMMA           reduce using rule 138 (expression -> expression COMMA assignment_expression .)
    SEMI            reduce using rule 138 (expression -> expression COMMA assignment_expression .)
    RPAREN          reduce using rule 138 (expression -> expression COMMA assignment_expression .)
    COLON           reduce using rule 138 (expression -> expression COMMA assignment_expression .)
    RBRACKET        reduce using rule 138 (expression -> expression COMMA assignment_expression .)


state 263

    (127) selection_statement -> SWITCH LPAREN expression . RPAREN statement
    (138) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 320
    COMMA           shift and go to state 172


state 264

    (128) iteration_statement -> WHILE LPAREN expression . RPAREN statement
    (138) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 321
    COMMA           shift and go to state 172


state 265

    (129) iteration_statement -> FOR LPAREN expression_opt . SEMI expression_opt SEMI expression_opt RPAREN statement

    SEMI            shift and go to state 322


state 266

    (130) iteration_statement -> DO statement WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 323


state 267

    (131) jump_statement -> GOTO ID SEMI .

    RBRACE          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    ID              reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    CASE            reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    DEFAULT         reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    LBRACE          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    IF              reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    SWITCH          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    WHILE           reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    FOR             reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    DO              reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    GOTO            reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    CONTINUE        reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    BREAK           reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    RETURN          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    PLUSPLUS        reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    MINUSMINUS      reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    SIZEOF          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    AND             reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    TIMES           reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    PLUS            reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    MINUS           reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    NOT             reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    LNOT            reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    SCONST          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    LPAREN          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    ICONST          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    FCONST          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    CCONST          reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    SEMI            reduce using rule 131 (jump_statement -> GOTO ID SEMI .)
    ELSE            reduce using rule 131 (jump_statement -> GOTO ID SEMI .)


state 268

    (134) jump_statement -> RETURN expression_opt SEMI .

    RBRACE          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    ID              reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    CASE            reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    DEFAULT         reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    LBRACE          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    IF              reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    SWITCH          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    WHILE           reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    FOR             reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    DO              reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    GOTO            reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    CONTINUE        reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    BREAK           reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    RETURN          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    PLUSPLUS        reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    MINUSMINUS      reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    SIZEOF          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    AND             reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    TIMES           reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    PLUS            reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    MINUS           reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    NOT             reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    LNOT            reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    SCONST          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    LPAREN          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    ICONST          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    FCONST          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    CCONST          reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    SEMI            reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)
    ELSE            reduce using rule 134 (jump_statement -> RETURN expression_opt SEMI .)


state 269

    (140) assignment_expression -> unary_expression assignment_operator assignment_expression .

    COMMA           reduce using rule 140 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    SEMI            reduce using rule 140 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RPAREN          reduce using rule 140 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RBRACE          reduce using rule 140 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COLON           reduce using rule 140 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RBRACKET        reduce using rule 140 (assignment_expression -> unary_expression assignment_operator assignment_expression .)


state 270

    (153) conditional_expression -> logical_or_expression CONDOP expression . COLON conditional_expression
    (138) expression -> expression . COMMA assignment_expression

    COLON           shift and go to state 324
    COMMA           shift and go to state 172


state 271

    (156) logical_or_expression -> logical_or_expression LOR logical_and_expression .
    (158) logical_and_expression -> logical_and_expression . LAND inclusive_or_expression

    CONDOP          reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    LOR             reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    COMMA           reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    SEMI            reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    RBRACKET        reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    COLON           reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    RPAREN          reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    RBRACE          reduce using rule 156 (logical_or_expression -> logical_or_expression LOR logical_and_expression .)
    LAND            shift and go to state 207


state 272

    (198) postfix_expression -> postfix_expression LBRACKET expression . RBRACKET
    (138) expression -> expression . COMMA assignment_expression

    RBRACKET        shift and go to state 325
    COMMA           shift and go to state 172


state 273

    (199) postfix_expression -> postfix_expression LPAREN argument_expression_list . RPAREN
    (210) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 326
    COMMA           shift and go to state 327


state 274

    (200) postfix_expression -> postfix_expression LPAREN RPAREN .

    LBRACKET        reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LPAREN          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PERIOD          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ARROW           reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUSMINUS      reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    EQUALS          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    TIMESEQUAL      reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    DIVEQUAL        reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MODEQUAL        reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUSEQUAL      reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LSHIFTEQUAL     reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RSHIFTEQUAL     reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ANDEQUAL        reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    OREQUAL         reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    XOREQUAL        reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    TIMES           reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MOD             reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUS            reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUS           reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LSHIFT          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RSHIFT          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LT              reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    GT              reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LE              reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    GE              reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    EQ              reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    NE              reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    AND             reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    XOR             reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    OR              reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LAND            reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    CONDOP          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LOR             reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    COMMA           reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    SEMI            reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    COLON           reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RPAREN          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RBRACE          reduce using rule 200 (postfix_expression -> postfix_expression LPAREN RPAREN .)


state 275

    (209) argument_expression_list -> assignment_expression .

    RPAREN          reduce using rule 209 (argument_expression_list -> assignment_expression .)
    COMMA           reduce using rule 209 (argument_expression_list -> assignment_expression .)


state 276

    (201) postfix_expression -> postfix_expression PERIOD ID .

    LBRACKET        reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    LPAREN          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    PERIOD          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    ARROW           reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    PLUSPLUS        reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    MINUSMINUS      reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    EQUALS          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    TIMESEQUAL      reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    DIVEQUAL        reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    MODEQUAL        reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    PLUSEQUAL       reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    MINUSEQUAL      reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    LSHIFTEQUAL     reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    RSHIFTEQUAL     reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    ANDEQUAL        reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    OREQUAL         reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    XOREQUAL        reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    TIMES           reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    DIVIDE          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    MOD             reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    PLUS            reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    MINUS           reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    LSHIFT          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    RSHIFT          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    LT              reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    GT              reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    LE              reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    GE              reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    EQ              reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    NE              reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    AND             reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    XOR             reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    OR              reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    LAND            reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    CONDOP          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    LOR             reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    COMMA           reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    SEMI            reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    RBRACKET        reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    COLON           reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    RPAREN          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)
    RBRACE          reduce using rule 201 (postfix_expression -> postfix_expression PERIOD ID .)


state 277

    (202) postfix_expression -> postfix_expression ARROW ID .

    LBRACKET        reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    LPAREN          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    PERIOD          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    ARROW           reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    PLUSPLUS        reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    MINUSMINUS      reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    EQUALS          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    TIMESEQUAL      reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    DIVEQUAL        reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    MODEQUAL        reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    PLUSEQUAL       reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    MINUSEQUAL      reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    LSHIFTEQUAL     reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    RSHIFTEQUAL     reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    ANDEQUAL        reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    OREQUAL         reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    XOREQUAL        reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    TIMES           reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    DIVIDE          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    MOD             reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    PLUS            reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    MINUS           reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    LSHIFT          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    RSHIFT          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    LT              reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    GT              reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    LE              reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    GE              reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    EQ              reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    NE              reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    AND             reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    XOR             reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    OR              reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    LAND            reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    CONDOP          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    LOR             reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    COMMA           reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    SEMI            reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    RBRACKET        reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    COLON           reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    RPAREN          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)
    RBRACE          reduce using rule 202 (postfix_expression -> postfix_expression ARROW ID .)


state 278

    (190) unary_expression -> SIZEOF LPAREN type_name . RPAREN

    RPAREN          shift and go to state 328


state 279

    (158) logical_and_expression -> logical_and_expression LAND inclusive_or_expression .
    (160) inclusive_or_expression -> inclusive_or_expression . OR exclusive_or_expression

    LAND            reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    CONDOP          reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    LOR             reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    COMMA           reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    SEMI            reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    RBRACKET        reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    COLON           reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    RPAREN          reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    RBRACE          reduce using rule 158 (logical_and_expression -> logical_and_expression LAND inclusive_or_expression .)
    OR              shift and go to state 208


state 280

    (160) inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .
    (162) exclusive_or_expression -> exclusive_or_expression . XOR and_expression

    OR              reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    LAND            reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    CONDOP          reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    LOR             reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    COMMA           reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    SEMI            reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RBRACKET        reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    COLON           reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RPAREN          reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RBRACE          reduce using rule 160 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    XOR             shift and go to state 209


state 281

    (162) exclusive_or_expression -> exclusive_or_expression XOR and_expression .
    (164) and_expression -> and_expression . AND equality_expression

    XOR             reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    OR              reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    LAND            reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    CONDOP          reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    LOR             reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    COMMA           reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    SEMI            reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RBRACKET        reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    COLON           reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RPAREN          reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RBRACE          reduce using rule 162 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    AND             shift and go to state 210


state 282

    (164) and_expression -> and_expression AND equality_expression .
    (166) equality_expression -> equality_expression . EQ relational_expression
    (167) equality_expression -> equality_expression . NE relational_expression

    AND             reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    XOR             reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    OR              reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    LAND            reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    CONDOP          reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    LOR             reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    COMMA           reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    SEMI            reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    RBRACKET        reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    COLON           reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    RPAREN          reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    RBRACE          reduce using rule 164 (and_expression -> and_expression AND equality_expression .)
    EQ              shift and go to state 211
    NE              shift and go to state 212


state 283

    (166) equality_expression -> equality_expression EQ relational_expression .
    (169) relational_expression -> relational_expression . LT shift_expression
    (170) relational_expression -> relational_expression . GT shift_expression
    (171) relational_expression -> relational_expression . LE shift_expression
    (172) relational_expression -> relational_expression . GE shift_expression

    EQ              reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    NE              reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    AND             reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    XOR             reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    OR              reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    LAND            reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    CONDOP          reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    LOR             reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    COMMA           reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    SEMI            reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACKET        reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    COLON           reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACE          reduce using rule 166 (equality_expression -> equality_expression EQ relational_expression .)
    LT              shift and go to state 213
    GT              shift and go to state 214
    LE              shift and go to state 215
    GE              shift and go to state 216


state 284

    (167) equality_expression -> equality_expression NE relational_expression .
    (169) relational_expression -> relational_expression . LT shift_expression
    (170) relational_expression -> relational_expression . GT shift_expression
    (171) relational_expression -> relational_expression . LE shift_expression
    (172) relational_expression -> relational_expression . GE shift_expression

    EQ              reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    NE              reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    AND             reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    XOR             reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    OR              reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    LAND            reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    CONDOP          reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    LOR             reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    COMMA           reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    SEMI            reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    RBRACKET        reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    COLON           reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    RPAREN          reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    RBRACE          reduce using rule 167 (equality_expression -> equality_expression NE relational_expression .)
    LT              shift and go to state 213
    GT              shift and go to state 214
    LE              shift and go to state 215
    GE              shift and go to state 216


state 285

    (169) relational_expression -> relational_expression LT shift_expression .
    (174) shift_expression -> shift_expression . LSHIFT additive_expression
    (175) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    GT              reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    LE              reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    GE              reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    EQ              reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    NE              reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    AND             reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    XOR             reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    OR              reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    LAND            reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    CONDOP          reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    LOR             reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    COMMA           reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    SEMI            reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    RBRACKET        reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    COLON           reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    RPAREN          reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    RBRACE          reduce using rule 169 (relational_expression -> relational_expression LT shift_expression .)
    LSHIFT          shift and go to state 217
    RSHIFT          shift and go to state 218


state 286

    (170) relational_expression -> relational_expression GT shift_expression .
    (174) shift_expression -> shift_expression . LSHIFT additive_expression
    (175) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    GT              reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    LE              reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    GE              reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    EQ              reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    NE              reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    AND             reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    XOR             reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    OR              reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    LAND            reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    CONDOP          reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    LOR             reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    COMMA           reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    SEMI            reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    RBRACKET        reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    COLON           reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    RPAREN          reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    RBRACE          reduce using rule 170 (relational_expression -> relational_expression GT shift_expression .)
    LSHIFT          shift and go to state 217
    RSHIFT          shift and go to state 218


state 287

    (171) relational_expression -> relational_expression LE shift_expression .
    (174) shift_expression -> shift_expression . LSHIFT additive_expression
    (175) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    GT              reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    LE              reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    GE              reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    EQ              reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    NE              reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    AND             reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    XOR             reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    OR              reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    LAND            reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    CONDOP          reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    LOR             reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    COMMA           reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    SEMI            reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    RBRACKET        reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    COLON           reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    RPAREN          reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    RBRACE          reduce using rule 171 (relational_expression -> relational_expression LE shift_expression .)
    LSHIFT          shift and go to state 217
    RSHIFT          shift and go to state 218


state 288

    (172) relational_expression -> relational_expression GE shift_expression .
    (174) shift_expression -> shift_expression . LSHIFT additive_expression
    (175) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    GT              reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    LE              reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    GE              reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    EQ              reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    NE              reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    AND             reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    XOR             reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    OR              reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    LAND            reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    CONDOP          reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    LOR             reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    COMMA           reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    SEMI            reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    RBRACKET        reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    COLON           reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    RPAREN          reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    RBRACE          reduce using rule 172 (relational_expression -> relational_expression GE shift_expression .)
    LSHIFT          shift and go to state 217
    RSHIFT          shift and go to state 218


state 289

    (174) shift_expression -> shift_expression LSHIFT additive_expression .
    (177) additive_expression -> additive_expression . PLUS multiplicative_expression
    (178) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RSHIFT          reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LT              reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    GT              reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LE              reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    GE              reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    EQ              reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    NE              reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    AND             reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    XOR             reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    OR              reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LAND            reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    CONDOP          reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LOR             reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    COMMA           reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    SEMI            reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RBRACKET        reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    COLON           reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RPAREN          reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RBRACE          reduce using rule 174 (shift_expression -> shift_expression LSHIFT additive_expression .)
    PLUS            shift and go to state 219
    MINUS           shift and go to state 220


state 290

    (175) shift_expression -> shift_expression RSHIFT additive_expression .
    (177) additive_expression -> additive_expression . PLUS multiplicative_expression
    (178) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RSHIFT          reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LT              reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    GT              reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LE              reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    GE              reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    EQ              reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    NE              reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    AND             reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    XOR             reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    OR              reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LAND            reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    CONDOP          reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LOR             reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    COMMA           reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    SEMI            reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RBRACKET        reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    COLON           reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RPAREN          reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RBRACE          reduce using rule 175 (shift_expression -> shift_expression RSHIFT additive_expression .)
    PLUS            shift and go to state 219
    MINUS           shift and go to state 220


state 291

    (177) additive_expression -> additive_expression PLUS multiplicative_expression .
    (180) multiplicative_expression -> multiplicative_expression . TIMES cast_expression
    (181) multiplicative_expression -> multiplicative_expression . DIVIDE cast_expression
    (182) multiplicative_expression -> multiplicative_expression . MOD cast_expression

    PLUS            reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LSHIFT          reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RSHIFT          reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LT              reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LE              reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GE              reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ              reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NE              reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND             reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    XOR             reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR              reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LAND            reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CONDOP          reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LOR             reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    SEMI            reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACKET        reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COLON           reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACE          reduce using rule 177 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    TIMES           shift and go to state 221
    DIVIDE          shift and go to state 222
    MOD             shift and go to state 223


state 292

    (178) additive_expression -> additive_expression MINUS multiplicative_expression .
    (180) multiplicative_expression -> multiplicative_expression . TIMES cast_expression
    (181) multiplicative_expression -> multiplicative_expression . DIVIDE cast_expression
    (182) multiplicative_expression -> multiplicative_expression . MOD cast_expression

    PLUS            reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LSHIFT          reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RSHIFT          reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LT              reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LE              reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GE              reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ              reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NE              reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND             reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    XOR             reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR              reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LAND            reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CONDOP          reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LOR             reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    SEMI            reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACKET        reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COLON           reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RPAREN          reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACE          reduce using rule 178 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    TIMES           shift and go to state 221
    DIVIDE          shift and go to state 222
    MOD             shift and go to state 223


state 293

    (180) multiplicative_expression -> multiplicative_expression TIMES cast_expression .

    TIMES           reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    DIVIDE          reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    MOD             reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    PLUS            reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    MINUS           reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    LSHIFT          reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    RSHIFT          reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    LT              reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    GT              reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    LE              reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    GE              reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    EQ              reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    NE              reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    AND             reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    XOR             reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    OR              reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    LAND            reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    CONDOP          reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    LOR             reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    COMMA           reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    SEMI            reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    RBRACKET        reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    COLON           reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    RPAREN          reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)
    RBRACE          reduce using rule 180 (multiplicative_expression -> multiplicative_expression TIMES cast_expression .)


state 294

    (181) multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .

    TIMES           reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    DIVIDE          reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    MOD             reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    PLUS            reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    MINUS           reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    LSHIFT          reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    RSHIFT          reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    LT              reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    GT              reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    LE              reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    GE              reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    EQ              reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    NE              reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    AND             reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    XOR             reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    OR              reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    LAND            reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    CONDOP          reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    LOR             reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    COMMA           reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    SEMI            reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    RBRACKET        reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    COLON           reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    RPAREN          reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)
    RBRACE          reduce using rule 181 (multiplicative_expression -> multiplicative_expression DIVIDE cast_expression .)


state 295

    (182) multiplicative_expression -> multiplicative_expression MOD cast_expression .

    TIMES           reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    DIVIDE          reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    MOD             reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    PLUS            reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    MINUS           reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    LSHIFT          reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    RSHIFT          reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    LT              reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    GT              reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    LE              reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    GE              reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    EQ              reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    NE              reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    AND             reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    XOR             reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    OR              reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    LAND            reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    CONDOP          reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    LOR             reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    COMMA           reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    SEMI            reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    RBRACKET        reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    COLON           reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    RPAREN          reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)
    RBRACE          reduce using rule 182 (multiplicative_expression -> multiplicative_expression MOD cast_expression .)


state 296

    (88) identifier_list -> identifier_list COMMA ID .

    RPAREN          reduce using rule 88 (identifier_list -> identifier_list COMMA ID .)
    COMMA           reduce using rule 88 (identifier_list -> identifier_list COMMA ID .)


state 297

    (82) parameter_type_list -> parameter_list COMMA ELLIPSIS .

    RPAREN          reduce using rule 82 (parameter_type_list -> parameter_list COMMA ELLIPSIS .)


state 298

    (84) parameter_list -> parameter_list COMMA parameter_declaration .

    COMMA           reduce using rule 84 (parameter_list -> parameter_list COMMA parameter_declaration .)
    RPAREN          reduce using rule 84 (parameter_list -> parameter_list COMMA parameter_declaration .)


state 299

    (98) abstract_declarator -> pointer direct_abstract_declarator .
    (101) direct_abstract_declarator -> direct_abstract_declarator . LBRACKET constant_expression_opt RBRACKET
    (103) direct_abstract_declarator -> direct_abstract_declarator . LPAREN parameter_type_list_opt RPAREN

    COMMA           reduce using rule 98 (abstract_declarator -> pointer direct_abstract_declarator .)
    RPAREN          reduce using rule 98 (abstract_declarator -> pointer direct_abstract_declarator .)
    LBRACKET        shift and go to state 305
    LPAREN          shift and go to state 306


state 300

    (100) direct_abstract_declarator -> LPAREN abstract_declarator . RPAREN

    RPAREN          shift and go to state 329


state 301

    (104) direct_abstract_declarator -> LPAREN parameter_type_list_opt . RPAREN

    RPAREN          shift and go to state 330


state 302

    (107) parameter_type_list_opt -> empty .

    RPAREN          reduce using rule 107 (parameter_type_list_opt -> empty .)


state 303

    (108) parameter_type_list_opt -> parameter_type_list .

    RPAREN          reduce using rule 108 (parameter_type_list_opt -> parameter_type_list .)


state 304

    (102) direct_abstract_declarator -> LBRACKET constant_expression_opt . RBRACKET

    RBRACKET        shift and go to state 331


state 305

    (101) direct_abstract_declarator -> direct_abstract_declarator LBRACKET . constant_expression_opt RBRACKET
    (105) constant_expression_opt -> . empty
    (106) constant_expression_opt -> . constant_expression
    (214) empty -> .
    (154) constant_expression -> . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    RBRACKET        reduce using rule 214 (empty -> .)
    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    constant_expression_opt        shift and go to state 332
    empty                          shift and go to state 129
    constant_expression            shift and go to state 130
    conditional_expression         shift and go to state 131
    logical_or_expression          shift and go to state 99
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 306

    (103) direct_abstract_declarator -> direct_abstract_declarator LPAREN . parameter_type_list_opt RPAREN
    (107) parameter_type_list_opt -> . empty
    (108) parameter_type_list_opt -> . parameter_type_list
    (214) empty -> .
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (13) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (14) declaration_specifiers -> . type_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_qualifier declaration_specifiers
    (16) declaration_specifiers -> . storage_class_specifier
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_qualifier
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . BOOL
    (26) type_specifier -> . CHAR
    (27) type_specifier -> . SHORT
    (28) type_specifier -> . INT
    (29) type_specifier -> . LONG
    (30) type_specifier -> . FLOAT
    (31) type_specifier -> . DOUBLE
    (32) type_specifier -> . SIGNED
    (33) type_specifier -> . UNSIGNED
    (34) type_specifier -> . struct_or_union_specifier
    (35) type_specifier -> . enum_specifier
    (36) type_specifier -> . TYPEID
    (37) type_qualifier -> . CONST
    (38) type_qualifier -> . VOLATILE
    (39) struct_or_union_specifier -> . struct_or_union ID LBRACE struct_declaration_list RBRACE
    (40) struct_or_union_specifier -> . struct_or_union LBRACE struct_declaration_list RBRACE
    (41) struct_or_union_specifier -> . struct_or_union ID
    (60) enum_specifier -> . ENUM ID LBRACE enumerator_list RBRACE
    (61) enum_specifier -> . ENUM LBRACE enumerator_list RBRACE
    (62) enum_specifier -> . ENUM ID
    (42) struct_or_union -> . STRUCT
    (43) struct_or_union -> . UNION

    RPAREN          reduce using rule 214 (empty -> .)
    AUTO            shift and go to state 12
    REGISTER        shift and go to state 13
    STATIC          shift and go to state 14
    EXTERN          shift and go to state 15
    TYPEDEF         shift and go to state 16
    VOID            shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    TYPEID          shift and go to state 29
    CONST           shift and go to state 30
    VOLATILE        shift and go to state 31
    ENUM            shift and go to state 36
    STRUCT          shift and go to state 37
    UNION           shift and go to state 38

    parameter_type_list_opt        shift and go to state 333
    empty                          shift and go to state 302
    parameter_type_list            shift and go to state 303
    parameter_list                 shift and go to state 138
    parameter_declaration          shift and go to state 140
    declaration_specifiers         shift and go to state 141
    storage_class_specifier        shift and go to state 7
    type_specifier                 shift and go to state 8
    type_qualifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 35

state 307

    (39) struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .

    AUTO            reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    REGISTER        reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    STATIC          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    EXTERN          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    TYPEDEF         reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    VOID            reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    BOOL            reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    CHAR            reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    SHORT           reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    INT             reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    LONG            reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    FLOAT           reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    DOUBLE          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    SIGNED          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    UNSIGNED        reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    TYPEID          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    CONST           reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    VOLATILE        reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    ENUM            reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    STRUCT          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    UNION           reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    SEMI            reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    TIMES           reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    ID              reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    LPAREN          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    LBRACKET        reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    COMMA           reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    RPAREN          reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)
    COLON           reduce using rule 39 (struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE .)


state 308

    (50) struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .

    RBRACE          reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    VOID            reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    BOOL            reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    CHAR            reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    SHORT           reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    INT             reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    LONG            reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    FLOAT           reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    DOUBLE          reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    SIGNED          reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    UNSIGNED        reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    TYPEID          reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    CONST           reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    VOLATILE        reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    ENUM            reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    STRUCT          reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    UNION           reduce using rule 50 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)


state 309

    (56) struct_declarator_list -> struct_declarator_list COMMA . struct_declarator
    (57) struct_declarator -> . declarator
    (58) struct_declarator -> . declarator COLON constant_expression
    (59) struct_declarator -> . COLON constant_expression
    (67) declarator -> . pointer direct_declarator
    (68) declarator -> . direct_declarator
    (75) pointer -> . TIMES type_qualifier_list
    (76) pointer -> . TIMES
    (77) pointer -> . TIMES type_qualifier_list pointer
    (78) pointer -> . TIMES pointer
    (69) direct_declarator -> . ID
    (70) direct_declarator -> . LPAREN declarator RPAREN
    (71) direct_declarator -> . direct_declarator LBRACKET constant_expression_opt RBRACKET
    (72) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (73) direct_declarator -> . direct_declarator LPAREN identifier_list RPAREN
    (74) direct_declarator -> . direct_declarator LPAREN RPAREN

    COLON           shift and go to state 243
    TIMES           shift and go to state 32
    ID              shift and go to state 33
    LPAREN          shift and go to state 34

    struct_declarator              shift and go to state 334
    declarator                     shift and go to state 242
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 11

state 310

    (58) struct_declarator -> declarator COLON . constant_expression
    (154) constant_expression -> . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    constant_expression            shift and go to state 335
    conditional_expression         shift and go to state 131
    logical_or_expression          shift and go to state 99
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 311

    (59) struct_declarator -> COLON constant_expression .

    SEMI            reduce using rule 59 (struct_declarator -> COLON constant_expression .)
    COMMA           reduce using rule 59 (struct_declarator -> COLON constant_expression .)


state 312

    (60) enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .

    AUTO            reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    REGISTER        reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    STATIC          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    EXTERN          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    TYPEDEF         reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    VOID            reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    BOOL            reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    CHAR            reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    SHORT           reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    INT             reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    LONG            reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    FLOAT           reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    DOUBLE          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    SIGNED          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    UNSIGNED        reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    TYPEID          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    CONST           reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    VOLATILE        reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    ENUM            reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    STRUCT          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    UNION           reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    SEMI            reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    TIMES           reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    ID              reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    LPAREN          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    LBRACKET        reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    COMMA           reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    RPAREN          reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)
    COLON           reduce using rule 60 (enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE .)


state 313

    (64) enumerator_list -> enumerator_list COMMA enumerator .

    RBRACE          reduce using rule 64 (enumerator_list -> enumerator_list COMMA enumerator .)
    COMMA           reduce using rule 64 (enumerator_list -> enumerator_list COMMA enumerator .)


state 314

    (66) enumerator -> ID EQUALS constant_expression .

    RBRACE          reduce using rule 66 (enumerator -> ID EQUALS constant_expression .)
    COMMA           reduce using rule 66 (enumerator -> ID EQUALS constant_expression .)


state 315

    (90) initializer -> LBRACE initializer_list RBRACE .

    SEMI            reduce using rule 90 (initializer -> LBRACE initializer_list RBRACE .)
    COMMA           reduce using rule 90 (initializer -> LBRACE initializer_list RBRACE .)
    RBRACE          reduce using rule 90 (initializer -> LBRACE initializer_list RBRACE .)


state 316

    (91) initializer -> LBRACE initializer_list COMMA . RBRACE
    (93) initializer_list -> initializer_list COMMA . initializer
    (89) initializer -> . assignment_expression
    (90) initializer -> . LBRACE initializer_list RBRACE
    (91) initializer -> . LBRACE initializer_list COMMA RBRACE
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    RBRACE          shift and go to state 336
    LBRACE          shift and go to state 158
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    initializer                    shift and go to state 337
    assignment_expression          shift and go to state 157
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 317

    (116) labeled_statement -> CASE constant_expression COLON statement .

    RBRACE          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    ID              reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    CASE            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    DEFAULT         reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    LBRACE          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    IF              reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    SWITCH          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    WHILE           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    FOR             reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    DO              reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    GOTO            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    CONTINUE        reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    BREAK           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    RETURN          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    PLUSPLUS        reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    MINUSMINUS      reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    SIZEOF          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    AND             reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    TIMES           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    PLUS            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    MINUS           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    NOT             reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    LNOT            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    SCONST          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    LPAREN          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    ICONST          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    FCONST          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    CCONST          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    SEMI            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    ELSE            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)


state 318

    (125) selection_statement -> IF LPAREN expression RPAREN . statement
    (126) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 86
    statement                      shift and go to state 338
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 319

    (184) cast_expression -> LPAREN type_name RPAREN cast_expression .

    TIMES           reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    DIVIDE          reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MOD             reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    PLUS            reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MINUS           reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LSHIFT          reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RSHIFT          reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LT              reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    GT              reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LE              reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    GE              reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    EQ              reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    NE              reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    AND             reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    XOR             reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    OR              reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LAND            reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    CONDOP          reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LOR             reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    COMMA           reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    SEMI            reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RBRACKET        reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    COLON           reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RPAREN          reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    EQUALS          reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    TIMESEQUAL      reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    DIVEQUAL        reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MODEQUAL        reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    PLUSEQUAL       reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MINUSEQUAL      reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LSHIFTEQUAL     reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RSHIFTEQUAL     reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    ANDEQUAL        reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    OREQUAL         reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    XOREQUAL        reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RBRACE          reduce using rule 184 (cast_expression -> LPAREN type_name RPAREN cast_expression .)


state 320

    (127) selection_statement -> SWITCH LPAREN expression RPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 86
    statement                      shift and go to state 339
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 321

    (128) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 86
    statement                      shift and go to state 340
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 322

    (129) iteration_statement -> FOR LPAREN expression_opt SEMI . expression_opt SEMI expression_opt RPAREN statement
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression_opt                 shift and go to state 341
    empty                          shift and go to state 95
    expression                     shift and go to state 86
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 323

    (130) iteration_statement -> DO statement WHILE LPAREN . expression RPAREN SEMI
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 342
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 324

    (153) conditional_expression -> logical_or_expression CONDOP expression COLON . conditional_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST

    LPAREN          shift and go to state 133
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    logical_or_expression          shift and go to state 99
    conditional_expression         shift and go to state 343
    logical_and_expression         shift and go to state 106
    inclusive_or_expression        shift and go to state 114
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126
    cast_expression                shift and go to state 104
    unary_expression               shift and go to state 132
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    primary_expression             shift and go to state 107
    constant                       shift and go to state 115

state 325

    (198) postfix_expression -> postfix_expression LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PERIOD          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ARROW           reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    TIMESEQUAL      reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    DIVEQUAL        reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MODEQUAL        reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUSEQUAL       reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUSEQUAL      reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LSHIFTEQUAL     reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RSHIFTEQUAL     reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ANDEQUAL        reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    OREQUAL         reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    XOREQUAL        reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    NE              reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    XOR             reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LAND            reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    CONDOP          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LOR             reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 198 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)


state 326

    (199) postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .

    LBRACKET        reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LPAREN          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PERIOD          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    ARROW           reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PLUSPLUS        reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MINUSMINUS      reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    EQUALS          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    TIMES           reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MOD             reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PLUS            reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MINUS           reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LT              reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    GT              reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LE              reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    GE              reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    EQ              reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    NE              reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    AND             reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    XOR             reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    OR              reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LAND            reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    CONDOP          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LOR             reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    COMMA           reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    SEMI            reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    COLON           reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RPAREN          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RBRACE          reduce using rule 199 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)


state 327

    (210) argument_expression_list -> argument_expression_list COMMA . assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    assignment_expression          shift and go to state 344
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 328

    (190) unary_expression -> SIZEOF LPAREN type_name RPAREN .

    EQUALS          reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    TIMESEQUAL      reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    DIVEQUAL        reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MODEQUAL        reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    PLUSEQUAL       reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MINUSEQUAL      reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LSHIFTEQUAL     reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RSHIFTEQUAL     reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    ANDEQUAL        reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    OREQUAL         reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    XOREQUAL        reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    TIMES           reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    DIVIDE          reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MOD             reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    PLUS            reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MINUS           reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LSHIFT          reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RSHIFT          reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LT              reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    GT              reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LE              reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    GE              reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    EQ              reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    NE              reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    AND             reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    XOR             reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    OR              reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LAND            reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    CONDOP          reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LOR             reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    COMMA           reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    SEMI            reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RBRACKET        reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    COLON           reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RPAREN          reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RBRACE          reduce using rule 190 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)


state 329

    (100) direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .

    LBRACKET        reduce using rule 100 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)
    LPAREN          reduce using rule 100 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)
    COMMA           reduce using rule 100 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)
    RPAREN          reduce using rule 100 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)


state 330

    (104) direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .

    LBRACKET        reduce using rule 104 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)
    LPAREN          reduce using rule 104 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)
    COMMA           reduce using rule 104 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)
    RPAREN          reduce using rule 104 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)


state 331

    (102) direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET .

    LBRACKET        reduce using rule 102 (direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET .)
    LPAREN          reduce using rule 102 (direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET .)
    COMMA           reduce using rule 102 (direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET .)
    RPAREN          reduce using rule 102 (direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET .)


state 332

    (101) direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt . RBRACKET

    RBRACKET        shift and go to state 345


state 333

    (103) direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt . RPAREN

    RPAREN          shift and go to state 346


state 334

    (56) struct_declarator_list -> struct_declarator_list COMMA struct_declarator .

    SEMI            reduce using rule 56 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)
    COMMA           reduce using rule 56 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)


state 335

    (58) struct_declarator -> declarator COLON constant_expression .

    SEMI            reduce using rule 58 (struct_declarator -> declarator COLON constant_expression .)
    COMMA           reduce using rule 58 (struct_declarator -> declarator COLON constant_expression .)


state 336

    (91) initializer -> LBRACE initializer_list COMMA RBRACE .

    SEMI            reduce using rule 91 (initializer -> LBRACE initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 91 (initializer -> LBRACE initializer_list COMMA RBRACE .)
    RBRACE          reduce using rule 91 (initializer -> LBRACE initializer_list COMMA RBRACE .)


state 337

    (93) initializer_list -> initializer_list COMMA initializer .

    RBRACE          reduce using rule 93 (initializer_list -> initializer_list COMMA initializer .)
    COMMA           reduce using rule 93 (initializer_list -> initializer_list COMMA initializer .)


state 338

    (125) selection_statement -> IF LPAREN expression RPAREN statement .
    (126) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    GOTO            reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SIZEOF          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    AND             reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SCONST          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ICONST          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FCONST          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CCONST          reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 347

  ! ELSE            [ reduce using rule 125 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 339

    (127) selection_statement -> SWITCH LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    ID              reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CASE            reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    IF              reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    FOR             reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    DO              reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    GOTO            reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SIZEOF          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    AND             reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    NOT             reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SCONST          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    ICONST          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    FCONST          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CCONST          reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 127 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)


state 340

    (128) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    GOTO            reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SIZEOF          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    AND             reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SCONST          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ICONST          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FCONST          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CCONST          reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 128 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 341

    (129) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt . SEMI expression_opt RPAREN statement

    SEMI            shift and go to state 348


state 342

    (130) iteration_statement -> DO statement WHILE LPAREN expression . RPAREN SEMI
    (138) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 349
    COMMA           shift and go to state 172


state 343

    (153) conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression .

    COMMA           reduce using rule 153 (conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression .)
    SEMI            reduce using rule 153 (conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression .)
    RBRACKET        reduce using rule 153 (conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression .)
    COLON           reduce using rule 153 (conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression .)
    RPAREN          reduce using rule 153 (conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression .)
    RBRACE          reduce using rule 153 (conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression .)


state 344

    (210) argument_expression_list -> argument_expression_list COMMA assignment_expression .

    RPAREN          reduce using rule 210 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)
    COMMA           reduce using rule 210 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)


state 345

    (101) direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET .

    LBRACKET        reduce using rule 101 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET .)
    LPAREN          reduce using rule 101 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET .)
    COMMA           reduce using rule 101 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET .)
    RPAREN          reduce using rule 101 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET .)


state 346

    (103) direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .

    LBRACKET        reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)
    LPAREN          reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)
    COMMA           reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)
    RPAREN          reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)


state 347

    (126) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression                     shift and go to state 86
    statement                      shift and go to state 350
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression_opt                 shift and go to state 83
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 348

    (129) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI . expression_opt RPAREN statement
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    RPAREN          reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    ID              shift and go to state 134
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression_opt                 shift and go to state 351
    empty                          shift and go to state 95
    expression                     shift and go to state 86
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 349

    (130) iteration_statement -> DO statement WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 352


state 350

    (126) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CASE            reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SWITCH          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DO              reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    GOTO            reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONTINUE        reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BREAK           reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SIZEOF          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    AND             reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TIMES           reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUS            reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUS           reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LNOT            reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SCONST          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ICONST          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FCONST          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CCONST          reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SEMI            reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 126 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 351

    (129) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt . RPAREN statement

    RPAREN          shift and go to state 353


state 352

    (130) iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .

    RBRACE          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ID              reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CASE            reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DEFAULT         reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LBRACE          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SWITCH          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    GOTO            reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CONTINUE        reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SIZEOF          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    AND             reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    TIMES           reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LNOT            reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SCONST          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ICONST          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FCONST          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CCONST          reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 130 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)


state 353

    (129) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . expression_statement
    (111) statement -> . compound_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . ID COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (118) expression_statement -> . expression_opt SEMI
    (119) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (120) compound_statement -> . LBRACE statement_list RBRACE
    (121) compound_statement -> . LBRACE declaration_list RBRACE
    (122) compound_statement -> . LBRACE RBRACE
    (125) selection_statement -> . IF LPAREN expression RPAREN statement
    (126) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (127) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (128) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (129) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (130) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (131) jump_statement -> . GOTO ID SEMI
    (132) jump_statement -> . CONTINUE SEMI
    (133) jump_statement -> . BREAK SEMI
    (134) jump_statement -> . RETURN expression_opt SEMI
    (135) expression_opt -> . empty
    (136) expression_opt -> . expression
    (214) empty -> .
    (137) expression -> . assignment_expression
    (138) expression -> . expression COMMA assignment_expression
    (139) assignment_expression -> . conditional_expression
    (140) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (152) conditional_expression -> . logical_or_expression
    (153) conditional_expression -> . logical_or_expression CONDOP expression COLON conditional_expression
    (185) unary_expression -> . postfix_expression
    (186) unary_expression -> . PLUSPLUS unary_expression
    (187) unary_expression -> . MINUSMINUS unary_expression
    (188) unary_expression -> . unary_operator cast_expression
    (189) unary_expression -> . SIZEOF unary_expression
    (190) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (155) logical_or_expression -> . logical_and_expression
    (156) logical_or_expression -> . logical_or_expression LOR logical_and_expression
    (197) postfix_expression -> . primary_expression
    (198) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (199) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (200) postfix_expression -> . postfix_expression LPAREN RPAREN
    (201) postfix_expression -> . postfix_expression PERIOD ID
    (202) postfix_expression -> . postfix_expression ARROW ID
    (203) postfix_expression -> . postfix_expression PLUSPLUS
    (204) postfix_expression -> . postfix_expression MINUSMINUS
    (191) unary_operator -> . AND
    (192) unary_operator -> . TIMES
    (193) unary_operator -> . PLUS
    (194) unary_operator -> . MINUS
    (195) unary_operator -> . NOT
    (196) unary_operator -> . LNOT
    (157) logical_and_expression -> . inclusive_or_expression
    (158) logical_and_expression -> . logical_and_expression LAND inclusive_or_expression
    (205) primary_expression -> . ID
    (206) primary_expression -> . constant
    (207) primary_expression -> . SCONST
    (208) primary_expression -> . LPAREN expression RPAREN
    (159) inclusive_or_expression -> . exclusive_or_expression
    (160) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (211) constant -> . ICONST
    (212) constant -> . FCONST
    (213) constant -> . CCONST
    (161) exclusive_or_expression -> . and_expression
    (162) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (163) and_expression -> . equality_expression
    (164) and_expression -> . and_expression AND equality_expression
    (165) equality_expression -> . relational_expression
    (166) equality_expression -> . equality_expression EQ relational_expression
    (167) equality_expression -> . equality_expression NE relational_expression
    (168) relational_expression -> . shift_expression
    (169) relational_expression -> . relational_expression LT shift_expression
    (170) relational_expression -> . relational_expression GT shift_expression
    (171) relational_expression -> . relational_expression LE shift_expression
    (172) relational_expression -> . relational_expression GE shift_expression
    (173) shift_expression -> . additive_expression
    (174) shift_expression -> . shift_expression LSHIFT additive_expression
    (175) shift_expression -> . shift_expression RSHIFT additive_expression
    (176) additive_expression -> . multiplicative_expression
    (177) additive_expression -> . additive_expression PLUS multiplicative_expression
    (178) additive_expression -> . additive_expression MINUS multiplicative_expression
    (179) multiplicative_expression -> . cast_expression
    (180) multiplicative_expression -> . multiplicative_expression TIMES cast_expression
    (181) multiplicative_expression -> . multiplicative_expression DIVIDE cast_expression
    (182) multiplicative_expression -> . multiplicative_expression MOD cast_expression
    (183) cast_expression -> . unary_expression
    (184) cast_expression -> . LPAREN type_name RPAREN cast_expression

    ID              shift and go to state 80
    CASE            shift and go to state 81
    DEFAULT         shift and go to state 82
    LBRACE          shift and go to state 47
    IF              shift and go to state 84
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    DO              shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMI            reduce using rule 214 (empty -> .)
    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    SIZEOF          shift and go to state 105
    AND             shift and go to state 108
    TIMES           shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    LNOT            shift and go to state 113
    SCONST          shift and go to state 116
    LPAREN          shift and go to state 85
    ICONST          shift and go to state 118
    FCONST          shift and go to state 119
    CCONST          shift and go to state 120

    expression_opt                 shift and go to state 83
    statement                      shift and go to state 354
    labeled_statement              shift and go to state 74
    expression_statement           shift and go to state 75
    compound_statement             shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression                     shift and go to state 86
    empty                          shift and go to state 95
    assignment_expression          shift and go to state 96
    conditional_expression         shift and go to state 97
    unary_expression               shift and go to state 98
    logical_or_expression          shift and go to state 99
    postfix_expression             shift and go to state 100
    unary_operator                 shift and go to state 103
    cast_expression                shift and go to state 104
    logical_and_expression         shift and go to state 106
    primary_expression             shift and go to state 107
    inclusive_or_expression        shift and go to state 114
    constant                       shift and go to state 115
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 121
    equality_expression            shift and go to state 122
    relational_expression          shift and go to state 123
    shift_expression               shift and go to state 124
    additive_expression            shift and go to state 125
    multiplicative_expression      shift and go to state 126

state 354

    (129) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .

    RBRACE          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    ID              reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CASE            reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    DEFAULT         reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    LBRACE          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    IF              reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SWITCH          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    WHILE           reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    FOR             reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    DO              reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    GOTO            reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CONTINUE        reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    BREAK           reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    RETURN          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    PLUSPLUS        reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MINUSMINUS      reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SIZEOF          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    AND             reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    TIMES           reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    PLUS            reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MINUS           reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    NOT             reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    LNOT            reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SCONST          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    LPAREN          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    ICONST          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    FCONST          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CCONST          reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SEMI            reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    ELSE            reduce using rule 129 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 338 resolved as shift
